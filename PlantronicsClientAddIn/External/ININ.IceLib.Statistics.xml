<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ININ.IceLib.Statistics</name>
    </assembly>
    <members>
        <member name="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition">
            <summary>
            A collection of associated parameter types that define a valid parameter set for querying or watching a 
            statistic value.
            </summary>
            <remarks>
            The order of the parameter types that compose the definition is important.
            </remarks>
            <seealso cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.#ctor(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterTypeId})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> class.
            </summary>
            <param name="orderedTypes">The ordered types.</param>
            <exception cref="T:System.ArgumentException"><paramref name="orderedTypes"/> was <see langword="null"/>, or 
            contained a <see cref="T:ININ.IceLib.Statistics.ParameterType"/> multiple times.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.Contains(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> contains the specified 
            <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/>.
            </summary>
            <param name="parameterType">Type of the parameter.</param>
            <returns>
            <see langword="true"/> if the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> contains the specified 
            <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.Equals(ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_Equality(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_Inequality(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.CompareTo(ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Compares one <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>A 32-bit signed integer that indicates the lexical relationship.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_GreaterThan(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_GreaterThanOrEqual(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_LessThan(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.op_LessThanOrEqual(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetDefinition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery">
            <summary>
            Defines a query for <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>s that match a <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/>.
            </summary>
            <remarks>
            By default, the query will match all parameter values that fits the query definition.  The query can be refined
            to match only a specific parameter value by supplying a specific value for a given parameter type.  Once an 
            <see cref="P:ININ.IceLib.Statistics.ParameterValue.All"/> node is matched, all following parameter types must also be set to match 
            <see cref="P:ININ.IceLib.Statistics.ParameterValue.All"/>.
            </remarks>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.#ctor(ININ.IceLib.Statistics.AssociatedParameterSetDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.SetValueForParameterType(ININ.IceLib.Statistics.ParameterTypeId,System.String)">
            <summary>
            Sets the type of the value for parameter.
            </summary>
            <param name="parameterType">Type of the parameter.</param>
            <param name="parameterValue">The parameter value.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="parameterType"/> is not a member of the definition,
            or the <paramref name="parameterValue"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.GetValueForParameterType(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Gets the type of the value for parameter.
            </summary>
            <param name="parameterType">Type of the parameter.</param>
            <returns>The value for the specified <paramref name="parameterType"/>.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="parameterType"/> is not a member of the definition.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.ValueMatchesQuery(ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Indicates if the given <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> is a valid match to this 
            <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>.
            </summary>
            <param name="value">The value.</param>
            <returns><see langword="true"/> if the value matches the query; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.Equals(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.op_Equality(ININ.IceLib.Statistics.AssociatedParameterSetQuery,ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetQuery.op_Inequality(ININ.IceLib.Statistics.AssociatedParameterSetQuery,ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetQuery.QueryDefinition">
            <summary>
            Gets the query definition.
            </summary>
            <value>The query definition.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs">
            <summary>
            Details for an event notifying of a change to the results for a watched <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>.
            </summary>
            <seealso cref="E:ININ.IceLib.Statistics.ParameterValuesDepot.QueryResultsChanged"/>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs.Added">
            <summary>
            Gets the collection of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> that were added and now match the query.
            </summary>
            <value>The added <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs.Updated">
            <summary>
            Gets the collection of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> that were updated and still match the query.
            </summary>
            <value>The updated <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs.Removed">
            <summary>
            Gets the collection of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> that were removed and no longer match the query.
            </summary>
            <value>The removed <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.AssociatedParameterSetValue">
            <summary>
            Values for a set of associated parameter types.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>
            <seealso cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.#ctor(ININ.IceLib.Statistics.AssociatedParameterSetDefinition,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.DetailedParameterValue})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="parameterValues">The parameter values.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_Equality(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_Inequality(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.Equals(ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.CompareTo(ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_GreaterThan(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_GreaterThanOrEqual(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_LessThan(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.op_LessThanOrEqual(ININ.IceLib.Statistics.AssociatedParameterSetValue,ININ.IceLib.Statistics.AssociatedParameterSetValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.AssociatedParameterSetValue.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetValue.Definition">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> that defines the parameters types and order for 
            this <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.
            </summary>
            <value>The definition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.AssociatedParameterSetValue.Item(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Gets or sets the <see cref="P:ININ.IceLib.Statistics.ParameterValue.Value"/> for the <see cref="T:ININ.IceLib.Statistics.ParameterType"/> in this
            <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.
            </summary>
            <value>The <see cref="P:ININ.IceLib.Statistics.ParameterValue.Value"/> for the <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.</value>
            <exception cref="T:System.ArgumentException">The given <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is not a member of the 
            <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.BoundValueType">
            <summary>
            Represents the type of boundary conditions a statistic may have.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>
        </member>
        <member name="F:ININ.IceLib.Statistics.BoundValueType.None">
            <summary>The value has no boundaries.</summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.BoundValueType.Dynamic">
            <summary>The boundary value is dynamicly determined.</summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.BoundValueType.Fixed">
            <summary>The boundary value is fixed.</summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.DetailedParameterValue">
            <summary>
            <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> with additional display string and description.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.ParameterValue"/>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValue">
            <summary>
            Represents a parameter type and its value.
            A statistic parameter helps define which specific statistic is being dealt with.  For example, 
            an alert can be setup to trigger for a queue.  Using a parameter, that alert can be defined
            to only apply to specific members of a workgroup.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.#ctor(ININ.IceLib.Statistics.ParameterTypeId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> class.
            </summary>
            <param name="parameterTypeId">Type of the parameter.</param>
            <param name="parameterValue">The parameter's value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterTypeId"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.#ctor(ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> class.
            </summary>
            <param name="parameterValue">The parameter value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterValue"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.Equals(ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_Equality(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_Inequality(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.CompareTo(ININ.IceLib.Statistics.ParameterValue)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_GreaterThan(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_GreaterThanOrEqual(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_LessThan(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValue.op_LessThanOrEqual(ININ.IceLib.Statistics.ParameterValue,ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterValue.All">
            <summary>
            Value to use when indicating that all valid parameter values are to be used in calculating the statistic.
            </summary>
            <remarks>
            In some cases a statistic value may be rolled-up into a summary statistic value, such as interaction time
            across all interaction types.  Do not use this All value for that case.  In the case where a roll-up
            parameter value is available, the server will need to supply that value.  Use this all value when 
            performing an <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)"/>.
            </remarks>
            <seealso cref="F:ININ.IceLib.Statistics.FilteredParameterQuery.NoFilter"/>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterValue.Value">
            <summary>
            Gets the parameter value ID.
            </summary>
            <value>The parameter value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterValue.Type">
            <summary>
            Gets parameter type.
            </summary>
            <value>The parameter type.</value>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.#ctor(ININ.IceLib.Statistics.ParameterTypeId,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> class.
            </summary>
            <param name="parameterTypeId">Type of the parameter.</param>
            <param name="parameterValue">The parameter value.</param>
            <param name="parameterValueDisplayString">The parameter value display string.</param>
            <param name="parameterValueDescription">The parameter value description.</param>
            <exception cref="T:System.ArgumentNullException">One or more arguments is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.#ctor(ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> class.
            </summary>
            <param name="parameterValue">The parameter value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterValue"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.Equals(ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_Equality(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_Inequality(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.CompareTo(ININ.IceLib.Statistics.DetailedParameterValue)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_GreaterThan(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_GreaterThanOrEqual(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_LessThan(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.DetailedParameterValue.op_LessThanOrEqual(ININ.IceLib.Statistics.DetailedParameterValue,ININ.IceLib.Statistics.DetailedParameterValue)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.DetailedParameterValue.DisplayString">
            <summary>
            Gets the parameter value display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DetailedParameterValue.Description">
            <summary>
            Gets the description of the parameter.
            </summary>
            <value>The description of the parameter.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.DrillDown">
            <summary>
            Represents a drill down lookup.  If this data is present, additional
            drill down data is present and can be queried with <see cref="M:ININ.IceLib.Statistics.DrillDown.GetDrillDownData(ININ.IceLib.Connection.Session,System.String)"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.DrillDown.GetDrillDownData(ININ.IceLib.Connection.Session,System.String)">
            <summary>
            Retreive the drill down data for this drill down object.
            </summary>
            <param name="session">The session.</param>
            <param name="statisticKeyUri">The statistics definition ID to search against.</param>
            <returns>The drill down data.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="statisticKeyUri"/>
            length is zero.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDown.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDown.TypeHint">
            <summary>
            Gets the hint as to what the format is of the drill down data.
            </summary>
            <value>The type hint.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDown.HintString">
            <summary>
            Gets the string that gives a hint as to what this drill down data refers to.
            </summary>
            <value>The hint string.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.DrillDownData">
            <summary>
            Represents additional statistical information that can be retrieved via
            the drill down process.  See <see cref="T:ININ.IceLib.Statistics.DrillDown"/> for how to access
            this data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownData.StatisticKey">
            <summary>
            Gets the statistics key that this data applies to.
            </summary>
            <value>The statistics key.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownData.DrillDownId">
            <summary>
            Gets the drill down ID that this data applies to.
            </summary>
            <value>The drill down ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownData.Types">
            <summary>
            Gets a read only collection of the drill down data entries.
            </summary>
            <value>The types.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.DrillDownDataEntry">
            <summary>
            Represents a collection of data for a specified drill down.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownDataEntry.Name">
            <summary>
            Gets the drill down data entries name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownDataEntry.TypeHint">
            <summary>
            Gets a hint to the data type of the values.
            </summary>
            <value>The type hint.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownDataEntry.Id">
            <summary>
            The ID of this object.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.DrillDownDataEntry.Values">
            <summary>
            Gets a read only collection of values.  This
            is the actual data in the drill down.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.FilteredParameterQuery">
            <summary>
            Represents a query to retrieve a filtered list of the available values for a given parameter type.
            </summary>
            <remarks>
            A FilteredParameterQuery can be used to limit the number of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> returned by a query.  In some
            cases the server may have many thousand values for a particular <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.  In addition, a 
            collection of associated <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> instances may be used to further filter the results.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterQuery">
            <summary>
            Represents a query to list the available values for a given parameter type.
            <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> is used in <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)"/> to define
            what is being queried.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterQuery.#ctor(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> class.
            </summary>
            <param name="parameterType">Type of the parameter to query for.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQuery.ParameterType">
            <summary>
            Gets the type to query parameter values for.
            </summary>
            <remarks>
            The parameter values returned by the query will be of type ParameterType.
            </remarks>
            <value>The type of the parameter.</value>
        </member>
        <member name="F:ININ.IceLib.Statistics.FilteredParameterQuery.MaxAllowableReturned">
            <summary>
            This constant is used in a <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> to request the maximum number of results
            permitted by the system.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> may specify a maximum number of results to return for a given query.  The system
            also maintains an internal maximum number of results to return.  As such, even when the MaxAllowableReturned
            value is used in the <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/>, the system may not return all results, and instead return
            a portion of the results to the query.  
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Statistics.FilteredParameterQuery.NoFilter">
            <summary>
            This constant is used to specify no filter string in a <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/>.
            </summary>
            <seealso cref="P:ININ.IceLib.Statistics.ParameterValue.All"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.FilteredParameterQuery.#ctor(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> class.
            </summary>
            <param name="parameterType"><see cref="T:ININ.IceLib.Statistics.ParameterType"/> that is to be queried.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.FilteredParameterQuery.#ctor(ININ.IceLib.Statistics.ParameterTypeId,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> class.
            </summary>
            <param name="parameterType"><see cref="T:ININ.IceLib.Statistics.ParameterType"/> that is to be queried.</param>
            <param name="filterText">Text to filter the resulting <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> set with.</param>
            <param name="maxNumberToReturn">The maximum number of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to return.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="filterText"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.FilteredParameterQuery.#ctor(ININ.IceLib.Statistics.ParameterTypeId,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> class.
            </summary>
            <param name="parameterType"><see cref="T:ININ.IceLib.Statistics.ParameterType"/> that is to be queried.</param>
            <param name="associatedParameterValues">
            A collection of ParameterValues to use in filtering the results found for the <see cref="T:ININ.IceLib.Statistics.ParameterType"/> query.
            All <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> returned in the result to the query must have an association to each <see cref="T:ININ.IceLib.Statistics.ParameterValue"/>
            in the filter.  A <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> may appear only once for each <see cref="T:ININ.IceLib.Statistics.ParameterType"/> in the filter.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="associatedParameterValues"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.FilteredParameterQuery.#ctor(ININ.IceLib.Statistics.ParameterTypeId,System.String,System.Int32,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.FilteredParameterQuery"/> class.
            </summary>
            <param name="parameterType"><see cref="T:ININ.IceLib.Statistics.ParameterType"/> that is to be queried.</param>
            <param name="filterText">Text to filter the resulting <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> set with.</param>
            <param name="maxNumberToReturn">The maximum number of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to return.</param>
            <param name="associatedParameterValues">
            A collection of ParameterValues to use in filtering the results found for the <see cref="T:ININ.IceLib.Statistics.ParameterType"/> query.
            All <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> returned in the result to the query must have an association to each <see cref="T:ININ.IceLib.Statistics.ParameterValue"/>
            in the filter.  A <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> may appear only once for each <see cref="T:ININ.IceLib.Statistics.ParameterType"/> in the filter.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="filterText"/> or <paramref name="associatedParameterValues"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.FilteredParameterQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.FilteredParameterQuery.FilterText">
            <summary>
            Gets the filter text.
            </summary>
            <remarks>
            The filter text is applied to the results of the query.  For instance, if the query is for <see cref="T:ININ.IceLib.Statistics.ParameterType"/>
            Agent and the filter text is "Jones", only those ParameterValues that contain the string "Jones" will
            be returned.  If the results should not be filtered, set this property to an empty string.
            </remarks>
            <value>The filter text.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.FilteredParameterQuery.MaxNumberToReturn">
            <summary>
            Gets the max number to return.
            </summary>
            <remarks>
            If the server should return the maximum number of results possible, set this value to -1.
            </remarks>
            <value>The max number to return.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.FilteredParameterQuery.AssociatedParameterValues">
            <summary>
            Gets the ParameterValues that the results to this <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> must have an association with.
            </summary>
            <value>The collection of required ParameterValues.</value>
            <remarks>
            <p>A query may be further filtered by specifying relationships to other parameter types.  For instance,
            if the query is to return <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> of type Agent, the query could be further refined to only
            return values for Agents that are a members of Support Workgroup.  In this case, the 
            RelatedParameterValues collection would contain a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> Workgroup 
            with the value Support.</p>
            <p>To perform a query that returns only values that are associated to a <see cref="T:ININ.IceLib.Statistics.ParameterType"/>(s), but
            the specific <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> for that <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is not important, create a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> with the 
            required <see cref="T:ININ.IceLib.Statistics.ParameterType"/> and the <see cref="P:ININ.IceLib.Statistics.ParameterValue.Value"/> set to <see cref="P:ININ.IceLib.Statistics.ParameterValue.All"/>.
            </p>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.FilteredParameterQuery.ParameterValueKeyedCollection">
            <summary>
            Extending the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> for the purpose of storing our parameter filters is useful as
            it guarantees only a single <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> for each <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertActionTransform">
            <exclude/><summary>
            Xml Serialization and Deserialization of an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/>.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertActionTransform.ActionId">
             <summary>
             Gets or sets the action ID.
             </summary>
            <value>The action ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertActionTransform.TargetId">
            <summary>
            Gets or sets the target ID.
            </summary>
            <value>The target ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertActionTransform.NamedValuePairs">
            <summary>
            Gets or sets the named value pairs.
            </summary>
            <value>The named value pairs.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform.ConvertToAlertCondition(ININ.IceLib.Connection.Session)">
            <summary>
            Converts to <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/>.
            </summary>
            <returns>The alert condition.</returns>
            <exception cref="T:ININ.IceLib.IceLibException">
            An invalid combination of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertConditionType"/> and <see cref="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType"/> 
            were specified in the condition definition.
            </exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform.ConditionType">
            <summary>
            Gets or sets the type of the condition.
            </summary>
            <value>The type of the condition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionTransform.AlertConditionComparisonMode">
            <summary>
            Gets or sets the alert condition comparison mode.
            </summary>
            <value>The alert condition comparison mode.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertConditionType">
            <exclude/><summary>
            Data type of a condition used in signaling an alert on a statistic.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.Bool">
            <summary>
            A boolean condition.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.Integer">
            <summary>
            A numeric condition of integer type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.Double">
            <summary>
            A numeric condition of decimal type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.TimeStamp">
            <summary>
            A numeric condition evaluating a timestamp.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.TimeSpan">
            <summary>
            A numeric condition evaluating a timespan.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionType.String">
            <summary>
            A string condition.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType">
            <exclude/>
            <summary>
            Enums for condition comparisons.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.Unknown">
            <summary>
            Represents the condition has not been specified yet.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.IsNotAvailable">
            <summary>
            Repesents a condition where <see cref="P:ININ.IceLib.Statistics.StatisticValue.IsNull"/> is <see langword="true"/>, 
            which indicates <see langword="null"/>, or not set value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.IsAvailable">
            <summary>
            Repesents a condition where <see cref="P:ININ.IceLib.Statistics.StatisticValue.IsNull"/> is <see langword="false"/>, 
            which indicates a valid value other than <see langword="null"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.IsLessThan">
            <summary>
            Represents a condition where the numeric value is expected to be less than the minimum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.IsGreaterThan">
            <summary>
            Represents a condition where the numeric value is expected to be greater than the maximum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.Range">
            <summary>
            Represents a condition where the numeric value is between the lower and the upper bound (minimum and maximum).
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.EqualTo">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value is equal to the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.NotEqualTo">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value is not equal to the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.Contains">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value contains the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.DoesNotContain">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value does not contain the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertConditionComparisonType.MatchesPrefix">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value matches the prefix.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform.StatisticKey">
            <summary>
            Gets or sets the statistic key.
            </summary>
            <value>The statistic key.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertDefinitionTransform.Rules">
            <summary>
            Gets or sets the rules.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertRuleTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertRuleTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertRuleTransform.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
            <value>The condition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertRuleTransform.Severity">
            <summary>
            Gets or sets the severity.
            </summary>
            <value>The severity.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertRuleTransform.Actions">
            <summary>
            Gets or sets the actions.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.ConvertToAlertSetSubscriber">
            <summary>
            Converts to an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>.
            </summary>
            <returns>The alert set subscriber.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.Type">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.Action">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction"/>.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.IsSubscribed">
            <summary>
            Gets or sets a value indicating whether or not this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is subscribed.
            </summary>
            <value><see langword="true"/> if this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is subscribed; otherwise, <see langword="false"/></value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetSubscriberTransform.IsSubscriptionForced">
            <summary>
            Gets or sets a value indicating whether or not this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>'s subscription is forced.
            </summary>
            <value><see langword="true"/> if this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>'s subscription is forced; otherwise, <see langword="false"/></value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.ConvertToAlertSetCache(ININ.IceLib.Connection.Session)">
            <summary>
            Converts to an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <returns>The alert set cache.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.OwnerDisplayName">
            <summary>
            Gets or sets the owner display name.
            </summary>
            <value>The owner display name.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.CreatedString">
            <summary>
            Gets or sets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.ModifiedString">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.ModifiedBy">
            <summary>
            Gets or sets the modifier.
            </summary>
            <value>The modifier.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.SubscribedByOther">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform"/> is subscribed by anyone other than the current user.
            </summary>
            <value><see langword="true"/> if subscribed by others; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.SubscribedByUser">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform"/> is subscribed by the current user.
            </summary>
            <value><see langword="true"/> if subscribed by the user; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.AccessMode">
            <summary>
            Gets or sets the access mode.
            </summary>
            <value>The access mode.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Definitions">
            <summary>
            Gets or sets the definitions.
            </summary>
            <value>The definitions.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.AlertSetTransform.Subscribers">
            <summary>
            Gets or sets the subscribers.
            </summary>
            <value>The subscribers.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownTransform.TypeHint">
            <summary>
            Gets or sets the hint as to what the format is of the drill down data.
            </summary>
            <value>The type hint.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownTransform.HintStrings">
            <summary>
            Gets or sets the hint strings.
            </summary>
            <value>The hint strings.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownHintStringTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownHintStringTransform.Lang">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.DrillDownHintStringTransform.HintString">
            <summary>
            Gets or sets the hint string.
            </summary>
            <value>The hint string.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.InternalStatisticDefinitionFlags">
            <exclude/>
            <summary>
            Modifiers for a statistic definition.  For internal use only.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.InternalStatisticDefinitionFlags.SuppressInUI">
            <summary>
            Suppress this definition in the UI.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.InternalStatisticDefinitionFlags.SuppressInAlerts">
            <summary>
            Suppress this definition in alerts.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.NamedValuePairTransform">
            <exclude/><summary>
            Xml Serialization and Deserialization of a named-value pair found as part of an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/>.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.NamedValuePairTransform.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.NamedValuePairTransform.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetModifiers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetModifiers.None">
            <summary>No modifier.</summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetModifiers.ShouldBeSuppressed">
            <summary>The parameter set should be suppressed.</summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetTransform.ConvertModifiers">
            <summary>
            Converts the modifiers.
            </summary>
            <returns>The <see cref="T:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetModifiers"/>.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetTransform.ParameterTypes">
            <summary>
            Gets or sets the parameter types.
            </summary>
            <value>The parameter types.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterSetTransform.Modifiers">
            <summary>
            Gets or sets the modifiers.
            </summary>
            <value>The modifiers.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionLocalizationTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionLocalizationTransform.Locale">
            <summary>
            Gets or sets the locale.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionLocalizationTransform.DisplayString">
            <summary>
            Gets or sets the default display string.
            </summary>
            <value>The default display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionLocalizationTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.ConvertToParameterTypeDefinition(ININ.IceLib.Connection.Session)">
            <summary>
            Converts the current object to a parameter type definition.
            </summary>
            <param name="session">The session.</param>
            <returns>The parameter type definition.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.AccessControlLists">
            <summary>
            Gets or sets the access control lists of this object.
            </summary>
            <value>The access control lists.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.ParameterTypeDefinitionTransform.PreserveOrder">
            <summary>
            Gets the flag that determines if the display order should be preserved.
            </summary>
            <value>The flag for preserving display order.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCatalogSchemaTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCatalogSchemaTransform.GetCategory(ININ.IceLib.Connection.Session)">
            <summary>
            Creates a <see cref="T:ININ.IceLib.Statistics.StatisticCategory"/> from the data found in this instance.
            </summary>
            <param name="session">The session.</param>
            <returns>A collection containing the statistic category.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCatalogSchemaTransform.ReadStringStrippingAllWhiteSpace(System.String)">
            <summary>
            Reads the string stripping all white space.
            </summary>
            <param name="shaggyString">The shaggy string.</param>
            <returns>The stripped string.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCatalogSchemaTransform.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.ConvertToCategory">
            <summary>
            Creates a <see cref="T:ININ.IceLib.Statistics.StatisticCategory"/> from the data in this instance.
            </summary>
            <returns>The statistic category.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.GetDefinitions(ININ.IceLib.Connection.Session)">
            <summary>
            Gets the definitions that are members of this category.
            </summary>
            <param name="session">The session.</param>
            <returns>The statistic definitions.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.GetParameterTypeDefinitions(ININ.IceLib.Connection.Session)">
            <summary>
            Gets the parameter type definitions of this category.
            </summary>
            <param name="session">The session.</param>
            <returns>The statistic definitions.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.Definitions">
            <summary>
            Gets or sets the statistic definitions.
            </summary>
            <value>The statistic definitions.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.ParameterTypeDefinitions">
            <summary>
            Gets or sets the parameter type definitions.
            </summary>
            <value>The parameter type definitions.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.AccessControlRights">
            <summary>
            Gets or sets the access control rights of this object.
            </summary>
            <value>The access control rights.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticCategoryTransform.Licenses">
            <summary>
            Gets or sets the list of licenses for this object.
            </summary>
            <value>The licenses.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ConvertToStatisticDefinition(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.StatisticCategory)">
            <summary>
            Converts to statistic definition.
            </summary>
            <param name="session">The session.</param>
            <param name="category">The category.</param>
            <returns>The statistic definition.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.UnitString">
            <summary>
            Gets or sets the unit string.
            </summary>
            <value>The unit string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ValueDefinition">
            <summary>
            Gets or sets the value definition.
            </summary>
            <value>The value definition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.SortIndex">
            <summary>
            Gets or sets the index of the sort.
            </summary>
            <value>The index of the sort.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ValueStringMappings">
            <summary>
            Gets or sets the value string mappings.
            </summary>
            <value>The value string mappings.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ParameterSets">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.CompatibleWith">
            <summary>
            Gets or sets the compatible with.
            </summary>
            <value>The compatible with.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Flags">
            <summary>
            Gets or sets the additional flags that modify the <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.DrillDowns">
            <summary>
            Gets or sets the drill down look ups.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Expanded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform"/> is expanded.
            </summary>
            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ValueStringMapping">
            <summary>
            Maps a display string to a value.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ValueStringMapping.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.ValueStringMapping.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data">
            <summary>
            Data for a statistic definition.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.ValueType">
            <summary>
            Gets or sets the type of the value.
            </summary>
            <value>The type of the value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.Units">
            <summary>
            Gets or sets the units.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.LowerBoundType">
            <summary>
            Gets or sets the type of the lower bound.
            </summary>
            <value>The type of the lower bound.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.LowerBoundValue">
            <summary>
            Gets or sets the lower bound value.
            </summary>
            <value>The lower bound value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.UpperBoundType">
            <summary>
            Gets or sets the type of the upper bound.
            </summary>
            <value>The type of the upper bound.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.Data.UpperBoundValue">
            <summary>
            Gets or sets the upper bound value.
            </summary>
            <value>The upper bound value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.SoftwareCompatible">
            <summary>
            Indicates compatible software for this statistic definition.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.SoftwareCompatible.StatId">
            <summary>
            Gets or sets the stat ID.
            </summary>
            <value>The stat ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.SoftwareCompatible.StatCat">
            <summary>
            Gets or sets the statistic category.
            </summary>
            <value>The statistic category.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.XmlTransforms.StatisticDefinitionTransform.SoftwareCompatible.StatSubCat">
            <summary>
            Gets or sets the statistic sub-category.
            </summary>
            <value>The statistic sub-category.</value>
        </member>
        <member name="M:ININ.IceLib.Statistics.IStatisticCatalogProvider.LoadStatisticDefinitions">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.Localization">
            <summary>
            Helper class for accessing string from resource files.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)">
            <summary>
            Loads a string resource, localized according to the cultureInfo associated with <paramref name="session"/>.
            </summary>
            <param name="session">The session for which to load the resource.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
            <seealso cref="T:ININ.IceLib.Connection.Session"/>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Localization.LoadString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Loads a string resource, localized according to <paramref name="cultureInfo"/>.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Localization.LoadStringWithThreadCulture(System.String)">
            <summary>
            Don't use this if <see cref="M:ININ.IceLib.Statistics.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)"/> can be used instead!
            </summary>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="T:ININ.IceLib.Statistics.LocalResourceStrings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.EmptyValueError(ININ.IceLib.Connection.Session)">
            <summary>An empty value is not allowed for this parameter.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.AlertSetNotEditableError(ININ.IceLib.Connection.Session)">
            <summary>Alert set does not have create update operation.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.AllCategories_Description(ININ.IceLib.Connection.Session)">
            <summary>Represents all categories.</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.AllCategories_Title(ININ.IceLib.Connection.Session)">
            <summary>All Categories</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.NullValueDisplayString(ININ.IceLib.Connection.Session)">
            <summary>N/A</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.TimeSpanWithDayFormat(ININ.IceLib.Connection.Session)">
            <summary>TimeSpan Format, Showing Days</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.TimeSpanWithoutDayFormat(ININ.IceLib.Connection.Session)">
            <summary>TimeSpan Format, Without Days</summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalResourceStrings.LocalLoadString(ININ.IceLib.Connection.Session,System.String)">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.LocalStatisticCatalogProvider">
            <summary>
            Provides access to the statistics catalog definitions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.LocalStatisticCatalogProvider.LoadStatisticDefinitions">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.NamespaceDoc">
            <summary>
            <para>
            The <b>ININ.IceLib.Statistics</b> namespace contains classes for watching and listening to Interaction Center statistics.
            </para>
            <para>
            There are a number of classes within the <b>ININ.IceLib.Statistics</b> namespace that provide support to the classes 
            mentioned in the preceding summary. Examples of the supporting classes are enumerations, event argument classes, and 
            delegates used by events within classes.
            </para>
            <para>
            The <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/> can be used to watch statistics.  This watch will provide the details about the
            definition of the statistic, such as units, precision, name, and description.  The <see cref="T:ININ.IceLib.Statistics.StatisticListener"/>
            can be used to listen to statistic values.  This will retrieve the current value of the statistic of interest and send
            out events when that value changes.
            </para>
            <para>
            <ininGettingStartedStatistics/>
            <ininStatisticsCatalog/>
            </para>
            </summary>
            <icversion>4.0</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs">
            <summary>
            Provides data for asynchronous completed events of <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs.#ctor(ININ.IceLib.Statistics.ParameterQueryResult,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs"/> class.
            </summary>
            <param name="results">The results.</param>
            <param name="error">The error.</param>
            <param name="cancelled">if set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">State of the user.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="results"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs.Results">
            <summary>
            Gets the results associated with the query.
            </summary>
            <value>The results.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterQueryResult">
            <summary>
            Represents the results from <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)"/>.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.ParameterQuery"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterQueryResult.#ctor(ININ.IceLib.Statistics.ParameterQuery,ININ.IceLib.Statistics.ParameterQueryResultStatus,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.DetailedParameterValue})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterQueryResult"/> class.
            </summary>
            <param name="query">The query these results are for.</param>
            <param name="resultStatus">The result status.</param>
            <param name="values">The values returned by the query.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="values"/> or <paramref name="query"/> parameter is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="resultStatus"/> parameter is not a  valid value for 
            <see cref="T:ININ.IceLib.Statistics.ParameterQueryResultStatus"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterQueryResult.#ctor(ININ.IceLib.Statistics.ParameterQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterQueryResult"/> class.
            </summary>
            <param name="query">The query.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="query"/> parameter is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryResult.NumberValuesReturned">
            <summary>
            Gets the number values returned.
            </summary>
            <value>The number values returned.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryResult.NumberValuesAvailable">
            <summary>
            Gets the number values available.
            </summary>
            <value>The number values available.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryResult.Query">
            <summary>
            Gets the query associated with this query result.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryResult.ResultStatus">
            <summary>
            Gets the result status.
            </summary>
            <value>The result status.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterQueryResult.Values">
            <summary>
            Gets the result data set.
            </summary>
            <value>The result data set.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterQueryResultStatus">
            <summary>
            Represents the status of a <see cref="T:ININ.IceLib.Statistics.ParameterQueryResult"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.ParameterQueryResultStatus.None">
            <summary>
            Query result status has not been determined yet.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.ParameterQueryResultStatus.Success">
            <summary>
            The query was a success.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.ParameterQueryResultStatus.QueryNotSupported">
            <summary>
            The query is not supported and cannot be fulfilled.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterType">
            <summary>
            Defines the type of a parameter.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.#ctor(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Constructs a ParamterType instance and sets IsDefault to true
            </summary>
            <param name="id">The Id for this parameter type</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.ToString">
            <inheritdoc />
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.Equals(ININ.IceLib.Statistics.ParameterType)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_Equality(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_Inequality(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.CompareTo(ININ.IceLib.Statistics.ParameterType)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_GreaterThan(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_GreaterThanOrEqual(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_LessThan(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterType.op_LessThanOrEqual(ININ.IceLib.Statistics.ParameterType,ININ.IceLib.Statistics.ParameterType)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterType"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterType.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterType.DisplayText">
            <summary>
            Gets the display text.
            </summary>
            <value>The display text.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterType.PreserveOrder">
            <summary>
            Gets the flag that determines if the display order should be preserved.
            </summary>
            <value>The flag for preserving display order.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterTypeDefinition">
            <summary>
            Represents additional details for a <see cref="T:ININ.IceLib.Statistics.ParameterType"/> object.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeDefinition.Id">
            <summary>
            Gets the ID of the <see cref="T:ININ.IceLib.Statistics.ParameterType"/> object that this
            definition applies to.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeDefinition.DisplayString">
            <summary>
            Gets the display string for the associated <see cref="T:ININ.IceLib.Statistics.ParameterType"/> object.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeDefinition.Description">
            <summary>
            Gets the description for the associated <see cref="T:ININ.IceLib.Statistics.ParameterType"/> object.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeDefinition.PreserveOrder">
            <summary>
            Gets the flag that determines if the display order should be preserved.
            </summary>
            <value>The flag for preserving display order.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeDefinition.AccessControlLists">
            <summary>
            Access control lists that will be applied on the values of this parameter.
            </summary>
            <value>The Access Control Lists.</value>
            <remarks>Each of the access control lists returned by this property could be used to fetch parameter values that the Session user is allowed to use. When retrieving available parameter values associated with this <see cref="T:ININ.IceLib.Statistics.ParameterTypeDefinition"/>, the values will be filtered to only include items allowed by these access control lists.</remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterTypeId">
            <summary>
            The ID value of a <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> class.
            </summary>
            <param name="id">The ID.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_Equality(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_Inequality(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.Equals(ININ.IceLib.Statistics.ParameterTypeId)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.CompareTo(ININ.IceLib.Statistics.ParameterTypeId)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_GreaterThan(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> is greater than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_GreaterThanOrEqual(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> is greater than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is greater than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_LessThan(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> is less than another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.op_LessThanOrEqual(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Determines whether one instance of <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> is less than or equal to another.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> to compare.</param>
            <returns><see langword="true"/> if the first instance is less than or equal to the second, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterTypeId.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterTypeId.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection">
            <summary>
            Represents an ordered keyed collection of parameter types and their values.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.#ctor(ININ.IceLib.Statistics.ParameterValueKeyedCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> class.
            </summary>
            <param name="parameterValues">The parameter values to copy from.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.GetKeyForItem(ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.Add(ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Adds a unique <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> instance to the end of the this collection.
            </summary>
            <param name="item">The parameter value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">An item with the same key has already been added.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.ReplaceValue(ININ.IceLib.Statistics.ParameterValue)">
            <summary>
            Replaces a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> with a different one.
            </summary>
            <param name="value">The new <see cref="T:ININ.IceLib.Statistics.ParameterValue"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <returns><see langword="true"/> if the value was found and replaced, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.FindIndexForType(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Finds the index of the parameter value of the given <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.
            </summary>
            <param name="type">The <see cref="T:ININ.IceLib.Statistics.ParameterType"/> to look for.</param>
            <returns>The index, or -1 if no <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> of type <see cref="T:ININ.IceLib.Statistics.ParameterType"/> was found.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.TryGetValue(ININ.IceLib.Statistics.ParameterTypeId,ININ.IceLib.Statistics.ParameterValue@)">
            <summary>
             Gets the value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.
            When this method returns, the item associated with the specified key, if
            the key is found; otherwise, <see langword="null"/>.
            parameter. This parameter is passed uninitialized.
            </param>
            <returns>
               <see langword="true"/> if this instance contains an element with the specified key; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.Equals(ININ.IceLib.Statistics.ParameterValueKeyedCollection)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.op_Equality(ININ.IceLib.Statistics.ParameterValueKeyedCollection,ININ.IceLib.Statistics.ParameterValueKeyedCollection)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueKeyedCollection.op_Inequality(ININ.IceLib.Statistics.ParameterValueKeyedCollection,ININ.IceLib.Statistics.ParameterValueKeyedCollection)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.ParameterValueKeyedCollection"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterValueKeyedCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> at the specified index.
            </summary>
            <value>The parameter value at the requested index.</value>
            <exception cref="T:System.IndexOutOfRangeException">No index was out of the range for the collection.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValuesDepot">
            <summary>
            Represents a watched object used to query the valid parameters when making statistic values requests.
            </summary>
            <remarks>
            The <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> provides access to parameter values.  <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            creates a parameter watch for the given query, triggering <see cref="E:ININ.IceLib.Statistics.ParameterValuesDepot.QueryResultsChanged"/> whenever the
            parameters have changed.  <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)"/> will immediately retrieve parameters for the given query.
            <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/> will check with the server to determine if the given query is
            still valid.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.#ctor(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="statisticsManager"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.IsWatching">
            <summary>
            Determines whether this instance is watching.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is watching; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetWatchedResults">
            <summary>
            Gets the collection of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> that match the watched <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>.
            </summary>
            <returns>The collection of <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/> that match the watched query.</returns>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <summary>
            A synchronous request to query and watch parameter values.
            </summary>
            <param name="query">Definition of the query.</param>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="query"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> is already watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQueryAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Starts an asynchronous request to query and watch parameter values.
            </summary>
            <param name="query">Definition of the query.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="query"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="query"/> is empty.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQueryAsyncPerformTask(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQueryAsyncCompleted(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StopWatchingQuery">
            <summary>
            A synchronous request to stop watching queried parameter values.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StopWatchingQueryAsync(System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Start an asynchronous request to stop watching queried parameter values.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started. See <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StopWatchingQueryAsyncPerformTask(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.StopWatchingQueryAsyncCompleted(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExcecuteQueryImpl(ININ.IceLib.Statistics.ParameterQuery)">
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)">
            <summary>
            Executes a query for parameter values and returns the results.
            </summary>
            <param name="query">The <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> to execute.</param>
            <returns>The result of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQueryAsync(ININ.IceLib.Statistics.ParameterQuery,System.EventHandler{ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs},System.Object)">
            <summary>
            Executes a query for parameter values and returns the results asynchronously.
            </summary>
            <param name="query">The <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> to execute.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQueryAsyncPerformTask(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQueryAsyncCompleted(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetImpl(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <summary>
            Validates a set of associated parameter values.
            </summary>
            <param name="query">The <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> to execute.</param>
            <returns>The result of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs},System.Object)">
            <summary>
            Executes a query for parameter values and returns the results asynchronously.
            </summary>
            <param name="query">The <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> to execute.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsyncPerformTask(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsyncCompleted(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValuesImpl(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})">
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameterValues"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValues(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})">
            <summary>
            Gets the details for a collection of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> instances.  The
            input parameter values are not treated as chained.  If you need the values
            to be treated as chained, use <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            instead.
            </summary>
            <param name="parameterValues">The parameter values to retrieve details for.</param>
            <returns>The result of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameterValues"/> parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="parameterValues"/> parameter is empty.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValuesAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue},System.EventHandler{ININ.IceLib.AsyncCompletedEventArgs{System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.DetailedParameterValue}}},System.Object)">
            <summary>
            Asynchronously gets the details for a collection of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> instances.
            The input parameter values are not treated as chained.  If you need the values
            to be treated as chained, use <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            instead.
            </summary>
            <param name="parameterValues">The parameter values to retrieve details for.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="parameterValues"/> parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="parameterValues"/> parameter is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValuesAsyncPerformTask(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValuesAsyncCompleted(ININ.IceLib.Statistics.ParameterValuesDepot.AsyncParameterValuesDepotState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepot.RaiseQueryResultsChanged(ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs)">
            <summary>
            Raises the query results changed event.
            </summary>
            <param name="queryResultsChanged">
            The <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQueryEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="E:ININ.IceLib.Statistics.ParameterValuesDepot.QueryResultsChanged">
            <summary>
            Occurs when a result to a watched query changes.
            </summary>
            <remarks>
            This event will only occur when query results have changed. To start
            watching for query result changes call either the <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/> method or
            the <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQueryAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/> or <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.StartWatchingQueryAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValuesDepot.ParameterQueryCompletedEventHandler">
            <summary>
            Represents the method that will handle the completed callback for an <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ExecuteQueryAsync(ININ.IceLib.Statistics.ParameterQuery,System.EventHandler{ININ.IceLib.Statistics.ParameterQueryCompletedEventArgs},System.Object)"/> operation.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValueEventArgs">
            <summary>
            Provides data for the <see cref="T:ININ.IceLib.Statistics.ParameterValuesDepot"/> changed, added and removed events.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValueEventArgs.#ctor(ININ.IceLib.Statistics.ParameterValue)">
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.ParameterValueEventArgs.Value">
            <summary>
            Gets the parameter value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ParameterValuesDepotProvider">
            <summary>
            Represents the parameter values depot provider interface.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.ExecuteQuery(ININ.IceLib.Statistics.ParameterQuery)">
            <summary>
            Executes a query for parameter values and returns the results.
            </summary>
            <param name="query">The <see cref="T:ININ.IceLib.Statistics.ParameterQuery"/> to execute.</param>
            <returns>The result of the query.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="query"/> parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <summary>
            Validates the associated parameter set.
            </summary>
            <param name="query">The query.</param>
            <returns>The validation results.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.GetDetailedParameterValues(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})">
            <summary>
            Gets the detailed parameter values.
            </summary>
            <param name="parameterValues">The parameter values.</param>
            <returns>The detailed parameter values.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.PackExecuteQueryRequest(ININ.IceLib.Statistics.Internal.Messages.StatisticParameterValuesRequest,ININ.IceLib.Statistics.ParameterQuery)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.UnpackExecuteQueryResponse(ININ.IceLib.Statistics.Internal.Messages.StatisticParameterValuesResponse,ININ.IceLib.Statistics.ParameterQueryResult,ININ.IceLib.Statistics.ParameterType)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.SendWatchRequest(System.Collections.Generic.List{ININ.IceLib.Statistics.ParameterValuesDepotWatcherCache.ValueItem},System.Collections.Generic.List{ININ.IceLib.Statistics.ParameterValuesDepotWatcherCache.ValueItem},System.Boolean)">
            <summary>
            Sends the watch request to Session Manager.
            </summary>
            <param name="itemsToWatch">The items to watch.</param>
            <param name="itemsToNotWatch">The items to not watch.</param>
            <param name="stopping">if set to <see langword="true"/>, stopping watch.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.PackWatchRequest(ININ.ThinBridge.Message,System.Collections.Generic.List{ININ.IceLib.Statistics.ParameterValuesDepotWatcherCache.ValueItem},System.Collections.Generic.List{ININ.IceLib.Statistics.ParameterValuesDepotWatcherCache.ValueItem})">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.StartWatchingQuery(ININ.IceLib.Statistics.AssociatedParameterSetQuery)">
            <ConnectionExceptions />
        </member>
        <member name="M:ININ.IceLib.Statistics.ParameterValuesDepotProvider.HandleParameterQueryResultsChanged(ININ.IceLib.Statistics.StatisticsManager,ININ.ThinBridge.Message)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.RequiredParametersDefinition">
            <summary>
            Details information about the required parameter types that define a valid parameter set for a statistic value.
            </summary>
            <remarks>
            The order of the parameter types that compose the definition is important.
            </remarks>
            <seealso cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/>
            <seealso cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.RequiredParametersDefinition.#ctor(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterTypeId},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.RequiredParametersDefinition"/> class.
            </summary>
            <param name="orderedTypes">The ordered types.</param>
            <param name="shouldBeSuppressed">if set to <see langword="true"/>, this parameter set should be suppressed from direct presentation to the user.</param>
            <exception cref="T:System.ArgumentException"><paramref name="orderedTypes"/> was <see langword="null"/>, or
            contained a <see cref="T:ININ.IceLib.Statistics.ParameterType"/> multiple times.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.RequiredParametersDefinition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.RequiredParametersDefinition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.RequiredParametersDefinition.ShouldBeSuppressed">
            <summary>
            Gets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> should be suppressed from direct presentation to the user.
            </summary>
            <value>
            	<see langword="true"/> if should be suppressed; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Statistics.SimpleKeySet`1">
            <summary>
            Maintain a set of watched items.
            </summary>
            <typeparam name="T">The type of watched item.</typeparam>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleKeySet`1.Difference(ININ.IceLib.Statistics.SimpleKeySet{`0})">
            <summary>
            This will get the items in B that are not in A (this set).
            </summary>
            <param name="setB">The set B.</param>
            <returns>The result set.</returns>
        </member>
        <member name="T:ININ.IceLib.Statistics.SimpleWatcherCacheStore`3">
            <summary>
            Represents a helper class for watcher cache implementation.
            </summary>
            <typeparam name="TKey">The unique key for a value.</typeparam>
            <typeparam name="TValue">The type of value stored.</typeparam>
            <typeparam name="TWatcher">The type of the watcher.</typeparam>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherCacheStore`3.ReserveForWatching(`2)">
            <summary>
            Reserves the watcher for watching.
            </summary>
            <param name="watcher">The watcher.</param>
            <returns>
            <see langword="true"/> if success, <see langword="false"/> if watcher already watching.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherCacheStore`3.StartWatchingValues(`2,`0[],System.Func{`0,`1},System.Action{System.Collections.Generic.List{`1}})">
            <summary>
            Starts the watching values.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="keysToAddIn">The keys to add in.</param>
            <param name="createFunc">The create func.</param>
            <param name="startAction">The start action.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="watcher"/> or <paramref name="keysToAddIn"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="keysToAddIn"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">The watcher is already watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherCacheStore`3.ChangedWatchedValues(`2,`0[],`0[],System.Boolean,System.Func{`0,`1},System.Action{System.Collections.Generic.List{`1},System.Collections.Generic.List{`1}},System.Action{System.Collections.Generic.List{`1}})">
            <summary>
            Changed the watched values.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="keysToAdd">The keys to add.</param>
            <param name="keysToRemove">The keys to remove.</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="createFunc">The create func.</param>
            <param name="changeAction">The change action.</param>
            <param name="simulateUpdate">The simulate update action.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="watcher"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The watcher is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherCacheStore`3.StopWatching(`2,System.Action{System.Collections.Generic.List{`1}})">
            <summary>
            Stops the watching.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="stopAction">The stop action.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="watcher"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.SimpleWatcherOnlyCache`1">
            <summary>
            Represents a watcher only cache. No keys or data associated with the cache.
            </summary>
            <typeparam name="TWatcher">The type of the watcher.</typeparam>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherOnlyCache`1.StartWatching(`0)">
            <exception cref="T:System.ArgumentNullException"><c>watcher</c> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Object already watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.SimpleWatcherOnlyCache`1.StopWatching(`0)">
            <exception cref="T:System.ArgumentNullException"><c>watcher</c> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Object already watched.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticBoolValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="bool"/> data type.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticValue">
            <summary>
            Represents an abstract class statistic values are based on.
            </summary>
            <remarks>
            <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> contains the data of the statistic.
            <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> provides an indexer to return
            the current <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for the provided
            <see cref="T:ININ.IceLib.Statistics.StatisticKey"/>.
            <see cref="T:ININ.IceLib.Statistics.Alerts.AlertNotification"/> provides a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/>
            with the current value of a triggered <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.GetDisplayString">
            <summary>
             Gets the value as a display string.
            </summary>
            <returns>The display string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.SetValue(ININ.Ion.Serialization.BinaryReader)">
            <summary>
            Sets the value.
            </summary>
            <param name="reader">Stream this value is being set from.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <summary>
            Reads the Value from the stream.  Assumes that any header
            information has already been streamed out, such as IsNull
            and IsError.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.SetValueToDefault">
            <summary>
            Sets the value to a default.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.GetValueStringMapping(System.String,System.String)">
            <summary>
            Gets the value string mapping. Typically this is used in boolean or string values.
            </summary>
            <param name="textValue">The text value.</param>
            <param name="defaultText">The default text.</param>
            <returns>
            The string if a mapping exists, else the text mapping.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.GetNormalizedValue">
            <summary>
            Gets the value as a normalized value.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.GetBestString(System.String)">
            <summary>
            Gets the best string.
            </summary>
            <param name="defaultString">The default string.</param>
            <returns>The best string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.GetBestString(System.Func{System.String})">
            <summary>
            Gets the best string.
            </summary>
            <param name="defaultStringFunction">Delegate function to the default string.</param>
            <returns>The best string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.CompareTo(System.Object)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">
            The passed in argument was not a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> (or <see langword="null"/>).
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValue.CompareTo(ININ.IceLib.Statistics.StatisticValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Unsupported value type.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.Definition">
            <summary>
            Gets the definition.
            </summary>
            <value>The definition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.IsNull">
            <summary>
            Gets a value indicating whether this instance is <see langword="null"/>.
            <note>In addition to a <see langword="null"/> value, this object may be in an error state.  See <see cref="P:ININ.IceLib.Statistics.StatisticValue.IsError"/>.</note>
            </summary>
            <value><see langword="true"/> if this instance is <see langword="null"/>; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.IsError">
            <summary>
            Gets a value indicating whether this instance is in an error state.
            This statistic has not been properly received from the server and should
            not be trusted.
            </summary>
            <value><see langword="true"/> if this instance is in error; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.NullDisplayString">
            <summary>
            Returns the display string that is used to display a statistic with a <see langword="null"/> value.
            </summary>
            <value>The display string.</value>
            <icversion>4.0 SU 1</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.TimeSpanWithDayFormatString">
            <summary>
            Returns the display string that is used to display a <see langword="TimeSpan"/> that contains a day.
            </summary>
            <value>The format string.</value>
            <icversion>4.0 SU 1</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValue.TimeSpanWithoutDayFormatString">
            <summary>
            Returns the display string that is used to display a <see langword="TimeSpan"/> that does not contains a day.
            </summary>
            <value>The format string.</value>
            <icversion>4.0 SU 1</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.#ctor(ININ.IceLib.Statistics.StatisticBoolValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticBoolValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticBoolValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.GetNormalizedValue">
            <summary>
            Gets the boolean value as a normalized value by returning 0.0 for <see langword="false"/> and 1.0 for <see langword="true"/>.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticBoolValue.CompareTo(ININ.IceLib.Statistics.StatisticBoolValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticBoolValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticCatalog">
            <summary>
            Gateway to the definitions of available IC statistics.
            </summary>
            <remarks>
            <para>
            Prior to doing any work with the <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/>, <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatching"/>
            or <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> must be called.
            </para>
            <para>
            <see cref="T:ININ.IceLib.Statistics.StatisticDefinition">Statistics</see> can be retrieved by <see cref="T:ININ.IceLib.Statistics.StatisticKey"/>
            with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinition(ININ.IceLib.Statistics.StatisticIdentifier)"/>, by <see cref="T:ININ.IceLib.Statistics.StatisticCategory"/> with
            <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinitions(System.String)"/> or as a complete list with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinitions"/>.
            </para>
            <para>
            A <see cref="T:ININ.IceLib.Statistics.StatisticCategory"/> can be retrieved by ID with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticCategory(System.String)"/> or
            the complete list of categories can be retrieved with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticCategories"/>.
            </para>
            <para>
            A list of all <see cref="T:ININ.IceLib.Statistics.ParameterType"/> objects available can be retrieved with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterTypes"/>
            or an individual <see cref="T:ININ.IceLib.Statistics.ParameterType"/> can be retrieved by ID with <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterType(ININ.IceLib.Statistics.ParameterTypeId)"/>.
            <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterDisplayString(ININ.IceLib.Statistics.ParameterTypeId)"/> will retrieve the human readable display string for a given
            <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.
            </para>
            <ininGettingStartedStatistics/>
            <ininStatisticsCatalog/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.#ctor(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="statisticsManager"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterDisplayString(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Gets the display string for a given <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.
            </summary>
            <param name="parameterType">The parameter type.</param>
            <returns>The display string.</returns>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
            <exception cref="T:System.ArgumentNullException">The <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/> was <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The catalog does not contain a <see cref="T:ININ.IceLib.Statistics.ParameterType"/> with the 
            given <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterTypes">
            <summary>
            Gets the collection of <see cref="T:ININ.IceLib.Statistics.ParameterType"/>s defined within the <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/>.
            </summary>
            <returns>The collection of parameter types.</returns>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetParameterType(ININ.IceLib.Statistics.ParameterTypeId)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.ParameterType"/> with the given <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/>.
            </summary>
            <param name="parameterTypeId">The ID.</param>
            <returns>The <see cref="T:ININ.IceLib.Statistics.ParameterType"/> with matching <see cref="T:ININ.IceLib.Statistics.ParameterTypeId"/>, or 
            <see langword="null"/> if the catalog does not contain a matching <see cref="T:ININ.IceLib.Statistics.ParameterType"/>.</returns>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinition(ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/> based on its ID.
            </summary>
            <param name="statisticId">The ID of the <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.</param>
            <returns>A statistic definition if found, otherwise <see langword="null"/>.</returns>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="statisticId"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinitions">
            <summary>
            Gets all the statistic definitions.
            </summary>
            <returns>A list of statistic definitions.</returns>
            <remarks>
            This method is only valid after a <c>StartWatching</c> has been invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticDefinitions(System.String)">
            <summary>
            Gets the statistic definitions for a specific category.
            </summary>
            <param name="categoryId">The category ID.</param>
            <returns>A list of statistic definitions.</returns>
            <remarks>
            This method is only valid after a <c>StartWatching</c> has been invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="categoryId"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticCategories">
            <summary>
            Gets the statistic categories.
            </summary>
            <returns>The list of statistic categories.</returns>
            <remarks>
            This method is only valid after a <c>StartWatching</c> has been invoked.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.GetStatisticCategory(System.String)">
            <summary>
            Gets the statistic category.
            </summary>
            <param name="categoryId">The category ID.</param>
            <returns>A statistic category if found, or <see langword="null"/> if the statistic category does not exist.</returns>
            <exception cref="T:System.InvalidOperationException">A watch was not started.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="categoryId"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.IsWatching">
            <summary>
            Determines whether this instance is watching.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is watching; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.IsReady">
            <summary>
            Determines whether the catalog data is ready after a <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> request.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is ready; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatching">
            <summary>
            Starts watching the statistic catalog.
            </summary>
            <remarks>
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Object is already watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously starts watching the statistic catalog.
            </summary>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsyncPerformTask(ININ.IceLib.Statistics.StatisticCatalog.AsyncStatisticCatalogState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StartWatchingAsyncCompleted(ININ.IceLib.Statistics.StatisticCatalog.AsyncStatisticCatalogState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StopWatching">
            <summary>
            Stops watching the statistic catalog.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Object is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops watching the statistic catalog.
            </summary>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Object is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StopWatchingAsyncPerformTask(ININ.IceLib.Statistics.StatisticCatalog.AsyncStatisticCatalogState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalog.StopWatchingAsyncCompleted(ININ.IceLib.Statistics.StatisticCatalog.AsyncStatisticCatalogState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="E:ININ.IceLib.Statistics.StatisticCatalog.StatisticCatalogChanged">
            <summary>
            Occurs when the statistics catalog has changed.
            </summary>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCatalog.AllCategories">
            <summary>
            Gets all categories statistic definition.
            </summary>
            <value>The all categories statistic definition.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticCatalogChangedEventArgs">
            <summary>
            Provides data for for the <see cref="E:ININ.IceLib.Statistics.StatisticCatalog.StatisticCatalogChanged"/> event.
            This contains a list of objects that have been added or removed and a list of all
            objects that have changed.
            </summary>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogChangedEventArgs.#ctor(System.Collections.Generic.List{ININ.IceLib.Statistics.StatisticCategory},System.Collections.Generic.List{ININ.IceLib.Statistics.StatisticCategory},System.Collections.Generic.List{ININ.IceLib.Statistics.StatisticCategory})">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCatalogChangedEventArgs.Changed">
            <summary>
            Get the statistic categories that changed.
            </summary>
            <value>The changed statistic categories.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCatalogChangedEventArgs.Added">
            <summary>
            Get the statistic categories that were added.
            </summary>
            <value>The added statistic categories.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCatalogChangedEventArgs.Removed">
            <summary>
            Get the statistic categories that were removed.
            </summary>
            <value>The removed statistic categories.</value>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.Load">
            <summary>
            Loads the statistics catalog from a local file.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.Save(System.Collections.Generic.List{System.String})">
            <summary>
            Saves the statistics catalog to a local file.
            </summary>
            <param name="statsCatalog">The hash values and xml to save.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.Save(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Saves the statistics catalog with hash keys to a local file.
            </summary>
            <param name="statsCatalog">The hash values and xml to save.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.AddToWatcherCache(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds the StatisticCatalog to the cache
            </summary>
            <param name="statsCatalog">The catalog to add to the cache</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.AddToWatcherCache(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds the StatisticCatalog to the cache
            </summary>
            <param name="statsCatalog">The catalog to add to the cache</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.IsCacheStale(System.Collections.Generic.List{System.String})">
            <summary>
            Compares the statistic categories to what is cached to check for a difference in the catalogs.
            </summary>
            <param name="catalogs">The catalog as a list received from the server.</param>
            <returns><see langword="true"/> if the cache is stale; otherwise <see langword="false"/></returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogFileCache.IsCacheStale(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Compares the hash values for the statistic categories to what is cached to check for a difference in the catalogs.
            </summary>
            <param name="catalog">The catalog as a dictionary of hash values and xml received from the server.</param>
            <returns><see langword="true"/> if the cache is stale; otherwise <see langword="false"/></returns>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticCatalogWatcherCache">
            <summary>
            Manages the watchers and any data for the statistic catalog.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogWatcherCache.StartWatching(ININ.IceLib.Statistics.IStatisticCatalogWatcher)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticCatalogProvider">
            <summary>
            Provides access to the statistics catalog definitions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCatalogProvider.LoadStatisticDefinitions">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticCategory">
            <summary>
            Specific constants identifying a grouping of statistic definitions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticCategory.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">Parameter cannot be empty.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCategory.Id">
            <summary>
            Gets the unique identifier for this statistic definition.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCategory.DisplayString">
            <summary>
            Gets the display string for this statistic definition.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCategory.Description">
            <summary>
            Gets a one or two sentence description about this statistic definition.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCategory.AccessControlRights">
            <summary>
            Access control rights that will be used to check if the logged in user is allowed to see this catalog.
            </summary>
            <value>The Access Control Rights.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticCategory.Licenses">
            <summary>
            At least one of the licenses that the user should have in order to see this catalog.
            </summary>
            <value>The licenses.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticDefinition">
            <summary>
            Represents information about an IC statistic.
            </summary>
            <remarks>
            Statistics can be retrieved with the <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/>.  <see cref="T:ININ.IceLib.Statistics.StatisticValue"/>
            defines the value for an instance of a given statistic.  An <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>
            can be created with the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> from a <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDefinition.#ctor(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.RequiredParametersDefinition},ININ.IceLib.Statistics.SWItem,ININ.IceLib.Statistics.StatisticCategory,System.Collections.Generic.Dictionary{System.String,System.String},ININ.IceLib.Statistics.StatisticDefinitionFlags,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.DrillDown})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="id">The ID.</param>
            <param name="displayString">The display string.</param>
            <param name="description">The description.</param>
            <param name="unitsDisplayString">The units display string.</param>
            <param name="requiredParameters">The required parameters.</param>
            <param name="swItem">The statistic watcher item.</param>
            <param name="category">The category.</param>
            <param name="mappings">The mappings.</param>
            <param name="flags">The flags.</param>
            <param name="sortIndex">The sort index.</param>
            <param name="expanded">if set to <c>true</c> the statistic can be expanded.</param>
            <param name="drillDowns">The drill down lookups.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDefinition.SetData(ININ.IceLib.Statistics.SDData)">
            <summary>
            Sets the data.
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.ArgumentException">A parameter has an invalid value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDefinition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.SortIndex">
            <summary>
            The sort index is used to sort statistics in views.
            </summary>
            <value>The sort index of the statistic.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Expanded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/> is expanded.
            </summary>
            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Id">
            <summary>
            Gets the unique identifier for this statistic definition.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.ValueType">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.StatisticValueType"/>.
            </summary>
            <value>The type of the value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.DisplayString">
            <summary>
            Gets the display string for this statistic definition.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Description">
            <summary>
            Gets a one or two sentence description about this statistic definition.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Units">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.StatisticUnits"/> for this statistic definition.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.UnitsDisplayString">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.StatisticUnits"/> display string.
            </summary>
            <value>The units display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Precision">
            <summary>
            Gets the precision.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.UpperBoundValue">
            <summary>
            Gets the upper bound value.
            </summary>
            <value>The upper bound value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.UpperBoundType">
            <summary>
            Gets the type of the upper bound.
            </summary>
            <value>The type of the upper bound.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.LowerBoundValue">
            <summary>
            Gets the lower bound value.
            </summary>
            <value>The lower bound value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.LowerBoundType">
            <summary>
            Gets the type of the lower bound.
            </summary>
            <value>The type of the lower bound.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.RequiredParameters">
            <summary>
            Gets the required parameters.
            </summary>
            <value>The required parameters.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.DrillDowns">
            <summary>
            Gets the drill down lookups.
            </summary>
            <value>The drill down lookups.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Flags">
            <summary>
            Gets the flags that modify the <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDefinition.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticDefinitionCache">
            <summary>
            Represents the cached statistic definitions.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticDefinitionFlags">
            <summary>
            Additional flags that may be set to modify a statistic definition.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticDefinitionFlags.None">
            <summary>
            No modifiers are in effect.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticDefinitionFlags.SuppressInUI">
            <summary>
            The statistic should not be displayed in the UI.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticDefinitionFlags.SuppressInAlerts">
            <summary>
            The statistic should not be used for alerts.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticDoubleValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="double"/> data type.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.#ctor(ININ.IceLib.Statistics.StatisticDoubleValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticDoubleValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticDoubleValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.GetNormalizedValue">
            <summary>
            Gets the double value.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.GetDisplayFormatString(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Gets a display format string for a statistic definition.
            </summary>
            <param name="statisticDefinition">The statistic definition.</param>
            <returns>The display format string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDoubleValue.CompareTo(ININ.IceLib.Statistics.StatisticDoubleValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDoubleValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticDurationValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="TimeSpan"/> data type.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.StatisticDurationValue"/> is a time span that is a fixed length of time.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDurationValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticDurationValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticDurationValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.GetNormalizedValue">
            <summary>
            Gets the <langref name="TimeSpan"/> value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticDurationValue.CompareTo(ININ.IceLib.Statistics.StatisticDurationValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticDurationValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with a <langref name="TimeSpan"/> data type that can be fixed or actively increasing.
            </summary>
            <remarks>
            The <see cref="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue"/> <see cref="P:ININ.IceLib.Statistics.StatisticFiniteDurationValue.Value"/> is a timespan that can either be static, or
            constantly increasing depending on the state of the statistic.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.#ctor(ININ.IceLib.Statistics.StatisticFiniteDurationValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.GetNormalizedValue">
            <summary>
            Gets the underlying <c>TimeSpan</c> value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.GetTimeStamp">
            <summary>
            Gets the time stamp associated with this time duration.
            </summary>
            <returns>The time stamp.</returns>
            <icversion>4.0 SU 1</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFiniteDurationValue.CompareTo(ININ.IceLib.Statistics.StatisticFiniteDurationValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticFiniteDurationValue.Value">
            <summary>
            Gets the value as a time span.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticFiniteDurationValue.IsTicking">
            <summary>
            Gets a value indicating whether this time is currently counting up or not.
            </summary>
            <value>
            	<see langword="true"/> if this instance is ticking; otherwise, <see langword="false"/>.
            </value>
            <icversion>4.0 SU 1</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticFutureDurationValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="TimeSpan"/> data type that is duration until something will happen.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.StatisticFutureDurationValue"/> represents the time span that counts down until something will happen as 
            opposed to <see cref="T:ININ.IceLib.Statistics.StatisticDurationValue"/> that represents a fixed time span, <see cref="T:ININ.IceLib.Statistics.StatisticTimeDurationValue"/>
            which counts up since something happened, or <see cref="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue"/> which switches between counting and 
            fixed.  This allows consumer applications to count down until the event will occur.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.#ctor(ININ.IceLib.Statistics.StatisticFutureDurationValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticFutureDurationValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticFutureDurationValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.SetValue(System.String)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.GetNormalizedValue">
            <summary>
            Gets the elapsed <c>TimeSpan</c> value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.GetTimeStamp">
            <summary>
            Gets the time stamp associated with this time duration.
            </summary>
            <returns>The time stamp.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.CompareTo(ININ.IceLib.Statistics.StatisticFutureDurationValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticFutureDurationValue.Value">
            <summary>
            Gets the value as a time span. The value returns the <c>TimeSpan</c> since the time stamp associated with this value.
            See <see cref="M:ININ.IceLib.Statistics.StatisticFutureDurationValue.GetTimeStamp"/>.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticIdentifier">
            <summary>
            Identifies a statistic.
            <seealso cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>
            </summary>
            <remarks>
            To obtain an instance of this class, using a source URI string, 
            the <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> class can be used along with the 
            <see cref="P:ININ.IceLib.Statistics.StatisticKeyTemplate.StatisticIdentifier"/> property.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticIdentifier"/> class.
            </summary>
            <param name="uriString">The URI string.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.Equals(ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="otherValue">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.op_Equality(ININ.IceLib.Statistics.StatisticIdentifier,ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.op_Inequality(ININ.IceLib.Statistics.StatisticIdentifier,ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIdentifier.op_Implicit(ININ.IceLib.Statistics.StatisticIdentifier)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:ININ.IceLib.Statistics.StatisticIdentifier"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="identifier">The <see cref="T:ININ.IceLib.Statistics.StatisticIdentifier"/>.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticIdentifier.Uri">
            <summary>
            Gets the URI string used to identify the statistic.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticIntValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="int"/> data type.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.#ctor(ININ.IceLib.Statistics.StatisticIntValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticIntValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticIntValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.GetNormalizedValue">
            <summary>
            Gets the integer value as a normalized value by casting to a double type.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticIntValue.CompareTo(ININ.IceLib.Statistics.StatisticIntValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticIntValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticKey">
            <summary>
            Identifies a specific statistic value of interest.
            </summary>
            <remarks>
            A StatisticKey identifies a <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/> and a specific set of ParameterValues used in filtering 
            the StatisticValues of that <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.  A StatisticKey is used when requesting notification of
            alerts on a particular <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>. 
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.CreateSearchKey(System.String)">
            <summary>
            Creates a StatisticsKey solely for the purpose of finding the key in the keys dictionary.
            </summary>
            <seealso cref="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.TryGetKeyById(System.String,ININ.IceLib.Statistics.StatisticKey@)"/>
            <param name="uriString">The URI string.</param>
            <returns>A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that only has the <see cref="P:ININ.IceLib.Statistics.StatisticKey.InternalUriId"/> property set.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> class.
            </summary>
            <param name="uriString">The URI string.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.#ctor(ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> class.
            </summary>
            <param name="identifier">The statistic definition.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="identifier"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.#ctor(ININ.IceLib.Statistics.StatisticIdentifier,ININ.IceLib.Statistics.ParameterValueKeyedCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> class.
            </summary>
            <param name="identifier">The definition.</param>
            <param name="parameters">The parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="identifier"/> or <paramref name="parameters"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.GetParameters">
            <summary>
            Gets a copy of the parameter value keyed collection.
            </summary>
            <returns>The parameter value keyed collection.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.Equals(ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="otherValue">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.op_Equality(ININ.IceLib.Statistics.StatisticKey,ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKey.op_Inequality(ININ.IceLib.Statistics.StatisticKey,ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticKey.UriString">
            <summary>
            Gets the URI string.
            </summary>
            <value>The URI string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticKey.Identifier">
            <summary>
            Gets the statistic definition.
            </summary>
            <value>The statistic definition.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticKeyTemplate">
            <summary>
            Represents a class to manipulate the contents of a <see cref="T:ININ.IceLib.Statistics.StatisticKey"/>.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> can be created from a source URI
            or an existing <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> to go back and forth between the two.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.#ctor(ININ.IceLib.Statistics.StatisticIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.#ctor(ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> class.
            </summary>
            <param name="sourceStatisticKey">The <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> to created this template.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>        
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> class.
            </summary>
            <param name="sourceUri">The uri used to build this key template.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.GenerateUriString(System.Boolean)">
            <summary>
            GenerateUriString the URI string for the <see cref="T:ININ.IceLib.Statistics.StatisticKeyTemplate"/> instance.
            </summary>
            <param name="includeDisplayString">if set to <see langword="true"/> include the <see cref="P:ININ.IceLib.Statistics.DetailedParameterValue.DisplayString"/> in the URI string.</param>
            <returns>A URI string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.CreateTemplate(System.String)">
            <summary>
            Creates the template from a URI string.
            </summary>
            <param name="uriString">The URI string.</param>
            <returns>The template.</returns>
            NOTE!!!!!!!!! PEPPER!!! put ref to James' generated stat id help info stuff.
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.ConvertToUriString(ININ.IceLib.Statistics.StatisticKey,System.Boolean)">
            <summary>
            Converts to URI string.
            </summary>
            <param name="statisticKey">The statistic key.</param>
            <param name="includeDisplayString">if set to <see langword="true"/> include the <see cref="P:ININ.IceLib.Statistics.DetailedParameterValue.DisplayString"/> in the URI string.</param>
            <returns>A URI string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.ConvertToUriString(System.String,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue},System.Boolean)">
            <summary>
            Converts to URI string.
            </summary>
            <param name="definitionId">The definition ID.</param>
            <param name="parameters">The parameters.</param>
            <param name="includeDisplayString">if set to <see langword="true"/> include the <see cref="P:ININ.IceLib.Statistics.DetailedParameterValue.DisplayString"/> in the URI string.</param>
            <returns>A URI string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticKeyTemplate.CreateKeyUriString(System.String,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue},System.Boolean)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticKeyTemplate.StatisticIdentifier">
            <summary>
            Gets or sets the statistic definition ID.
            </summary>
            <value>The statistic definition ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticKeyTemplate.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticListener">
            <summary>
            Represents a watched object to query for IC statistics and listen for updates to those statistics.
            </summary>
            <remarks>
            <para>To watch for changes to statistic values, first call <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/> or <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            to start a watch on the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> objects of interest.  You can then use the indexer
            to retrieve the <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> of a watched key.  You can also register an event handler
            on <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> to be notified when the statistic values change.</para>
            <ininGettingStartedStatistics/>
            <ininStatisticsCatalog/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.#ctor(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.GetWatchedKeys">
            <summary>
            Gets the keys for the watched statistic values.
            </summary>
            <returns>The collection of statistic keys that are watched.</returns>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.IsWatching">
            <summary>
            Determines whether this instance is watching.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is watching; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.IsWatching(ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Determines whether the statistic value at the specified key is being watched.
            </summary>
            <param name="key">The key for a statistic value.</param>
            <returns>
            	<see langword="true"/> if the statistic value for the specified key is being watched; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])">
            <summary>
            A synchronous request to query and watch statistic values at the given keys.
            </summary>
            <param name="keysToWatch">The keys for the statistic values to start watching.</param>
            <remarks>
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/> or <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            <note>
            Any requests for a statistic that has not yet been added to the cache from any session will initially return the value of 'N/A'. 
            It will then be updated via <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> when the cache is updated with the actual value.
            </note>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="keysToWatch"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="keysToWatch"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> is already watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Starts an asynchronous request to query and watch statistic values at the given keys.
            </summary>
            <param name="keysToWatch">The keys for the statistic values to start watching.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/> or <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            <note>
            Any requests for a statistic that has not yet been added to the cache from any session will initially return the value of 'N/A'. 
            It will then be updated via <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> when the cache is updated with the actual value.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch has already been started for this instance of <see cref="T:ININ.IceLib.Statistics.StatisticListener"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="keysToWatch"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="keysToWatch"/> is empty.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsyncPerformTask(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsyncCompleted(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ChangeWatchedKeysImpl(ININ.IceLib.Statistics.StatisticKey[],ININ.IceLib.Statistics.StatisticKey[],System.Boolean)">
            <summary>
            Shared implementation of the method used to change the watched set of statistics values.
            </summary>
            <param name="keysToAdd">The keys of the statistic values to add. (Can be <see langword="null"/>.)</param>
            <param name="keysToRemove">The keys of the statistic values to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ChangeWatchedKeys(ININ.IceLib.Statistics.StatisticKey[],ININ.IceLib.Statistics.StatisticKey[],System.Boolean)">
            <summary>
            A synchronous request to change the watched statistic values.
            </summary>
            <param name="keysToAdd">The keys of the statistic values to add. (Can be <see langword="null"/>.)</param>
            <param name="keysToRemove">The keys of the statistic values to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <remarks>
            <ininHowWatchesWork/>
            <note>
            Any requests for a statistic that has not yet been added to the cache from any session will initially return the value of 'N/A'. 
            It will then be updated via <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> when the cache is updated with the actual value.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> is not watched.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="keysToAdd"/> or <paramref name="keysToRemove"/> collection contains a <see langword="null"/> item.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ChangeWatchedKeysAsync(ININ.IceLib.Statistics.StatisticKey[],ININ.IceLib.Statistics.StatisticKey[],System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Starts an asynchronous request to change the watched statistic values.
            </summary>
            <param name="keysToAdd">The keys of the statistic values to add. (Can be <see langword="null"/>.)</param>
            <param name="keysToRemove">The keys of the statistic values to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> is not watched.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="keysToAdd"/> or <paramref name="keysToRemove"/> collection contains a <see langword="null"/> item.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            <note>
            Any requests for a statistic that has not yet been added to the cache from any session will initially return the value of 'N/A'. 
            It will then be updated via <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> when the cache is updated with the actual value.
            </note>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ChangeWatchedKeysAsyncPerformTask(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.ChangeWatchedKeysAsyncCompleted(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StopWatching">
            <summary>
            A synchronous request to stop watching statistic values.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.StatisticListener"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Start an asynchronous request to stop watching statistic values.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">A watch was not started. See <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StopWatchingAsyncPerformTask(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StopWatchingAsyncCompleted(ININ.IceLib.Statistics.StatisticListener.AsyncStatisticListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated">
            <summary>
            Occurs when a statistic value has been updated.
            </summary>
            <remarks>
            This event will only occur when statistics being watched have changed. To start
            watching for statistics changes call either the <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/> method or
            the <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatching(ININ.IceLib.Statistics.StatisticKey[])"/> or <see cref="M:ININ.IceLib.Statistics.StatisticListener.StartWatchingAsync(ININ.IceLib.Statistics.StatisticKey[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticListener.Item(ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> with the specified key.
            </summary>
            <value>The statistic value.</value>
            <exception cref="T:ININ.IceLib.NotCachedException">The statistic key is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListener.StatisticListenerWatcherProxy.StatisticUpdated(ININ.IceLib.Statistics.StatisticKey[],ININ.IceLib.Statistics.StatisticValue[])">
            <summary>
            Statistics the updated.
            </summary>
            <param name="keysUpdated">The key updated.</param>
            <param name="valuesUpdated">The value updated.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerProvider.SendStatWatchRequest(System.Collections.Generic.List{ININ.IceLib.Statistics.StatisticListenerWatcherCache.ValueItem},System.Collections.Generic.List{ININ.IceLib.Statistics.StatisticListenerWatcherCache.ValueItem},System.Boolean)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerProvider.Perform_StatisticWatchUpdate(System.String,ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerProvider.HandleStatisticWatchUpdate(ININ.IceLib.Statistics.StatisticsManager,ININ.ThinBridge.Message)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.ReserveForWatching(ININ.IceLib.Statistics.IStatisticListenerWatcher)">
            <summary>
            Reserves the watcher for watching.
            </summary>
            <param name="watcher">The statistic listener.</param>
            <returns><see langword="true"/> if success, <see langword="false"/> if watcher already watching.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.StartWatching(ININ.IceLib.Statistics.IStatisticListenerWatcher,ININ.IceLib.Statistics.StatisticKey[])">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.ChangeWatchedKeys(ININ.IceLib.Statistics.IStatisticListenerWatcher,ININ.IceLib.Statistics.StatisticKey[],ININ.IceLib.Statistics.StatisticKey[],System.Boolean)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.StopWatching(ININ.IceLib.Statistics.IStatisticListenerWatcher)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticListenerWatcherCache.UpdateWatch(ININ.IceLib.Statistics.StatisticKey,ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticPercentValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with percentage values represented as a <langref name="double"/> data type.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.#ctor(ININ.IceLib.Statistics.StatisticPercentValue)">
             <overloads>
             Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticPercentValue"/> class.
             </overloads>
            
             <summary>
             Copy constructor.
             </summary>
             <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticPercentValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticPercentValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.GetNormalizedValue">
            <summary>
            Gets underlying percent value.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.GetDisplayFormatString(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Gets a display format string for the <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>.
            </summary>
            <param name="statisticDefinition">The statistic definition.</param>
            <returns>The display format string.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticPercentValue.CompareTo(ININ.IceLib.Statistics.StatisticPercentValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticPercentValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticsManager">
            <summary>
            Provides access to statistics.
            </summary>
            <remarks>
            This class serves as the initial entry point into the Statistics namespace.
            <code>
            Session session = new Session();
            session.Connect(...);
            StatisticsManager statisticsManager = StatisticsManager.GetInstance(session);
            </code>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticsManager.#ctor(ININ.IceLib.Connection.Session)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticsManager.GetInstance(ININ.IceLib.Connection.Session)">
            <summary>
            Gets a <see cref="T:ININ.IceLib.Statistics.StatisticsManager"/>.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <returns>The <see cref="T:ININ.IceLib.Statistics.StatisticsManager"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticsManager.RegisterEventHandlers">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticsManager.HandleChangeNotification(System.Object,ININ.IceLib.Internal.MessageReceivedEventArgs)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticsManager.Session">
            <summary>
            Gets the Session with which this <see cref="T:ININ.IceLib.Statistics.StatisticsManager"/> is associated.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with a time in status data type.  Defines the length of time
            in status.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.#ctor(ININ.IceLib.Statistics.StatisticStatusMessageKeyValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.SetValue(System.String)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.GetNormalizedValue">
            <summary>
            Gets the value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.GetTimeStamp">
            <summary>
            Gets the time stamp associated with this time duration.
            </summary>
            <returns>The time stamp.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.CompareTo(ININ.IceLib.Statistics.StatisticStatusMessageKeyValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticStatusMessageKeyValue.Value">
            <summary>
            Gets the value as a time span.  This value can never be negative and
            will always be capped with a minimum of zero.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticStringValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="string"/> data type.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.#ctor(ININ.IceLib.Statistics.StatisticStringValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticStringValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticStringValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.GetNormalizedValue">
            <summary>
            Returns 0.0, since a string value cannot be converted to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.SetValue(System.String)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticStringValue.CompareTo(ININ.IceLib.Statistics.StatisticStringValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticStringValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticTimeDurationValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="TimeSpan"/> data type that is duration since something happened.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.StatisticTimeDurationValue"/> represents the time span that counts up since something happened as opposed to
            <see cref="T:ININ.IceLib.Statistics.StatisticDurationValue"/> that represents a fixed time span, <see cref="T:ININ.IceLib.Statistics.StatisticFutureDurationValue"/>
            which counts down since something happened, or <see cref="T:ININ.IceLib.Statistics.StatisticFiniteDurationValue"/> which switches between counting and fixed.
            This allows consumer applications to count down until the event will occur.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.#ctor(ININ.IceLib.Statistics.StatisticTimeDurationValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticTimeDurationValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticTimeDurationValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.SetValue(System.String)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.GetNormalizedValue">
            <summary>
            Gets the elapsed <c>TimeSpan</c> value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.GetTimeStamp">
            <summary>
            Gets the time stamp associated with this time duration.
            </summary>
            <returns>The time stamp.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.CompareTo(ININ.IceLib.Statistics.StatisticTimeDurationValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticTimeDurationValue.Value">
            <summary>
            Gets the value as a time span. The value returns the <c>TimeSpan</c> since the time stamp associated with this value.
            See <see cref="M:ININ.IceLib.Statistics.StatisticTimeDurationValue.GetTimeStamp"/>.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticTimeStampValue">
            <summary>
            The <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> for statistics with <langref name="DateTime"/> data type.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.#ctor(ININ.IceLib.Statistics.StatisticTimeStampValue)">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">The value to copy.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticTimeStampValue"/> class.
            </summary>
            <param name="definition">A <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> that this value represents.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.#ctor(ININ.IceLib.Statistics.StatisticDefinition,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.StatisticTimeStampValue"/> class.
            </summary>
            <param name="definition">The definition.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.Clone">
            <summary>
            Clones this value.
            </summary>
            <returns>The new instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.SetValue(System.String)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.ParseValueFromStream(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.GetNormalizedValue">
            <summary>
            Gets the value as a normalized value by casting the number of ticks to a double.
            </summary>
            <returns>The normalized value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.GetDisplayString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticTimeStampValue.CompareTo(ININ.IceLib.Statistics.StatisticTimeStampValue)">
            <summary>
            Compares one statistic value to another.
            </summary>
            <param name="other">The value to compare against.</param>
            <returns>An integer.</returns>
            <exception cref="T:System.ArgumentNullException">The passed in argument was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticTimeStampValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticUnits">
            <summary>
            Defines the measurement units of a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/>.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.None">
            <summary>
            The value has no type specified.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.Milliseconds">
            <summary>
            The type represents time in milliseconds.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.Seconds">
            <summary>
            The type represents time in seconds.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.Gigabytes">
            <summary>
            The type represents gigabytes.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.Kilobytes">
            <summary>
            The type represents kilobytes.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticUnits.Percent">
            <summary>
            The type represents a percentage.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticValueFactory">
            <summary>
            Helps with creating statistic values.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValueFactory.CreateValue(ININ.IceLib.Statistics.StatisticValueType,ININ.IceLib.Statistics.StatisticDefinition)">
            <summary>
            Creates the value.
            </summary>
            <param name="valueType">Type of the value.</param>
            <param name="definition">The definition. Can be <see langword="null"/> for 2 part creation.</param>
            <returns>The statistic value.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.StatisticValueFactory.CreateValue(ININ.IceLib.Statistics.StatisticValueType,ININ.IceLib.Statistics.StatisticDefinition,System.String)">
            <summary>
            Creates the value.
            </summary>
            <param name="valueType">Type of the value.</param>
            <param name="definition">The definition.</param>
            <param name="text">The text.</param>
            <returns>The created value, <see langword="null"/> if it couldn't be made.</returns>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticValueType">
            <summary>
            Represents the value type of a statistic.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.NotSupported">
            <summary>
            Value type is not supported.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Null">
            <summary>
            Value type is <see langword="null"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Error">
            <summary>
            Value type is error.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Int">
            <summary>
            Value type is an integer.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Double">
            <summary>
            Value type is a double.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.String">
            <summary>
            Value type is a string.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Bool">
            <summary>
            Value type is a bool.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.TimeStamp">
            <summary>
            Value type is time stamp.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.TimeDuration">
            <summary>
            Value type is time stamp representing a duration.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Duration">
            <summary>
            Value type is duration.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.FutureDuration">
            <summary>
            Value type is a future duration.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.FiniteDuration">
            <summary>
            Value is a duration that has a finite life.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.Percent">
            <summary>
            Value type is a percent.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.StatisticValueType.StatusMessageKey">
            <summary>
            Value type is a status message key.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.StatisticValueUpdatedEventArgs">
            <summary>
            Provides data for <see cref="E:ININ.IceLib.Statistics.StatisticListener.StatisticValueUpdated"/> event.
            </summary>
            <seealso cref="T:ININ.IceLib.Statistics.StatisticListener"/>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValueUpdatedEventArgs.StatisticKeys">
            <summary>
            Gets the read only collection of statistic keys.  This is a parallel array to <see cref="P:ININ.IceLib.Statistics.StatisticValueUpdatedEventArgs.StatisticValues"/>.
            </summary>
            <value>The statistic key collection.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.StatisticValueUpdatedEventArgs.StatisticValues">
            <summary>
            Gets the read only collection of statistic values.  This is a parallel array to <see cref="P:ININ.IceLib.Statistics.StatisticValueUpdatedEventArgs.StatisticKeys"/>.
            </summary>
            <value>The statistic value collection.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs">
            <summary>
            Provides data for completion of <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs},System.Object)"/>.
            </summary>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs},System.Object)"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs.#ctor(ININ.IceLib.Statistics.ValidatedAssociatedParameterSetValue,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs"/> class.
            </summary>
            <param name="results">The results.</param>
            <param name="error">The error.</param>
            <param name="cancelled">if set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="results"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs.Results">
            <summary>
            Gets the results associated with the validation request.
            </summary>
            <value>The results.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ValidatedAssociatedParameterSetValue">
            <summary>
            Represents an ordered set of <see cref="T:ININ.IceLib.Statistics.ValidatedDetailedParameterValue"/>.
            </summary>
            <remarks>
            <para>A client application may have a need to retain the ID of a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> between executions of 
            the client application.  This may be necessary for restoring the user's preferred statistic display, for 
            instance.  It is possible for the display text and description for a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to change 
            while the client is offline, or for the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to be removed altogether.  For this reason,
            the client will need to validate the details of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> when restoring the display.  
            </para>
            <para>
            The three things that the client is interested in are:
            	<list type="bullet">
            	<item>The combination of parameter values is still valid.</item>
            	<item>The individual parameter values still exist.</item>
            	<item>Retrieve updated display information for each parameter value.</item>
            	</list>
            This can be achieved by requesting the details for the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> via the 
            <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValues(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})"/> method.  This will return a 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> for all requested ParameterValues that still exist.  Another option is use
            the <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/> method which will return the 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> if it exists, but will also indicate the number of matching 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> instances for each <see cref="T:ININ.IceLib.Statistics.ParameterType"/> in the 
            <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/> if the query had requested any matching 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/>.
            </para>
            </remarks>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs},System.Object)"/>
            <seealso cref="T:ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs"/>
        </member>
        <member name="M:ININ.IceLib.Statistics.ValidatedAssociatedParameterSetValue.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.ValidatedAssociatedParameterSetValue.Definition">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetDefinition"/> that defines the parameters types and order for 
            this <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetValue"/>.
            </summary>
            <value>The definition.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.ValidatedDetailedParameterValue">
            <summary>
            Represents the details for a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> from a request to validate a set of 
            associated parameter values.
            </summary>
            <remarks>
            <para>A client application may have a need to retain the ID of a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> between executions of 
            the client application.  This may be necessary for restoring the user's preferred statistic display, for 
            instance.  It is possible for the display text and description for a <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to change 
            while the client is offline, or for the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> to be removed altogether.  For this reason,
            the client will need to validate the details of the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> when restoring the display.  
            </para>
            <para>
            The three things that the client is interested in are:
            	<list type="bullet">
            	<item>The combination of parameter values is still valid.</item>
            	<item>The individual parameter values still exist.</item>
            	<item>Retrieve updated display information for each parameter value.</item>
            	</list>
            This can be achieved by requesting the details for the <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> via the 
            <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.GetDetailedParameterValues(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.ParameterValue})"/> method.  This will return a 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> for all requested ParameterValues that still exist.  Another option is use
            the <see cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/> method which will return the 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> if it exists, but will also indicate the number of matching 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/> instances for each <see cref="T:ININ.IceLib.Statistics.ParameterType"/> in the 
            <see cref="T:ININ.IceLib.Statistics.AssociatedParameterSetQuery"/> if the query had requested any matching 
            <see cref="T:ININ.IceLib.Statistics.DetailedParameterValue"/>.
            </para>
            </remarks>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSet(ININ.IceLib.Statistics.AssociatedParameterSetQuery)"/>
            <seealso cref="M:ININ.IceLib.Statistics.ParameterValuesDepot.ValidateAssociatedParameterSetAsync(ININ.IceLib.Statistics.AssociatedParameterSetQuery,System.EventHandler{ININ.IceLib.Statistics.ValidateAssociatedParameterSetCompletedEventArgs},System.Object)"/>
            <seealso cref="T:ININ.IceLib.Statistics.ValidatedDetailedParameterValue"/>
        </member>
        <member name="P:ININ.IceLib.Statistics.ValidatedDetailedParameterValue.IsValid">
            <summary>
            Gets a value indicating whether the requested <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> is valid.
            </summary>
            <value><see langword="true"/> if this instance is valid; otherwise, <see langword="false"/>.</value>
            <remarks>
            If <see langword="false"/>, the details of the instance should be ignored.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Statistics.ValidatedDetailedParameterValue.MatchCount">
            <summary>
            Gets the count of the number of <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> instances that would be valid if the query to be validated
            had instead matched any <see cref="T:ININ.IceLib.Statistics.ParameterValue"/> rather than a specific <see cref="T:ININ.IceLib.Statistics.ParameterValue"/>.
            </summary>
            <value>The match count.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.WatchedParameterValue">
            <summary>
            Represents a parameter value that is watched.
            </summary>
        </member>
        <member name="E:ININ.IceLib.Statistics.WatchedParameterValue.Changed">
            <summary>
            Occurs when the watched value has been updated.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.WatchedParameterValue.DisplayString">
            <summary>
            Gets the parameter value display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertAction">
            <summary>
            Represents an alert action specification.
            An alert action defines what will occur when an alert triggers.  An <see cref="P:ININ.IceLib.Statistics.Alerts.AlertAction.AlertRule"/> has a list
            of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> objects that define the behavior of the resulting events.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> class.
            </summary>
            <param name="targetId">The target ID.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.#ctor(ININ.IceLib.Statistics.Alerts.AlertAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the value for the associated property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <returns><see langword="true"/> if the property exists, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.GetValueNames">
            <summary>
            Gets names of the values currently contained by this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/>.
            </summary>
            <returns>The value names.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.SetValue(System.String,System.String)">
            <summary>
            Sets the value for the associated property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <exception cref="T:System.InvalidOperationException">The instance is not editable.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.op_Equality(ININ.IceLib.Statistics.Alerts.AlertAction,ININ.IceLib.Statistics.Alerts.AlertAction)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.op_Inequality(ININ.IceLib.Statistics.Alerts.AlertAction,ININ.IceLib.Statistics.Alerts.AlertAction)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.Equals(ININ.IceLib.Statistics.Alerts.AlertAction)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertAction.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertAction.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
            <value>
            	<see langword="true"/> if this instance is editable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertAction.TargetId">
            <summary>
            Gets the target ID. Who the alert action is destined for.
            </summary>
            <value>The target ID.</value>
            <exception cref="T:System.InvalidOperationException">The instance is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertAction.AlertRule">
            <summary>
            Gets the <see cref="P:ININ.IceLib.Statistics.Alerts.AlertAction.AlertRule"/> that this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> participates in.
            </summary>
            <value>The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertAction.AlertRule"/>.</value>
            <remarks>
            If this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> is not yet associated with an <see cref="P:ININ.IceLib.Statistics.Alerts.AlertAction.AlertRule"/>, the value will be
            <see langword="null"/></remarks>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertAction.ActionId">
            <summary>
            Gets the action ID.
            </summary>
            <value>The action ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertAction.NamedValues">
            <summary>
            Gets the named values.
            </summary>
            <value>The named values.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertActionTargets">
            <summary>
            Represents a list of well known IDs for action owners.
            These are used in conjunction with <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to define the target
            of the alert action.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertActionTargets.EmailMessage">
            <summary>
            The target is the Email subsystem.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertActionTargets.CustomHandler">
            <summary>
            The target is for IC custom handlers.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertActionTargets.ClientMemo">
            <summary>
            The target is a client memo.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCatalog">
            <summary>
            The alert catalog is used to manage <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> configurations, retrieving, creating, editing, and deleting them.
            </summary>
            <remarks>
            <para>
            This class allows you to start, stop, and change watches on on the entire alert catalog or a specified subset of it.
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching"/> and <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> allow for watching 
            the entire alert catalog.  <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})"/> and
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            allow for watching for specific property changes on alert sets in a given category.
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})"/> and 
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            allow for watching for specific property changes on the specified alerts.
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatch(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})"/>, 
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsync(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>,
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatch(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})"/>, and
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            allow for modifying existing watches.
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatching"/> and <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>
            allow for stopping the existing watch.
            <see cref="E:ININ.IceLib.Statistics.Alerts.AlertCatalog.AlertCatalogChanged"/> will be triggered when there is a change in one of the watched alert sets and properties.
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedAlertSets"/>, <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedOwnerDefaultAlertSet"/>, and <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedSharedAlertSets"/>
            can be used to retrieve the list of all alert sets, alert sets in the owner default category, and alert sets in the 
            shared category respectively.  <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetAlertSet(System.String)"/> can be used to retrieve a specific alert set.  
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetAlertDefinitions(ININ.IceLib.Statistics.StatisticKey,System.Boolean)"/> will retrieve the alert definitions for a given statistic key.  There must be an
            active watch to retrieve alert sets and definitions.
            </para>
            <para>
            To create an alert set, first instantiate a new <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/>, filling it out as needed.  Then call
            either <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSetAsync(ININ.IceLib.Statistics.Alerts.EditableAlertSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> to create the alert set.
            </para>
            <para>
            To modify an alert set, first retrieve the alert set by starting a watch and calling <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetAlertSet(System.String)"/>, 
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedAlertSets"/>, <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedOwnerDefaultAlertSet"/>, or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedSharedAlertSets"/>.
            Then create an <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/> out of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> you wish to modify.  Make the changes
            and call <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSetAsync(ININ.IceLib.Statistics.Alerts.EditableAlertSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> to commit the changes.
            </para>
            <para>
            To remove an alert set, call <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSet(System.String)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSetAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> specifying the
            alert set ID to remove.
            </para>
            <para>
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.Subscribe(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean)"/> and <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.SubscribeAsync(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> allow for subscribing and unsubscribing to a specific alert set.
            </para>
            <ininGettingStartedStatistics/>
            <ininStatisticsCatalog/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.#ctor(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="statisticsManager"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.VerifyCreateArguments(ININ.IceLib.Statistics.Alerts.EditableAlertSet,ININ.IceLib.Connection.Session)">
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Alert set does not have create update operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <summary>
            Creates the alert set.
            </summary>
            <param name="alertSet">The alert set.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Alert set does not have create update operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSetAsync(ININ.IceLib.Statistics.Alerts.EditableAlertSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Updates the alert set asynchronously.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Alert set does not have create update operation.</exception>
            <exception cref="T:System.Exception">Unexpected exception when creating the alert set.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSetAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception">Unexpected exception when creating the alert set.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSetAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <summary>
            Updates the alert set.
            </summary>
            <param name="alertSet">The alert set.</param>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to modify the <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/>.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSetAsync(ININ.IceLib.Statistics.Alerts.EditableAlertSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the alert set.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.Exception">Unexpected exception while updating the alert set.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSetAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateAlertSetAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSet(System.String)">
            <summary>
            Removes the alert set.
            </summary>
            <param name="alertSetId">The alert set ID.</param>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to delete the alert set.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSetAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously removes the alert set.
            </summary>
            <param name="alertSetId">The alert set ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.Exception">An unexpected exception while removing the alert set.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSetAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.RemoveAlertSetAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateSubscriptions(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSetSubscriber},System.String)">
            <summary>
            Updates the subscriptions for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="subscribers">The subscribers.</param>
            <param name="alertSetId">The alert set's ID.</param>
            <exception cref="T:System.ArgumentException"><paramref name="subscribers"/> is empty or <paramref name="alertSetId"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">a parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A subscriber has its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Action"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Unknown"/>
            or its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Type"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Unknown"/>.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to share or force subscriptions on the alert set.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateSubscriptionsAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSetSubscriber},System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the subscriptions for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="subscribers">The subscribers.</param>
            <param name="alertSetId">The alert set's ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.Exception">An unexpected exception occurred while updating the subscriptions of the alert set.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="subscribers"/> is empty or <paramref name="alertSetId"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">a parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateSubscriptionsAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.UpdateSubscriptionsAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.TransferOwnership(System.String,ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Transfers the ownership for the given <paramref name="alertSet"/>.
            </summary>
            <param name="userId">The user ID.</param>
            <param name="alertSet">The alert set.</param>
            <exception cref="T:System.ArgumentException">a parameter is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">a parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Can not transfer ownership of a default alert set.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to transfer the ownership of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.TransferOwnershipAsync(System.String,ININ.IceLib.Statistics.Alerts.AlertSet,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously transfers the ownership for the given <paramref name="alertSet"/>.
            </summary>
            <param name="userId">The user ID.</param>
            <param name="alertSet">The alert set's ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.Exception">An unexpected exception occurred while transfering the ownership of the alert set.</exception>
            <exception cref="T:System.ArgumentException">a parameter is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">a parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.TransferOwnershipAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.TransferOwnershipAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.IsWatching">
            <summary>
            Determines whether this instance is watching.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is watching; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedSharedAlertSets">
            <summary>
            Gets the watched shared alert sets.
            </summary>
            <returns>A collection of shared alert sets.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedOwnerDefaultAlertSet">
            <summary>
            Gets the owner's default alert set.
            </summary>
            <returns>The alert set.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetWatchedAlertSets">
            <summary>
            Gets the watched alert sets.
            </summary>
            <returns>A collection of watched alert sets.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetAlertDefinitions(ININ.IceLib.Statistics.StatisticKey,System.Boolean)">
            <summary>
            Gets the alert definitions for a specific statistic key.
            </summary>
            <param name="statisticKey">The statistic key.</param>
            <param name="subscribedOnly">if set to <see langword="true"/> only subscribed alerts will be returned.</param>
            <returns>A list of alert definitions.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.GetAlertSet(System.String)">
            <summary>
            Gets the alert set.
            </summary>
            <param name="alertSetId">The alert set ID.</param>
            <returns>The alert set if found, <see langword="null"/> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched, or the requested 
            <paramref name="alertSetId"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
             <overloads>
             Synchronous request to start watching alert filters.
             </overloads>
             
             <summary>
             Synchronous request to start watching alert filters.
             </summary>
             <param name="categories">The category or categories to watch.</param>
             <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
             <exception cref="T:System.InvalidOperationException">The watch is already watching.</exception>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/> or the requested
             <paramref name="categories"/> are invalid.</exception>
             <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
             <ConnectionExceptions/>
             <remarks>
                 <note>If <paramref name="categories"/> is <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <paramref name="categories"/> has the <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/> flag,
                  the user must have the <c>Alert Administrator</c> right set in Interaction Administrator.</note>
                 <note>Using the <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/> will pull all Alerts from the system and in conjunction with listening to all Alerts can be harmful to performance.</note>
             	<note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
             	<ininHowWatchesWork/>
             </remarks>
                 <example lang="C#" unescaped="True">
                 This example illustrates what should be avoided when using <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/>.
                 <code>
                     Session session = new Session();
                     session.Connect(...);
                     StatisticsManager statisticsManager = StatisticsManager.GetInstance(session);
                     AlertCatalog alertCatalog = new AlertCatalog(statisticsManager);
                     AlertListener alertListener = new AlertListener(statisticsManager);
            
                     AlertSet.Property[] properties = new[]
                                                                {
                                                                    AlertSet.Property.AccessMode,
                                                                     AlertSet.Property.AlertDefinitions,
                                                                     AlertSet.Property.Created,
                                                                     AlertSet.Property.Description,
                                                                     AlertSet.Property.DisplayString,
                                                                     AlertSet.Property.Id,
                                                                     AlertSet.Property.Modified,
                                                                     AlertSet.Property.ModifiedBy,
                                                                     AlertSet.Property.Owner,
                                                                     AlertSet.Property.OwnerDisplayName,
                                                                     AlertSet.Property.SubscribedByOther,
                                                                     AlertSet.Property.SubscribedByUser,
                                                                     AlertSet.Property.AlertSetSubscribers
                                                                 };
            
                     alertCatalog.StartWatching(AlertSetCategories.All, properties);
            
                     alertListener.AlertReceived += AlertListenerAlertReceived;
                     alertListener.AlertChanged += AlertListenerAlertChanged;
            
                     // This will return all AlertSets from the server when using <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/>.
                     var watchedAlertSets = alertCatalog.GetWatchedAlertSets();
            
                     // Build AlertFilterKeys
                     List&lt;AlertFilterKey&gt; filterKeys = new List&lt;AlertFilterKey&gt;();
            
                     foreach (AlertSet alertSet in watchedAlertSets)
                     {                                
                         filterKeys.AddRange(BuildAlertFilterKey(alertSet));
                     }
            
                     // If AlertSetCategories.All or AlertSetCategories.AdminAccess was used this will start a watch on every unique AlertDefinition in each AlertSet.
                     // **This is where performance could be impacted.**
                     alertListener.StartWatching(
                             filterKeys.ToArray(),
                                AlertListenerFilter.Action | AlertListenerFilter.Condition | AlertListenerFilter.Severity);
                 }
            
                 private IEnumerable&lt;AlertFilterKey&gt; BuildAlertFilterKey(AlertSet alertSet)
                 {
                     List&lt;AlertFilterKey&gt; alertFilterKeys = new List&lt;AlertFilterKey&gt;();
                     List&lt;string&gt; uniqueTargets = new List&lt;string&gt;();
            
                     foreach (AlertDefinition alertDefinition in alertSet.AlertDefinitions)
                     {
                         foreach (AlertRule alertRule in alertDefinition.AlertRules)
                         {
                             foreach (AlertAction alertAction in alertRule.AlertActions)
                                {
                                    if (!uniqueTargets.Contains(alertAction.TargetId))
                                    {
                                       uniqueTargets.Add(alertAction.TargetId);
                                        alertFilterKeys.Add(new AlertFilterKey(alertSet, alertAction.TargetId));
                                    }
                                }
                            }
                     }
            
                     return alertFilterKeys;
                 }
                 </code>
                 </example>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Synchronous request to start watching alert filters.
            </summary>
            <exception cref="T:System.InvalidOperationException">The watch is already watching.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <ConnectionExceptions/>
            <remarks>
            <note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatching">
            <summary>
            Synchronous request to start watching alert filters.
            </summary>
            <exception cref="T:System.InvalidOperationException">The watch is already watching.</exception>
            <remarks>
            <note>Starts a watch on all <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetCategories"/>. The user must have the <c>Alert Administrator</c> right set in Interaction Administrator.</note>
            <note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
             <overloads>
             Asynchronous request to start watching the alert catalog.
             </overloads>
             
             <summary>
             Asynchronous request to start watching the alert catalog.
             </summary>
             <param name="categories">The category or categories to watch.</param>
             <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
             <param name="completedCallback">The completed callback.</param>
             <param name="userState"><ininAsyncStateParam/></param>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/> or the requested 
             <paramref name="categories"/> are invalid.</exception>
             <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
             <remarks>
             <ininAsyncMethodNote/>
                 <note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
                 <note>If <paramref name="categories"/> is <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <paramref name="categories"/> has the <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/> flag,
                  the user must have the <c>Alert Administrator</c> right set in Interaction Administrator.</note>
                 <note>Using the <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/> will pull all Alerts from the system and in conjunction with listening to all Alerts can be harmful to performance.</note>
             <ininHowWatchesWork/>
             </remarks>
                 <example lang="C#" unescaped="True">
                 This example illustrates what should be avoided when using <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/>.
                 <code>
                     Session session = new Session();
                     session.Connect(...);
                     StatisticsManager statisticsManager = StatisticsManager.GetInstance(session);
                     AlertCatalog alertCatalog = new AlertCatalog(statisticsManager);
                     AlertListener alertListener = new AlertListener(statisticsManager);
            
                     AlertSet.Property[] properties = new[]
                                                                {
                                                                    AlertSet.Property.AccessMode,
                                                                     AlertSet.Property.AlertDefinitions,
                                                                     AlertSet.Property.Created,
                                                                     AlertSet.Property.Description,
                                                                     AlertSet.Property.DisplayString,
                                                                     AlertSet.Property.Id,
                                                                     AlertSet.Property.Modified,
                                                                     AlertSet.Property.ModifiedBy,
                                                                     AlertSet.Property.Owner,
                                                                     AlertSet.Property.OwnerDisplayName,
                                                                     AlertSet.Property.SubscribedByOther,
                                                                     AlertSet.Property.SubscribedByUser,
                                                                     AlertSet.Property.AlertSetSubscribers
                                                                 };
            
                     alertCatalog.StartWatching(AlertSetCategories.All, properties);
            
                     alertListener.AlertReceived += AlertListenerAlertReceived;
                     alertListener.AlertChanged += AlertListenerAlertChanged;
            
                     // This will return all AlertSets from the server when using <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All"/> or <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess"/>.
                     var watchedAlertSets = alertCatalog.GetWatchedAlertSets();
            
                     // Build AlertFilterKeys
                     List&lt;AlertFilterKey&gt; filterKeys = new List&lt;AlertFilterKey&gt;();
            
                     foreach (AlertSet alertSet in watchedAlertSets)
                     {                                
                         filterKeys.AddRange(BuildAlertFilterKey(alertSet));
                     }
            
                     // If AlertSetCategories.All or AlertSetCategories.AdminAccess was used this will start a watch on every unique AlertDefinition in each AlertSet.
                     // **This is where performance could be impacted.**
                     alertListener.StartWatching(
                             filterKeys.ToArray(),
                                AlertListenerFilter.Action | AlertListenerFilter.Condition | AlertListenerFilter.Severity);
                 }
            
                 private IEnumerable&lt;AlertFilterKey&gt; BuildAlertFilterKey(AlertSet alertSet)
                 {
                     List&lt;AlertFilterKey&gt; alertFilterKeys = new List&lt;AlertFilterKey&gt;();
                     List&lt;string&gt; uniqueTargets = new List&lt;string&gt;();
            
                     foreach (AlertDefinition alertDefinition in alertSet.AlertDefinitions)
                     {
                         foreach (AlertRule alertRule in alertDefinition.AlertRules)
                         {
                             foreach (AlertAction alertAction in alertRule.AlertActions)
                                {
                                    if (!uniqueTargets.Contains(alertAction.TargetId))
                                    {
                                       uniqueTargets.Add(alertAction.TargetId);
                                        alertFilterKeys.Add(new AlertFilterKey(alertSet, alertAction.TargetId));
                                    }
                                }
                            }
                     }
            
                     return alertFilterKeys;
                 }
                 </code>
                 </example>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to start watching the alert catalog.
            </summary>
            <param name="alertSets">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> instances to watch.</param>
            <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to start watching the alert catalog.
            </summary>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling StartWatching or StartWatchingAsync.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StartWatchingAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatch(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Synchronous request to change the watched alert filters.
            </summary>
            <param name="categories">The category or categories to watch.</param>
            <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/> or the requested 
            <paramref name="categories"/> are invalid.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <ConnectionExceptions/>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatch(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Synchronous request to change the watched alert filters.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <ConnectionExceptions/>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsync(ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to change the watched alert filters.
            </summary>
            <param name="categories">The category or categories to watch.</param>
            <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/> or the requested 
            <paramref name="categories"/> are invalid.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsync(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property},System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to change the watched alert filters.
            </summary>
            <param name="alertSets">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> instances to watch.</param>
            <param name="properties">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> properties to watch.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.ChangeWatchAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatching">
            <summary>
            Stops watching the alert catalog.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops watching the alert catalog.
            </summary>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAlertAdministrator">
            <summary>
            Stops the watching of the alert catalog that was started with <c>Alert Administrator</c> rights.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAlertAdministratorAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops the watching of the alert catalog that was started with <c>Alert Administrator</c> rights.
            </summary>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> is not watched.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAlertAdministratorAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.StopWatchingAlertAdministratorAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.VerifySubscribeArguments(ININ.IceLib.Statistics.Alerts.AlertSet)">
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot perform subscribe operation on default alert set.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.Subscribe(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean)">
            <summary>
            Subscribes to the specified alert set.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="subscribeFlag">if set to <see langword="true"/> subscribe to alert set, else if set to <see langword="false"/> unsubscribe from the alert set.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot perform subscribe operation on default alert set.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.SubscribeAsync(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously subscribes to the specified alert set.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="subscribeFlag">if set to <see langword="true"/> subscribe to alert set, else if set to <see langword="false"/> unsubscribe from the alert set.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="alertSet"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot perform subscribe operation on default alert set.</exception>
            <exception cref="T:System.Exception">An unexpected exception occurred while subscribing.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.SubscribeAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception">An unexpected exception occurred while subscribing.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.SubscribeAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertCatalog.AsyncAlertSetState)">
            <exception cref="T:System.Exception">An unexpected exception occurred while subscribing.</exception>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.AlertCatalog.AlertCatalogChanged">
            <summary>
            Occurs when the alert catalog has changed.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCatalog.AlertCatalogWatcherProxy">
            <summary>
            Internal proxy of the watcher interface for raising events.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2">
            <summary>
            Provides data for for the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertCatalog.AlertCatalogChanged"/> event.
            This contains a list of objects that have been added or removed and a list of all
            objects and properties that have changed.
            </summary>
            <typeparam name="TWatchedObject">The watched object.</typeparam>
            <typeparam name="TWatchedObjectPropertiesEnum">Enumeration describing the properties of the watched object.</typeparam>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.#ctor(System.Collections.Generic.SortedList{`0,System.Collections.Generic.List{`1}},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0},System.Collections.Generic.SortedList{`0,System.Collections.Generic.List{ININ.IceLib.Statistics.Alerts.AlertRuleDelta}})">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.GetChangedProperties(`0)">
            <summary>
            Gets the changed properties.
            </summary>
            <param name="watchedObject">The watched object.</param>
            <returns>Returns a list of properties that have changed.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.GetChangedRuleDeltas(`0)">
            <summary>
            Gets the read only collection of changed actions for the given rule.
            </summary>
            <param name="watchedObject">The watched object.</param>
            <returns></returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.Changed">
            <summary>
            Get the existing objects that changed.
            </summary>
            <value>The collection of changed objects.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.Added">
            <summary>
            Get the existing object identifiers that were added.
            </summary>
            <value>The added objects.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertCatalogChangedEventArgs`2.Removed">
            <summary>
            Get the existing object identifiers that were removed.
            </summary>
            <value>The removed objects.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache">
            <summary>
            Manages the watchers and any data for the statistic catalog.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.GetCategoryWatchList">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StartWatching(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Starts watching the catalog of alerts.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="categories">The categories.</param>
            <param name="properties">The watched properties.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The watch is already started.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.ChangeWatch(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,ININ.IceLib.Statistics.Alerts.AlertSetCategories,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Changes the current watch of categories.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="categories">The categories.</param>
            <param name="properties">The watched properties.</param>
            <exception cref="T:System.InvalidOperationException">The watch is not yet started.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StopWatchingCategory(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher)">
            <exception cref="T:System.InvalidOperationException">The watcher is not watching.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.GetAlertSetWatchList">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StartWatching(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Starts watching the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/>.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="alertSets">The list of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> instances to watch.</param>
            <param name="watchedProperties">The properties to watch on the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="watcher"/> is already watching.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.ChangeWatch(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSet.Property})">
            <summary>
            Changes the watch.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="alertSets">The alert sets.</param>
            <param name="properties">The properties.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StopWatchingAlertSets(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher)">
            <summary>
            Stops the watching alert sets.
            </summary>
            <param name="watcher">The watcher.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StopWatchingAlertAdministrator(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher)">
            <summary>
            Stops the watching of the alert catalog that was started with <c>Alert Administrator</c> rights.
            </summary>
            <param name="watcher">The watcher.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StopWatching(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher)">
            <summary>
            Stops watching the alert catalog.
            </summary>
            <param name="watcher">The alert catalog watcher.</param>
            <exception cref="T:System.InvalidOperationException">The alert catalog watcher is already watching the alert catalog.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.AddWatchedAlertSets(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Attempts to add the supplied <paramref name="alertSetIds"/> to the given <paramref name="watcher"/>.
            </summary>
            <param name="watcher">The watcher to add to.</param>
            <param name="alertSetIds">The alert set IDs to attempt to add.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.StartWatching(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher)">
            <summary>
            Starts watching the catalog of alerts.
            </summary>
            <param name="watcher">The watcher.</param>
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The watch is already started.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.CreateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.UpdateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to modify the <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.RemoveAlertSet(System.String)">
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to delete the alert set.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.UpdateSubscriptions(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSetSubscriber},System.String)">
            <summary>
            Updates the subscriptions for the given <paramref name="alertSetId"/>.
            </summary>
            <param name="subscribers">Updated subscribers.</param>
            <param name="alertSetId">ID of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> to update.</param>
            <exception cref="T:System.Exception">An unexpected exception occurred while updating the subscriptions of the alert set.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A subscriber has its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Action"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Unknown"/>
            or its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Type"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Unknown"/>.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to share or force subscriptions on the alert set.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.TransferOwnership(System.String,ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Transfers the ownership for the given <paramref name="alertSet"/>.
            </summary>
            <param name="userId">The user ID.</param>
            <param name="alertSet">The alert set.</param>
            <exception cref="T:System.Exception">An unexpected exception occurred while transfering the ownership of the alert set.</exception>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
            <exception cref="T:ININ.IceLib.InsufficientRightsException">Insufficient rights to transfer the ownership of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.GetAlertSet(ININ.IceLib.Statistics.Alerts.IAlertCatalogWatcher,System.String)">
            <exception cref="T:System.InvalidOperationException">The watcher is not watching, or the requested
            <paramref name="alertSetId"/> is not part of the watch.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.Subscribe(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean)">
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCatalogWatcherCache.AlertCatalogWatch">
            <summary>
            Describes the data watched.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertCondition">
            <summary>
            Base class for alert conditions for alert rules.
            An alert condition defines what state will cause 
            an alert to trigger.  This, combined with the target
            <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> is what makes up an alert.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCondition.op_Equality(ININ.IceLib.Statistics.Alerts.AlertCondition,ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.AlertCondition,ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertCondition.Comparison">
            <summary>
            Gets the comparison mechanism to use when evaluating the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/>.
            </summary>
            <value>The comparison.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertConditionComparison">
            <summary>
            Mechanism to use when evaluating an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.Unknown">
            <summary>
            Represents the condition has not been specified yet.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsNotAvailable">
            <summary>
            Repesents a condition where <see cref="P:ININ.IceLib.Statistics.StatisticValue.IsNull"/> is <see langword="true"/>, 
            which indicates <see langword="null"/>, or not set value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsAvailable">
            <summary>
            Repesents a condition where <see cref="P:ININ.IceLib.Statistics.StatisticValue.IsNull"/> is <see langword="false"/>, 
            which indicates a valid value other than <see langword="null"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsTrue">
            <summary>
            Represents a condition where the boolean value is expected to be <see langword="true"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsFalse">
            <summary>
            Represents a condition where the boolean value is expected to be <see langword="false"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsLessThan">
            <summary>
            Represents a condition where the numeric value is expected to be less than the minimum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.IsGreaterThan">
            <summary>
            Represents a condition where the numeric value is expected to be greater than the maximum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.Range">
            <summary>
            Represents a condition where the numeric value is between the lower and the upper bound (minimum and maximum).
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.EqualTo">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value is equal to the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.NotEqualTo">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value is not equal to the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.Contains">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value contains the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.DoesNotContain">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value does not contain the comparison value.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertConditionComparison.MatchesPrefix">
            <summary>
            Represents a condition where a <see cref="T:ININ.IceLib.Statistics.StatisticValue"/> string value matches the prefix.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertDefinition">
            <summary>
            Represents an alert definition.
            The alert definition defines a list of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> objects that can be applied to a statistic key.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.#ctor(ININ.IceLib.Statistics.Alerts.AlertSet,ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> class.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="statisticKey">The statistic key.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.#ctor(ININ.IceLib.Statistics.Alerts.AlertDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> class.
            </summary>
            <param name="definition">The definition.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.AddAlertRules(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertRule})">
            <summary>
            Adds the alerts.
            </summary>
            <param name="rules">The list of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s to add.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.AddAlertRule(ININ.IceLib.Statistics.Alerts.AlertRule)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> to the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.
            </summary>
            <param name="rule">The rule.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable or the 
            <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> is already associated with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.RemoveAlertRule(ININ.IceLib.Statistics.Alerts.AlertRule)">
            <summary>
            Removes an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> from the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.
            </summary>
            <param name="rule">The rule.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable or the
            <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> is not associated with this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertDefinition.CloneTo(ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <summary>
            Clones an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> and associates it to the supplied <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/>.
            </summary>
            <param name="alertSet">The <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/> to associate.</param>
            <returns>The cloned <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.</returns>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
            <value>
            	<see langword="true"/> if this instance is editable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.AlertSet">
            <summary>
            Gets the alert set associated with this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> instance.
            </summary>
            <value>The alert set.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.StatisticKey">
            <summary>
            Gets the statistic key that is defined for this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/>.
            </summary>
            <value>The statistic key.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.DisplayString">
            <summary>
            Gets the display string.
            </summary>
            <value>The display name.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertDefinition.AlertRules">
            <summary>
            Gets the alert rules.
            </summary>
            <value>The alert rules.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertFilterKey">
            <summary>
            Represents a unique key based on the alert set and target ID.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.#ctor(ININ.IceLib.Statistics.Alerts.AlertSet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertFilterKey"/> class.
            </summary>
            <param name="alertSet">The alert set.</param>
            <param name="targetId">The target ID.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.Equals(ININ.IceLib.Statistics.Alerts.AlertFilterKey)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="otherValue">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.op_Equality(ININ.IceLib.Statistics.Alerts.AlertFilterKey,ININ.IceLib.Statistics.Alerts.AlertFilterKey)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertFilterKey.op_Inequality(ININ.IceLib.Statistics.Alerts.AlertFilterKey,ININ.IceLib.Statistics.Alerts.AlertFilterKey)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertFilterKey.AlertSet">
            <summary>
            Gets the alert set.
            </summary>
            <value>The alert set.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertFilterKey.TargetId">
            <summary>
            Gets the target ID.
            </summary>
            <value>The target ID.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertListener">
            <summary>
            Represents a class to enable listening for alert notifications.
            Alert notifications are events that get sent down when an alert
            enters or exits the alerted state.
            </summary>
            <remarks>
            <ininGettingStartedStatistics />
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.#ctor(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.GetFilterKeys">
            <summary>
            Gets the watched Alert Filter Keys.
            </summary>
            <returns>A read-only collection of the Alert Filter Keys that are being watched.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.GetAlertNotifications(ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Gets the available alert notifications for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="alertSet">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> to get available alert notifications for.</param>
            <returns>A read-only collection of available alert notifications.</returns>
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.GetAlertNotifications(ININ.IceLib.Statistics.StatisticKey)">
            <summary>
            Gets the alert notifications for a <see cref="T:ININ.IceLib.Statistics.StatisticKey"/>.
            </summary>
            <param name="statisticKey">The <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> to get available alert notifications for.</param>
            <returns>A read-only collection of available alert notifications.</returns>
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.IsWatching">
            <summary>
            Determines whether this instance is watching.
            </summary>
            <returns>
            	<see langword="true"/> if this instance is watching; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)">
            <summary>
            Synchronous request to start watching alert filters.
            </summary>
            <param name="keysToAdd">The keys of the alert filters to start watching.</param>
            <param name="filter">The filter to apply to the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> event.</param>
            <remarks>
            Starting an alert listener watch will allow <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertReceived"/> events to trigger
            when the state of an alert changes, either into or out of alert and for <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/>
            events to trigger when an alert catalog change occurs on an alert we're interested in.
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="keysToAdd"/> is <see langword="null"/> or contains an element that is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="keysToAdd"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="filter"/> has an invalid value.</exception>
            <exception cref="T:System.InvalidOperationException">The watch is already watching.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to start watching alert filters.
            </summary>
            <param name="keysToAdd">The keys of the alert filters to start watching.</param>
            <param name="filter">The filter to apply to the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> event.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="keysToAdd"/> is <see langword="null"/> or contains an element that is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="keysToAdd"/> is empty.</exception>
            <exception cref="T:System.InvalidOperationException">The watch is already watching.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="filter"/> has an invalid value.</exception>
            <remarks>
            Starting an alert listener watch will allow <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertReceived"/> events to trigger
            when the state of an alert changes, either into or out of alert and for <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/>
            events to trigger when an alert catalog change occurs on an alert we're interested in.
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.ChangeWatchedAlerts(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertFilterKey[],System.Boolean,ININ.IceLib.Statistics.Alerts.AlertListenerFilter)">
            <summary>
            Synchronous request to change the watched alert filters.
            </summary>
            <param name="keysToAdd">The keys of the alert filters to add. (Can be <see langword="null"/>.)</param>
            <param name="keysToRemove">The keys of the alert filters to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="filter">The filter to apply to the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> event.</param>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> is not watched.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.ChangeWatchedAlertsAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertFilterKey[],System.Boolean,ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to change the watched alert filters.
            </summary>
            <param name="keysToAdd">The keys of the alert filters to add. (Can be <see langword="null"/>.)</param>
            <param name="keysToRemove">The keys of the alert filters to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <param name="filter">The filter to apply to the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> event.</param>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> is not watched.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.ChangeWatchedAlertsAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.ChangeWatchedAlertsAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StopWatching">
            <summary>
            Synchronous request to stop watching alert filters.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronous request to stop watching alert filters.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StopWatchingAsyncPerformTask(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.StopWatchingAsyncCompleted(ININ.IceLib.Statistics.Alerts.AlertListener.AsyncAlertListenerState)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertReceived">
            <summary>
            Occurs when the listener receives alert notifications.
            </summary>
            <remarks>
            This event will only occur when alert notifications are received. To start
            watching for alerts call either the <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)"/> method or
            the <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatchingAsync(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged">
            <summary>
            Occurs as a result of catalog change on an alert we are listening too.
            </summary>
            <remarks>
            A watch must be active to receive alerts, use <see cref="M:ININ.IceLib.Statistics.Alerts.AlertListener.StartWatching(ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertListenerFilter)"/> to
            start a watch.  The catalog changes are filter by the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListenerFilter"/>
            that is provided during the start watch.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListener.AlertListenerWatcherProxy.RaiseAlertNotification(ININ.IceLib.Statistics.Alerts.AlertNotificationEventArgs)">
            <summary>
            Raises the alert notification.
            </summary>
            <param name="alertNotificatonEventArgs">
            The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertNotificationEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertListenerChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> event.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertListenerChangedEventArgs.Changes">
            <summary>
            Gets the read only collection of rules that have just changed
            that affects the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertListener"/> and what has
            changed on the rules.
            </summary>
            <value>The changed rules.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertListenerFilter">
            <summary>
            Filters <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertChanged"/> events based
            on what changed in the corresponding <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertListenerFilter.None">
            <summary>
            No alert rule changes should be sent.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertListenerFilter.Severity">
            <summary>
            Send events if the severity of an alert rule changes.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertListenerFilter.Condition">
            <summary>
            Send events if a condition on the alert rule changes.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertListenerFilter.Action">
            <summary>
            Send events if an action on the alert rule changes.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerProvider.SendAlertWatchRequest(System.Collections.Generic.List{ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.AlertItem},System.Collections.Generic.List{ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.AlertItem},System.Boolean)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerProvider.Perform_AlertWatchUpdate(System.String,System.String,System.String,System.DateTime,System.Boolean,ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerProvider.Perform_BulkAlertWatchUpdate(ININ.Ion.Serialization.BinaryReader)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerProvider.HandleStatisticAlertWatchUpdate(ININ.IceLib.Statistics.StatisticsManager,ININ.ThinBridge.Message)">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.ChangeWatchedValues(ININ.IceLib.Statistics.Alerts.IAlertListenerWatcher,ININ.IceLib.Statistics.Alerts.AlertFilterKey[],ININ.IceLib.Statistics.Alerts.AlertFilterKey[],System.Boolean,ININ.IceLib.Statistics.Alerts.AlertListenerFilter)">
            <exception cref="T:System.ArgumentNullException"><paramref name="watcher"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The watcher is not watched.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.StopWatching(ININ.IceLib.Statistics.Alerts.IAlertListenerWatcher)">
            <exception cref="T:System.ArgumentNullException"><paramref name="watcher"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The watcher is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.CleanUpAlertNotifications">
            <exception cref="T:System.Exception">An unexpected exception occurred.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertListenerWatcherCache.UpdateWatchedAlertSet(ININ.IceLib.Statistics.Alerts.AlertSet,System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertRule},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertRule})">
            <summary>
            Updates an alert set - this is required for alert mocks to 
            add new alerts to the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertNotificationCache"/>. This is crude and brute force, but the only way to 
            get mock alerts through this mess to the notification cache.
            </summary>
            <param name="alertSet">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> to update.</param>
            <param name="rulesToAdd">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s to add to the cache.</param>
            <param name="rulesToRemove">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s to remove from the cache.</param>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertNotification">
            <summary>
            Represents the data sent for a given alert.
            The alert notification contains the data that about what alert has changed state,
            its new state and value.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.Alert">
            <summary>
            Gets the alert definition.
            </summary>
            <value>The alert definition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.Rule">
            <summary>
            Gets the rule the alert was raised on.
            </summary>
            <value>The alert range.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.Received">
            <summary>
            Gets the received time.
            </summary>
            <value>The received time.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.Cleared">
            <summary>
            Gets a value indicating whether this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertNotification"/> is cleared.
            </summary>
            <value><see langword="true"/> if cleared; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotification.ExpandedStatisticDefinitionId">
            <summary>
            Gets the expanded statistic definition id.  If not expandable, this
            will be an empty string.
            </summary>
            <value>The expanded statistic definition id.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertNotificationCache">
            <summary>
            Represents an internal cache of <c>AlertNotification</c> for instances each alert listener watcher.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertNotificationCache.UpdateRules(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertRule},System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertRule})">
            <summary>
            Adds and removes alert notifications, using the alert rules to find them.
            </summary>
            <param name="rulesToAdd">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s to add to the cache.</param>
            <param name="rulesToRemove">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s to remove from the cache.</param>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertNotificationEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Statistics.Alerts.AlertListener.AlertReceived"/> event.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertNotificationEventArgs.AlertNotifications">
            <summary>
            Gets the read-only collection of alert notifications.
            </summary>
            <value>The alert notifications.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertRule">
            <summary>
            An alert rule is defined by a circumstance (<see cref="T:ININ.IceLib.Statistics.Alerts.AlertCondition"/>) that
            triggers the rule and the set of outcomes (<see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/>) that occur
            when the rule is triggered.  A collection of alert rules make up an <see cref="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertDefinition"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.#ctor(ININ.IceLib.Statistics.Alerts.AlertDefinition,ININ.IceLib.Statistics.Alerts.AlertSeverity)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> class.
            </summary>
            <param name="alertDefinition">The alert definition.</param>
            <param name="alertSeverity">The alert severity.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.#ctor(ININ.IceLib.Statistics.Alerts.AlertRule)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> class as a clone of another instance.
            </summary>
            <param name="alertRule">The AlertRule to clone.</param>
            <remarks>
            This constructor can be used to clone an existing AlertRule for editing.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The AlertRule to clone is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.AddAlertAction(ININ.IceLib.Statistics.Alerts.AlertAction)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> to this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
            <param name="action">The action to add.</param>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> is not editable, or the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> is already associated with 
            another <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.RemoveAlertAction(ININ.IceLib.Statistics.Alerts.AlertAction)">
            <summary>
            Removes an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> from this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
            <param name="action">The action.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> is not editable.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.CloneTo(ININ.IceLib.Statistics.Alerts.AlertDefinition)">
            <summary>
            Clones an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> and associates it to the supplied <see cref="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertDefinition"/>.
            </summary>
            <param name="alertDefinition">The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertDefinition"/> to associate.</param>
            <returns>The cloned <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.</returns>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.Equals(ININ.IceLib.Statistics.Alerts.AlertRule,ININ.IceLib.Statistics.Alerts.AlertRule)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertRule.GetHashCode(ININ.IceLib.Statistics.Alerts.AlertRule)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.Id">
            <summary>
            Gets the ID for the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
            <value>The ID of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertSeverity">
            <summary>
            Gets the alert severity.
            </summary>
            <value>The alert severity.</value>
            <exception cref="T:System.InvalidOperationException">The instance is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.Condition">
            <summary>
            Gets the condition.
            </summary>
            <value>The condition.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertDefinition">
            <summary>
            Gets the alert definition that is associated with this alert range.
            </summary>
            <value>The alert definition.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.AlertActions">
            <summary>
            Gets the actions.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRule.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
            <value>
            	<see langword="true"/> if this instance is editable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertRuleChange">
            <summary>
            Track what has changed about a rule.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.None">
            <summary>
            No change.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.New">
            <summary>
            This is a new rule.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.Removed">
            <summary>
            This rule has been removed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.ChangeSeverity">
            <summary>
            Severity has changed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.ChangeCondition">
            <summary>
            Condition has changed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.ChangeAction">
            <summary>
            An action has changed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.ChangeOther">
            <summary>
            A non-tracked change has been made.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertRuleChange.ChangeAll">
            <summary>
            Everything has changed.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertRuleDelta">
            <summary>
            Represents a change to an alert rule during an <see cref="E:ININ.IceLib.Statistics.Alerts.AlertCatalog.AlertCatalogChanged"/> event.
            Contains a list of all <see cref="T:ININ.IceLib.Statistics.Alerts.AlertAction"/> objects that have been added or removed as well
            as what properties have changed on the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRuleDelta.Rule">
            <summary>
            Gets the rule that has changed.
            </summary>
            <value>The rule.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRuleDelta.Changes">
            <summary>
            Gets the flags determining what has changed.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRuleDelta.AddedActions">
            <summary>
            Gets the read only collection of added actions.
            </summary>
            <value>The added actions.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertRuleDelta.RemovedActions">
            <summary>
            Gets the read only collection of removed actions.
            </summary>
            <value>The removed actions.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSet">
            <summary>
            Represents a set of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> objects.
            An alert set contains a group of alerts (<see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> as well as information about the overall alert set.
            Use <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/> to manage alert sets.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.#ctor(System.String)">
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,ININ.IceLib.Statistics.Alerts.AlertSetAccessMode)">
            <exception cref="T:System.ArgumentNullException">
            <paramref name="id"/>, <paramref name="owner"/>, or <paramref name="modifiedBy"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.ModifyAlertSet(ININ.IceLib.Statistics.StatisticsManager,ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.IsSubscribedBy(System.String,ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType)">
            <summary>
            Determines if a <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/> is subscribed to this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="id">The ID.</param>
            <param name="type">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/> is subcribed, otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertSetSubscribers"/> property is not watched.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.GetDefinition(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> with the requested ID.
            </summary>
            <param name="definitionId">The definition ID.</param>
            <returns>The alert definition.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.AddSubscriber(ININ.IceLib.Statistics.Alerts.AlertSetSubscriber)">
            <summary>
            Adds a subscriber.
            </summary>
            <param name="subscriber">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> to add.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.AddSubscribers(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSetSubscriber})">
            <summary>
            Adds a set of subscribers.
            </summary>
            <param name="subscribers">The set of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> to add.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.RemoveSubscriber(ININ.IceLib.Statistics.Alerts.AlertSetSubscriber)">
            <summary>
            Removes a subscriber.
            </summary>
            <param name="subscriber">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> to remove.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.RemoveSubscribers(System.Collections.Generic.IEnumerable{ININ.IceLib.Statistics.Alerts.AlertSetSubscriber})">
            <summary>
            Removes a set of subscribers.
            </summary>
            <param name="subscribers">The set of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> to remove.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.IsSubscribed(System.String,ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType)">
            <summary>
            Determines if a <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/> is subscribed to this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="id">The ID.</param>
            <param name="type">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/> is subcribed, otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertSetSubscribers"/> property is not watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.Equals(ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Compares this instance to the specified other.
            </summary>
            <param name="other">The other instance to compare to.</param>
            <returns><see lang="true"/> if equal, <see lang="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSet.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertMap">
            <summary>
            Gets the alert map.
            </summary>
            <value>The alert map.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Cache">
            <summary>
            Gets the cache.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.AccessMode">
            <summary>
            Gets the access mode.
            </summary>
            <value>The access mode.</value>
            <exception cref="T:System.InvalidOperationException">The AccessMode property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.SubscribedByOther">
            <summary>
            Gets a value indicating whether the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by users other than the current user.
            </summary>
            <value><see langword="true"/> if subscribed to by others; otherwise, <see langword="false"/>.</value>
            <exception cref="T:System.InvalidOperationException">The SubscribedByOther property is not watched.</exception>]
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.SubscribedByUser">
            <summary>
            Gets a value indicating whether the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by the current user.
            </summary>
            <value><see langword="true"/> if subscribed to by the current user; otherwise, <see langword="false"/>.</value>
            <exception cref="T:System.InvalidOperationException">The SubscribedByUser property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
            <exception cref="T:System.InvalidOperationException">The ID property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
            <exception cref="T:System.InvalidOperationException">The Owner property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.OwnerDisplayName">
            <summary>
            Gets the display name of the owner.
            </summary>
            <value>The display name of the owner.</value>
            <exception cref="T:System.InvalidOperationException">The OwnerDisplayName property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.DisplayString">
            <summary>
            Gets the display string.
            </summary>
            <value>The display string.</value>
            <exception cref="T:System.InvalidOperationException">The DisplayString property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
            <exception cref="T:System.InvalidOperationException">The Description property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertDefinitions">
            <summary>
            Gets the alerts.
            </summary>
            <value>The alerts.</value>
            <exception cref="T:System.InvalidOperationException">The AlertDefinitions property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Created">
            <summary>
            Date and time the alert set was created.
            </summary>
            <exception cref="T:System.InvalidOperationException">The Created property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.Modified">
            <summary>
            Date and time the alert set was modified.
            </summary>
            <exception cref="T:System.InvalidOperationException">The Modified property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.ModifiedBy">
            <summary>
            Gets the name of the user who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <value>User who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</value>
            <exception cref="T:System.InvalidOperationException">The ModifiedBy property is not watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertSetSubscribers">
            <summary>
            Gets the subscribers for this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <value>The collection of <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>s.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertSetSubscribers"/> property is not watched.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSet.SubscribedByOwner">
            <summary>
            Gets whether or not this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by the <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSet.Owner"/>.
            </summary>
            <value><see langword="true"/> if subscribed, otherwise <see langword="false"/>.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSet.AlertSetSubscribers"/> property is not watched.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSet.Property">
            <summary>
            Specifies constants indicating what properties this object supports.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.AccessMode">
            <summary>
            The AccessMode.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.AlertDefinitions">
            <summary>
            The alert definitions.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.Created">
            <summary>
            The timestamp of when the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> was created.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.Description">
            <summary>
            The Description.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.DisplayString">
            <summary>
            The DisplayString.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.Id">
            <summary>
            The ID of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.Modified">
            <summary>
            The Modified time.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.ModifiedBy">
            <summary>
            The user responsible for the most recent modification.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.Owner">
            <summary>
            The Owner.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.OwnerDisplayName">
            <summary>
            The Display Name of the Owner.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.SubscribedByOther">
            <summary>
            Flag used to indicate if the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by anyone other than the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.SubscribedByUser">
            <summary>
            Flag used to indicate if the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSet.Property.AlertSetSubscribers">
            <summary>
            The subscribers to this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetAccessMode">
            <summary>
            Defines the access mode for an alert set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetAccessMode.None">
            <summary>
            Access mode has not been set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetAccessMode.OwnerDefault">
            <summary>
            Access to the owner's default alert set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetAccessMode.Owned">
            <summary>
            Access as an owned alert set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetAccessMode.Shared">
            <summary>
            Other users may access and subscribe to the alert set in a read-only manner.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetCache">
            <summary>
            Cached values for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetCache.ModifyAlertSet(ININ.IceLib.Statistics.StatisticsManager,ININ.IceLib.Statistics.Alerts.EditableAlertSet)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.AlertMap">
            <summary>
            Gets the alert map.
            </summary>
            <value>The alert map.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.AccessMode">
            <summary>
            Gets the access mode.
            </summary>
            <value>The access mode.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.SubscribedByOther">
            <summary>
            Gets a value indicating whether the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by users other than the current user.
            </summary>
            <value><see langword="true"/> if subscribed to by others; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.SubscribedByUser">
            <summary>
            Gets a value indicating whether the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> is subscribed to by the current user.
            </summary>
            <value><see langword="true"/> if subscribed to by the current user; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.OwnerDisplayName">
            <summary>
            Gets the owner display name.
            </summary>
            <value>The owner display name.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.DisplayString">
            <summary>
            Gets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.AlertDefinitions">
            <summary>
            Gets the alerts.
            </summary>
            <value>The alerts.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.Created">
            <summary>
            Date and time the alert set was created.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.Modified">
            <summary>
            Date and time the alert set was modified.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.ModifiedBy">
            <summary>
            Gets the name of the user who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <value>User who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetCache.AlertSetSubscribers">
            <summary>
            Gets the subscribers for this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <value>The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>s.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetCategories">
            <summary>
            The category of an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> within the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.Unknown">
            <summary>
            The category of the AlertSet is unknown.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.Shared">
            <summary>
            AlertSet instances that are shared.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.Owned">
            <summary>
            AlertSet instances that are owned by the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.Subscribed">
            <summary>
            AlertSet instances that are subscribed to by the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.OwnerDefault">
            <summary>
            The default AlertSet for the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.AdminAccess">
            <summary>
            Alert set instances that administrators have access to. Must have the <c>Alert Administrator</c> right set in Interaction Administrator.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetCategories.All">
            <summary>
            All AlertSet instances within the AlertCatalog.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber">
            <summary>
            Represents a subscriber to an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            An alert set subscriber contains information about a subscriber's subscription status in relation to an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>
            </summary>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.#ctor(System.String,ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType,ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> class.
            </summary>
            <param name="id">The ID of the subscriber.</param>
            <param name="type">The type of the subscriber. <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Role"/> is currently not supported.</param>
            <param name="action">The action to perform on the subscriber.</param>
            <param name="isSubscribed">Whether the subscriber is subscribed (<see langword="true"/>) or not (<see langword="false"/>).</param>
            <param name="isSubscriptionForced">Whether the subscription is forced (<see langword="true"/>) or not (<see langword="false"/>).</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="type"/> is not a valid value for enum type <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="action"/> is not a valid value for enum type <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.ToWireProtocol(ININ.IceLib.Statistics.Alerts.AlertSetSubscriber)">
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A subscriber has its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Action"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Unknown"/>
            or its <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Type"/> set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Unknown"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.ActionToWireProtocol(ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction)">
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="subscriberAction"/> is set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Unknown"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.TypeToWireProtocol(ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType)">
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="subscriberType"/> is set to <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Unknown"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.ToInternalAction(ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction)">
            <summary>
            Used to verify what was sent over the wire is within our designated enumeration range.
            </summary>
            <remarks>It's possible to cast an int to an enumeration where that int is not within the enums range.</remarks>
            <param name="subscriberAction">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction"/> from the wire.</param>
            <returns>The AlertSetSubscriberAction.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.ToInternalType(ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType)">
            <summary>
            Used to verify what was sent over the wire is within our designated enumeration range.
            </summary>
            <remarks>It's possible to cast an int to an enumeration where that int is not within the enums range.</remarks>
            <param name="subscriberType">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/> from the wire.</param>
            <returns>The AlertSetSubscriberType.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
            <value>
            	<see langword="true"/> if this instance is editable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Id">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Type">
            <summary>
            Gets or sets the <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Type"/>.
            </summary>
            <remarks><see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Role"/> is currently not supported.</remarks>
            <value>The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType"/>.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Action">
            <summary>
            Gets or sets the <see cref="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.Action"/>.
            </summary>
            <value>The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction"/>.</value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.IsSubscribed">
            <summary>
            Gets a value indicating whether or not this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is subscribed.
            </summary>
            <value><see langword="true"/> if this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is subscribed; otherwise, <see langword="false"/></value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber.IsSubscriptionForced">
            <summary>
            Gets a value indicating whether or not this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>'s subscription is forced.
            </summary>
            <value><see langword="true"/> if this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/>'s subscription is forced; otherwise, <see langword="false"/></value>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> is not editable.</exception>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction">
            <summary>
            Defines the action to perform on a <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber"/> in relation to an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Unknown">
            <summary>
            Action has not been set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Add">
            <summary>
            Add a subscriber.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberAction.Remove">
            <summary>
            Remove a subscriber.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType">
            <summary>
            Associates the <see cref="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriber._Id"/> with a type.
            </summary>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Unknown">
            <summary>
            Type has not been set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.User">
            <summary>
            Subscriber is of type user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Workgroup">
            <summary>
            Subscriber is of type workgroup.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSetSubscriberType.Role">
            <summary>
            Subscriber is of type role.
            </summary>
            <remarks>This type is currently not supported.</remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.AlertSeverity">
            <summary>
            Represents an alert level for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.None">
            <summary>
            Alert severity is not set.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.Normal">
            <summary>
            The status of the resource is normal.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.Minor">
            <summary>
            An alert level that indicates a problem of relatively low severity that should not impede use of the resource.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.Major">
            <summary>
            An alert level that indicates some kind of possibly service-affecting problem with the resource. 
            The severity of the problem is relatively high and normal use of the resource is likely to be impaired.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.Warning">
            <summary>
            An alert level that indicates a condition exists that could potentially cause a problem with the resource.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.AlertSeverity.Critical">
            <summary>
            An alert level that indicates a severe problem exists with the resource and normal use
            is disrupted or severely impeded. This is the most severe alarm level.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.BoolCondition">
            <summary>
            Represents a boolean alert condition.
            This condition can be used on boolean statistics to trigger if the value is true or false, or if the
            statistics is or is not available.
            To create a new BoolCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.BoolCondition.CreateIsTrueCondition">
            <summary>
            Creates an IsTrue condition for a bool alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.BoolCondition"/> triggering on an IsTrue comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.BoolCondition.CreateIsFalseCondition">
            <summary>
            Creates an IsFalse condition for a bool alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.BoolCondition"/> triggering on an IsFalse comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.BoolCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a bool alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.BoolCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.BoolCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a bool alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.BoolCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.BoolCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction">
            <summary>
            Alert action for a client memo target.
            A client memo alert action defines a client memo that will be sent out when an alert is triggered.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.#ctor(ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.SetMessageId(ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Sets the message ID for this object.
            </summary>
            <param name="memo">The memo to use for this alert action.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.CanExpire">
            <summary>
            Gets a value indicating if the message can expire.
            </summary>
            <value><see langword="true"/> if this instance can expire; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.CreatedOn">
            <summary>
            Gets the time that the <see cref="T:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction"/> was created.
            </summary>
            <remarks>The time is expressed in local time.</remarks>
            <value>The created on time.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.DisplayUrl">
            <summary>
            Gets a value indicating whether to display a URL.
            </summary>
            <value><see langword="true"/> if a URL is to be displayed; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.Expiration">
            <summary>
            Gets the time that the <see cref="T:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction"/> will expire.
            </summary>
            <remarks>The time is expressed in local time.</remarks>
            <value>The expiration.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.IconFile">
            <summary>
            Gets the icon file.
            </summary>
            <value>The icon file.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.AlertSetId">
            <summary>
            Gets the ID of the alert set.
            </summary>
            <value>The ID of the alert set.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.MessageId">
            <summary>
            Gets the ID of the message.
            </summary>
            <value>The ID of the message.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.MessageName">
            <summary>
            Gets the name of the message.
            </summary>
            <value>The name of the message.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.PopupType">
            <summary>
            Gets whether or not this is a pop-up type.
            </summary>
            <value><see langword="true"/> if this is a popup type; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.SenderDisplayName">
            <summary>
            Gets the display name of the sender.
            </summary>
            <value>The display name of the sender.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.SenderId">
            <summary>
            Gets the ID of the sender.
            </summary>
            <value>The ID of the sender.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.Recipients">
            <summary>
            Gets the list of recipients.
            </summary>
            <value>List of recipients.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.PlaySound">
            <summary>
            Gets a value indicating whether to play a sound.
            </summary>
            <value><see langword="true"/> if a sound is to be played; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.ShowIcon">
            <summary>
            Gets a value indicating whether to show an icon.
            </summary>
            <value><see langword="true"/> if an icon is to be shown; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.SoundFile">
            <summary>
            Gets the sound file.
            </summary>
            <value>The sound file.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.MessageText">
            <summary>
            Gets the message text.
            </summary>
            <value>The message text.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.ClientMemoAlertAction.SendToAlertSetSubscribers">
            <summary>
            Gets a value indicating whether to send the memo to all the subscribers of the AlertSet.
            </summary>
            <value>
                <see langword="true"/> if the memo is to be sent to all AlertSet subscribers; otherwise, <see langword="false"/>.
            </value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction">
            <summary>
            Alert action for a custom handler target.
            A custom handler alert action defines a custom handler that will be run when an alert is triggered.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.#ctor(ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.HandlerName">
            <summary>
            Gets the handler name.
            </summary>
            <value>The handler name.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.UserData">
            <summary>
            Gets the user data to pass to the handler.
            </summary>
            <value>The user data to pass to the handler.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.InitiateHandlerOnEnteringRange">
            <summary>
            Gets a value indicating whether to initiate a handler on entering the alert range.
            </summary>
            <value>
            	<see langword="true"/> if a handler is to be initiated on entering the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.InitiateHandlerOnExitingRange">
            <summary>
            Gets a value indicating whether to initiate a handler on exiting the alert range.
            </summary>
            <value>
            	<see langword="true"/> if a handler is to be initiated on exiting the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.InitiateHandlerOnChangeWithinRange">
            <summary>
            Gets a value indicating whether to initiate a handler on a change within the alert range.
            </summary>
            <value>
            	<see langword="true"/> if a handler is to be initiated on a change within the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.CustomHandlerAlertAction.InitiateHandlerOnObservedValueChange">
            <summary>
            Gets a value indicating whether to initiate a handler on an observed value change the alert range.
            </summary>
            <value>
            	<see langword="true"/> if a handler is to be initiated on an observed value change the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet">
            <summary>
            Represents an editable alert set. This object is used to create and update alert sets.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.#ctor(ININ.IceLib.Statistics.Alerts.EditableAlertSetUpdateOperation,ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/> class for an update operation.
            </summary>
            <param name="updateOperation">The update operation.</param>
            <param name="alertSet">The alert set to copy from.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.AddAlertSetSubscriber(ININ.IceLib.Statistics.Alerts.AlertSetSubscriber)">
            <summary>
            Adds the alert set subscriber.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="subscriber"/> is not editable.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.RemoveAlertSetSubscriber(ININ.IceLib.Statistics.Alerts.AlertSetSubscriber)">
            <summary>
            Removes the alert set subscriber.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="subscriber"/> is not editable.</exception>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.AddAlertDefinition(ININ.IceLib.Statistics.Alerts.AlertDefinition)">
            <summary>
            Adds the alert definition.
            </summary>
            <param name="definition">The definition.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="definition"/> is not editable.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EditableAlertSet.RemoveAlertDefinition(ININ.IceLib.Statistics.Alerts.AlertDefinition)">
            <summary>
            Removes the alert definition.
            </summary>
            <param name="definition">The definition.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="definition"/> is not editable.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.UpdateOperation">
            <summary>
            Gets the update operation.
            </summary>
            <value>The update operation.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.DisplayString">
            <summary>
            Gets or sets the display string.
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.ModifiedBy">
            <summary>
            Gets or sets the name of the user who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <value>User who last modified this <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.Created">
            <summary>
            Gets or sets the Date and time the alert set was created.
            </summary>
            <value>The date/time.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.Modified">
            <summary>
            Gets or sets the Date and time the alert set was modified.
            </summary>
            <value>The date/time.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.AccessMode">
            <summary>
            Gets or sets the access mode.
            </summary>
            <value>The access mode.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EditableAlertSet.OwnerDisplayName">
            <summary>
            Gets or sets the owner display name.
            </summary>
            <value>The owner display name.</value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.EditableAlertSetUpdateOperation">
            <summary>
            Defines what update operation will be performed on an <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.EditableAlertSetUpdateOperation.Create">
            <summary>
            The object will be created.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.EditableAlertSetUpdateOperation.Modify">
            <summary>
            The object instance will be modified.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction">
            <summary>
            Alert action for an email message target.
            An email memo alert action defines an email that will be sent out when an alert is triggered.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.#ctor(ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.EmailAddresses">
            <summary>
            Gets or sets the list of addresses to send an email to.
            </summary>
            <value>The list of email addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.SendEmailOnEnteringRange">
            <summary>
            Gets or sets a value indicating whether to send an email on entering the alert range.
            </summary>
            <value>
            	<see langword="true"/> if an email is to be sent on entering the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.SendEmailOnExitingRange">
            <summary>
            Gets or sets a value indicating whether to send an email on exiting the alert range.
            </summary>
            <value>
            	<see langword="true"/> if an email is to be sent on exiting the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.SendEmailOnChangeWithinRange">
            <summary>
            Gets or sets a value indicating whether to send an email on a change within the alert range.
            </summary>
            <value>
            	<see langword="true"/> if an email is to be sent on a change within the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.SendEmailOnObservedValueChange">
            <summary>
            Gets or sets a value indicating whether to send an email on an observed value change the alert range.
            </summary>
            <value>
            	<see langword="true"/> if an email is to be sent on an observed value change the alert range; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.EmailMessageAlertAction.SendToAlertSetSubscribers">
            <summary>
            Gets or sets a value indicating whether to send an email to all the subscribers of the AlertSet.
            </summary>
            <value>
                <see langword="true"/> if an email is to be sent to all AlertSet subscribers; otherwise, <see langword="false"/>.
            </value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MockAlertCatalogWatcher.AddMockAlertSet(ININ.IceLib.Statistics.Alerts.AlertSet)">
            <summary>
            Adds a new alert set to the alert listener watcher cache.
            </summary>
            <param name="alertSet">The <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> to add.</param>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NamespaceDoc">
            <summary>
            <para>
            The <b>ININ.IceLib.Statistics.Alerts</b> namespace contains classes for viewing, changing, and receiving 
            Interaction Center statistics alerts.
            </para>
            <para>
            There are a number of classes within the <b>ININ.IceLib.Statistics.Alerts</b> namespace that provide support 
            to the classes mentioned in the preceding summary. Examples of the supporting classes are enumerations, event 
            argument classes, and delegates used by events within classes.
            </para>
            <para>
            The following sequence describes one way of utilizing the members of the <b>ININ.IceLib.Statistics.Alerts</b>
            namespace for creating an alert to monitor.
            <list type="bullet">
            <item>Use <see cref="T:ININ.IceLib.Statistics.StatisticCatalog"/> to get a list of the available <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/>s</item>
            <item>Use a <see cref="T:ININ.IceLib.Statistics.StatisticDefinition"/> to create a <see cref="T:ININ.IceLib.Statistics.StatisticKey"/>, which would describe the threshold for an alert</item>
            <item>Use the <see cref="T:ININ.IceLib.Statistics.StatisticKey"/> to create an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/></item>
            <item>Create <see cref="T:ININ.IceLib.Statistics.Alerts.AlertRule"/>s associated with the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/></item>
            <item>Add the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertDefinition"/> to an <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/></item>
            <item>Create the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> by sending the <see cref="T:ININ.IceLib.Statistics.Alerts.EditableAlertSet"/> to the <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.CreateAlertSet(ININ.IceLib.Statistics.Alerts.EditableAlertSet)"/> method</item>
            <item>Subscribe to notifications for the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> by calling the <see cref="M:ININ.IceLib.Statistics.Alerts.AlertCatalog.Subscribe(ININ.IceLib.Statistics.Alerts.AlertSet,System.Boolean)"/> method on <see cref="T:ININ.IceLib.Statistics.Alerts.AlertCatalog"/></item>
            </list>
            </para>
            <para>
            <b>Memo Watches.</b> A <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> is an object that can be sent out from the server under certain circumstances
            or sent from a user to a list of recipients.  The <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> is used to watch for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>
            objects that are sent out.  There are three types of watching that can take place, MyMemos, GeneralMemos, and
            AlertMemos.  MyMemos watch for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects that target the current user.  GeneralMemos watch for
            all non-alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.  AlertMemos watch for any <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects that are associated
            with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.  The <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> is also used for sending out new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>
            objects and sending out <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> updates.
            </para>
            <para>
            <ininGettingStartedStatistics/>
            <ininStatisticsCatalog/>
            </para>
            </summary>
            <icversion>4.0</icversion>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NumericCondition`1">
            <summary>
            Represents a numeric alert condition.
            A numeric condition can be used against numeric statistics to create alerts that trigger
            when the statistic is greater than, less then, between, equal to, or not equal to the supplied values,
            or if the statistic is or is not available.
            To use a numeric condition, use one of its concrete implementations, such as <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/>.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.NumericCondition`1.Minimum">
            <summary>
            Gets the minimum bounding condition.
            </summary>
            <value>The minimum value if the comparison is Range or Minimum.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.NumericCondition`1.Maximum">
            <summary>
            Gets the maximum bounding condition.
            </summary>
            <value>The maximum value if Comparison is Range or Maximum.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition">
            <summary>
            Represents a numeric double alert condition.
            A numeric double condition can be used against double statistics to create alerts that trigger
            when the statistic is greater than, less then, between, equal to, or not equal to the supplied values, or
            if the statistic is or is not available.
            To create a new NumericDoubleCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.CreateRangeCondition(System.Double,System.Double)">
            <summary>
            Creates a Range condition for a double alert.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> triggering on a range comparison.</returns>
            <exception cref="T:System.ArgumentException">The maximum value must be greater than the minimum value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.CreateIsLessThanCondition(System.Double)">
            <summary>
            Creates an IsLessThan condition for a double alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> triggering on an IsLessThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.CreateIsGreaterThanCondition(System.Double)">
            <summary>
            Creates the IsGreaterThan condition for a double alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> triggering on an IsGreaterThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a double alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a double alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.op_Equality(ININ.IceLib.Statistics.Alerts.NumericDoubleCondition,ININ.IceLib.Statistics.Alerts.NumericDoubleCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.NumericDoubleCondition,ININ.IceLib.Statistics.Alerts.NumericDoubleCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.Equals(ININ.IceLib.Statistics.Alerts.NumericDoubleCondition)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition"/> to compare to this instance.</param>
            <returns><see langword="true"/> if the value of the <paramref name="other"/> parameter is the same as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericDoubleCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition">
            <summary>
            Represents a numeric integer alert condition.
            A numeric int condition can be used against integer statistics to create alerts that trigger
            when the statistic is greater than, less then, between, equal to, or not equal to the supplied values, or
            if the statistic is or is not available.
            To create a new NumericIntCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.CreateRangeCondition(System.Int32,System.Int32)">
            <summary>
            Creates a Range condition for an integer alert.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> triggering on a range comparison.</returns>
            <exception cref="T:System.ArgumentException">The maximum value must be greater than the minimum value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.CreateIsLessThanCondition(System.Int32)">
            <summary>
            Creates an IsLessThan condition for an integer alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> triggering on an IsLessThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.CreateIsGreaterThanCondition(System.Int32)">
            <summary>
            Creates the IsGreaterThan condition for a integer alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> triggering on an IsGreaterThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for an integer alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for an integer alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.op_Equality(ININ.IceLib.Statistics.Alerts.NumericIntCondition,ININ.IceLib.Statistics.Alerts.NumericIntCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.NumericIntCondition,ININ.IceLib.Statistics.Alerts.NumericIntCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.Equals(ININ.IceLib.Statistics.Alerts.NumericIntCondition)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.Statistics.Alerts.NumericIntCondition"/> to compare to this instance.</param>
            <returns><see langword="true"/> if the value of the <paramref name="other"/> parameter is the same as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericIntCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition">
            <summary>
            Represents a numeric time span alert condition.
            A numeric time span condition can be used against time span statistics to create alerts that trigger
            when the statistic is greater than, less then, between, equal to, or not equal to the supplied values, or
            if the statistic is or is not available.
            To create a new NumericTimeSpanCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.CreateRangeCondition(System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a Range condition for a time span alert.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> triggering on a range comparison.</returns>
            <exception cref="T:System.ArgumentException">The maximum value must be greater than the minimum value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.CreateIsLessThanCondition(System.TimeSpan)">
            <summary>
            Creates an IsLessThan condition for a time span alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> triggering on an IsLessThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.CreateIsGreaterThanCondition(System.TimeSpan)">
            <summary>
            Creates the IsGreaterThan condition for a time span alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> triggering on an IsGreaterThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a time span alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a time span alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.op_Equality(ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition,ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition,ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.Equals(ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition"/> to compare to this instance.</param>
            <returns><see langword="true"/> if the value of the <paramref name="other"/> parameter is the same as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeSpanCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition">
            <summary>
            Represents a numeric time stamp alert condition.
            A numeric time stamp condition can be used against time stamp statistics to create alerts that trigger
            when the statistic is greater than, less then, between, equal to, or not equal to the supplied values, or
            if the statistic is or is not available.
            To create a new NumericTimeStampCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.CreateRangeCondition(System.DateTime,System.DateTime)">
            <summary>
            Creates a Range condition for a time stamp alert.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="maximum">The maximum.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on a range comparison.</returns>
            <exception cref="T:System.ArgumentException">The maximum value must be greater than the minimum value.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.CreateIsLessThanCondition(System.DateTime)">
            <summary>
            Creates an IsLessThan condition for a time stamp alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on an IsLessThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.CreateIsGreaterThanCondition(System.DateTime)">
            <summary>
            Creates an IsGreaterThan condition for a time stamp alert.
            </summary>
            <param name="value">The value.</param>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on an IsGreaterThan comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a time stamp alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a time stamp alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.op_Equality(ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition,ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition,ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.Equals(ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition"/> to compare to this instance.</param>
            <returns><see langword="true"/> if the value of the <paramref name="other"/> parameter is the same as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.NumericTimeStampCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition">
            <summary>
            Represents a status message alert condition.
            A status message key condition can be used against the status statistics to create
            an alert that triggers based on a user going into or out of a particular status, or
            if the statistic is or is not available.
            To create a new NumericStatusMessageKeyCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.CreateEqualToCondition(System.String)">
            <summary>
            Creates an EqualTo condition for a status message alert.
            </summary>
            <param name="statusMessageId">The status message ID.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition"/> triggering on an IsAvailable comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="statusMessageId"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.CreateNotEqualToCondition(System.String)">
            <summary>
            Creates an NotEqualTo condition for a status message alert.
            </summary>
            <param name="statusMessageId">The status message ID.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition"/> triggering on an IsNotAvailable comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="statusMessageId"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a status message alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a status message alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.op_Equality(ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition,ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition,ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.Equals(ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.StatusMessageKeyCondition.StatusMessageId">
            <summary>
            Gets the specified ID to match.
            </summary>
            <value>The status message ID.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.StringCondition">
            <summary>
            Represents a string alert condition.
            A string condition can be used against string statistics to create alerts that trigger
            when the statistic has a value that matches, contains, or does not contain the supplied text, 
            or if the statistic is or is not available.
            To create a new StringCondition use one of the static Create functions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateEqualToCondition(System.String)">
            <summary>
            Creates an EqualTo condition for a string alert.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on an IsAvailable comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="text"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateNotEqualToCondition(System.String)">
            <summary>
            Creates an NotEqualTo condition for a string alert.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on an IsNotAvailable comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="text"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateContainsCondition(System.String)">
            <summary>
            Creates a Contains condition for a string alert.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on a Contains comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="text"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateDoesNotContainCondition(System.String)">
            <summary>
            Creates a DoesNotContain condition for a string alert.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on a DoesNotContain comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="text"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateMatchesPrefixCondition(System.String)">
            <summary>
            Creates a MatchesPrefix condition for a string alert.
            </summary>
            <param name="text">The text.</param>
            <returns>
            An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on an MatchesPrefix comparison.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="text"/> parameter must not be <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateIsAvailableCondition">
            <summary>
            Creates an IsAvailable condition for a string alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on an IsAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.CreateIsNotAvailableCondition">
            <summary>
            Creates an IsNotAvailable condition for a string alert.
            </summary>
            <returns>An instance of a <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> triggering on an IsNotAvailable comparison.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.Equals(ININ.IceLib.Statistics.Alerts.AlertCondition)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.op_Equality(ININ.IceLib.Statistics.Alerts.StringCondition,ININ.IceLib.Statistics.Alerts.StringCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.op_Inequality(ININ.IceLib.Statistics.Alerts.StringCondition,ININ.IceLib.Statistics.Alerts.StringCondition)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.Equals(ININ.IceLib.Statistics.Alerts.StringCondition)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.Statistics.Alerts.StringCondition"/> to compare to this instance.</param>
            <returns><see langword="true"/> if the value of the <paramref name="other"/> parameter is the same as this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.StringCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.StringCondition.Text">
            <summary>
            Gets the specified text to match the string condition.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoRecipient">
            <summary>
            Represents an entity that is listed as a receiver of a
            <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            The name of this class is identical to the GeneratedMessages
            source class, you must differentiate it with name spaces if you
            are working with both classes.
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoRecipient.#ctor(System.String,System.String,ININ.IceLib.Statistics.Alerts.MemoRecipientType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoRecipient"/> class.
            </summary>
            <param name="displayName">The display name.</param>
            <param name="id">The ID.</param>
            <param name="recipientType">Type of the recipient.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoRecipient.#ctor(ININ.IceLib.Statistics.Alerts.MemoRecipient)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoRecipient"/> class.
            </summary>
            <param name="source">The source object to duplicate.</param>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoRecipient.Id">
            <summary>
            Gets the displayable internal unique identifier.
            Consists of both the ID and the displayable name.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoRecipient.RecipientType">
            <summary>
            Gets the type of the recipient.
            </summary>
            <value>The type of the recipient.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoRecipientType">
            <summary>
            Represents the type of entity that a <see cref="T:ININ.IceLib.Statistics.Alerts.MemoRecipient"/> refers to.
            </summary>
            <remarks>
            A <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> has a list of recipients.  A recipient may be
            an entity of a number of different types.  This enumeration dictates that type.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.MemoRecipientType.User">
            <summary>
            The recipient of the memo is a user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.MemoRecipientType.Workgroup">
            <summary>
            The recipient of the memo is a workgroup.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.Memo">
            <summary>
            Represents a memo within the Interaction Center system.
            </summary>
            <remarks>
            <para>
            A memo can be received for a variety of
            reasons, either from another user or as part of an automated process.  The <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/>
            object should be instantiated and used to listen for memos and sending out new memos.
            </para>
            <para>
            To create a new local Memo object to work with use 
            <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.Boolean,System.DateTime,System.String)"/>, 
            <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateAlertMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.String,System.String,System.Boolean)"/>, or
            <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateEditableMemo(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Alerts.Memo)"/>.  There are two classes of memo: a regular memo and an alert memo.  
            Alert memos use the <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.AlertSetId"/> field to associate with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            Regular memos do not have that association, however they can bet set to expire using 
            <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.CanExpire"/> and <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.Expiration"/>.  <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.Boolean,System.DateTime,System.String)"/> should be used
            to create new, regular memos while <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateAlertMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.String,System.String,System.Boolean)"/> should be used to create alert
            memos.  <see cref="M:ININ.IceLib.Statistics.Alerts.Memo.CreateEditableMemo(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Alerts.Memo)"/> should be used to copy an existing memo that has been
            received.  Received memo objects can not be edited instead a new, cloned copy must be made to make
            modifications to be rebroadcast.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.#ctor(ININ.IceLib.Statistics.Internal.Messages.GeneralMessageEvent,System.Boolean)">
            <summary>
            Construct a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="eventMessage">Message to base this <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>
            off of.</param>
            <param name="sendToAlertSetSubscribers">Whether or not to send this memo to all AlertSet subscribers.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.#ctor(ININ.IceLib.Statistics.Internal.Messages.MemoData,System.Boolean)">
            <summary>
            Construct a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="messageData">Memo data to base this <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>
            off of.</param>
            <param name="sendToAlertSetSubscribers">Whether or not to send this memo to all AlertSet subscribers.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.#ctor(ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Construct a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="source">The source <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to clone.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.#ctor">
            <summary>
            Construct a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateMemo(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Internal.Messages.GeneralMessageEvent)">
            <summary>
            Creates the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="session">The session.</param>
            <param name="message">The message.</param>
            <returns>The created memo or <see langword="null"/> if memo was not valid or was expired.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateMemo(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Internal.Messages.MemoData,System.Boolean)">
            <summary>
            Creates the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="session">The session.</param>
            <param name="data">The message data.</param>
            <param name="sendToAlertSetSubscribers">Whether or not to send this memo to all AlertSet subscribers.</param>
            <returns>The created memo or <see langword="null"/> if memo was not valid or was expired.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.Boolean,System.DateTime,System.String)">
            <summary>
            Creates a new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="session"><see cref="T:ININ.IceLib.Connection.Session"/> object to aid in creation.</param>
            <param name="messageText">Text of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="messageName">Name of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="url">The URL to navigate to, may be <see langword="null"/>.</param>
            <param name="popupType">Determine if the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> should show a desktop alert.</param>
            <param name="icon">Icon to display.</param>
            <param name="canExpire">Does this <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> have a vaild expiration.</param>
            <param name="expiration">Expiration, may be zeroed.</param>
            <param name="soundFile">Sound to play, may be <see langword="null"/>.</param>
            <returns>Newly created <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            This function is to be used to create a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> object that can be used
            to distribute a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to the server.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateAlertMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> that is associated with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="session"><see cref="T:ININ.IceLib.Connection.Session"/> object used to aid construction.</param>
            <param name="messageText">Text of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="messageName">The name of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="url">The URL to navigate to, may be <see langword="null"/>.</param>
            <param name="popupType">Determines if the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> should popup.</param>
            <param name="icon">Icon to display.</param>
            <param name="soundFile">Sound to play, may be <see langword="null"/>.</param>
            <param name="alertSetID">The ID of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> that this <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> is associated with.</param>
            <param name="sendToAlertSetSubscribers">Determines if the memo should go to all subscribers of the <paramref name="alertSetID"/>.</param>
            <returns>Newly created <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="alertSetID"/> length is zero.</exception>
            <remarks>
            An alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> is a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> that is sent for an alert.  The only situation
            that one should be created manually is when creating a template for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            <note>
            An alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> cannot expire and as such does not use the <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.Expiration"/>
            nor the <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.CanExpire"/> fields.
            </note>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateAlertMemo(ININ.IceLib.Connection.Session,System.String,System.String,System.String,System.Boolean,System.Drawing.Icon,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> that is associated with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            </summary>
            <param name="session"><see cref="T:ININ.IceLib.Connection.Session"/> object used to aid construction.</param>
            <param name="messageText">Text of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="messageName">The name of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <param name="url">The URL to navigate to, may be <see langword="null"/>.</param>
            <param name="popupType">Determines if the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> should popup.</param>
            <param name="icon">Icon to display.</param>
            <param name="soundFile">Sound to play, may be <see langword="null"/>.</param>
            <param name="alertSetID">The ID of the <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> that this <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> is associated with.</param>
            <returns>Newly created <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="alertSetID"/> length is zero.</exception>
            <remarks>
            An alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> is a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> that is sent for an alert.  The only situation
            that one should be created manually is when creating a template for an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>.
            <note>
            An alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> cannot expire and as such does not use the <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.Expiration"/>
            nor the <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.CanExpire"/> fields.
            </note>
            </remarks>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.CreateEditableMemo(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Creates a new editable <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> from a given <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            </summary>
            <param name="session"><see cref="T:ININ.IceLib.Connection.Session"/> object used to aid construction.</param>
            <param name="source">The source <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</param>
            <returns>An editable copy of the existing <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            This should be used to take an existing <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> from the server
            and turn it into a new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> that can be modified and
            sent back to the server to perform an update on the
            existing <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>.
            <Note>
            The new <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> and the existing <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> will have
            the same <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.MessageId"/>.
            </Note>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.ReadCompressedIcon(System.String)">
            <summary>
            Creates an <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.Icon"/> from an encoded string of text.
            </summary>
            <param name="iconData">Base 64 encoded string of text.</param>
            <returns>A newly created <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.Icon"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.ToString">
            <summary>
            String representation of the memo properties.
            </summary>
            <returns>A string representation.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.Memo.VerifyEditable">
            <summary>
            Throws an exception if <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/> is <see langword="false"/>,
            shortcut to test on property setters.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if IsEditable is <see langword="false"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>The message text.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.PopupType">
            <summary>
            Gets or sets whether or not the memo is a pop-up type.
            </summary>
            <value><see langword="true"/> if its a pop-up type; otherwise, <see langword="false"/>.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>The icon, <see langword="null"/> if there is no icon.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.Expiration">
            <summary>
            Gets or sets the UTC based time that the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> will expire.
            </summary>
            <value>The expiration.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.SoundFile">
            <summary>
            Gets or sets the sound.
            </summary>
            <value>The sound.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.MessageName">
            <summary>
            Gets or sets the name of the message.
            </summary>
            <value>The name of the message.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.CanExpire">
            <summary>
            Gets or sets whether or not the message can expire.
            </summary>
            <value>
            	<see langword="true"/> if this instance can expire; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.AlertSetId">
            <summary>
            Gets or sets or sets the AlertSetID, to be used for Alert memos.
            </summary>
            <value>The alert set ID.</value>
            <exception cref="T:System.InvalidOperationException">This memo is not in editable mode, this mode is determined by <see cref="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable"/>.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.IsEditable">
            <summary>
            Gets a value indicating whether this instance is editable.
            </summary>
            <value>
            	<see langword="true"/> if this instance is editable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.IsExpired">
            <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
            <value>
            	<see langword="true"/> if this instance is expired; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.SendToAlertSetSubscribers">
            <summary>
            Gets or sets a value indicating whether to send the memo to all the subscribers of the AlertSet.
            </summary>
            <value>
                <see langword="true"/> if the memo is to be sent to all AlertSet subscribers; otherwise, <see langword="false"/>.
            </value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.MessageId">
            <summary>
            Gets the ID of the message.
            </summary>
            <value>
                The ID of the message.
            </value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.Recipients">
            <summary>
            Gets the list of recipients.
            </summary>
            <value>List of recipients.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.SenderDisplayName">
            <summary>
            Gets the display name of the sender.
            </summary>
            <value>The display name of the sender.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.Memo.SenderId">
            <summary>
            Gets the ID of the sender.
            </summary>
            <value>The ID of the sender.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoEventArgs">
            <summary>
            Provides data for the memo events of <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoEventArgs.Memo">
            <summary>
            Gets the memo.
            </summary>
            <value>The memo.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoList">
            <summary>
            This class serves as the main interface for accessing and creating <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.
            </summary>
            <remarks>
            A MemoList object is used to track when <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/>
            objects are received.  There are three types of watches: MyMemos, General, and Alert which track
            two types of memos: alerts and non-alerts.  Alert memos are associated with an <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/>
            while non-alert memos have no association.  Alert watches will track a memos associated with
            a given alert set ID.  General watches track all memos that do not have an alertSetID.  MyMemos
            will track all memos that are sent to the current user.  The MemoList object can also be used
            to create new memos and to delete or modify existing memos, if the current user has rights to
            those actions.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.GetMemos">
            <summary>
            Gets all active memos.
            </summary>
            <value>The memos.</value>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.#ctor(ININ.IceLib.Statistics.StatisticsManager,ININ.IceLib.Statistics.Alerts.MemoWatchType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <param name="memoType">The <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> types to watch for.</param>
            <param name="alertSetID">On alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> types, this is the alert set to watch for.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.#ctor(ININ.IceLib.Statistics.StatisticsManager,ININ.IceLib.Statistics.Alerts.MemoWatchType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> class.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <param name="memoType">The type of <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to watch for.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CreateAlertMemoList(ININ.IceLib.Statistics.StatisticsManager,System.String)">
            <summary>
            Creates the memo list to watch for alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> messages.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <param name="alertSetID">The alert set ID to watch on.</param>
            <returns>A <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> that watches for alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CreateMyMemoList(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Creates the memo list to watch for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> messages sent to the current user.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <returns>A <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> that watches for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CreateGeneralMemoList(ININ.IceLib.Statistics.StatisticsManager)">
            <summary>
            Creates the memo list to watch for non-alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> messages.
            </summary>
            <param name="statisticsManager">The statistics manager.</param>
            <returns>A <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> that watches for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.</returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching">
            <summary>
            Starts watching for memos.
            </summary>
            <remarks>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is already being watched.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously starts watching for memos.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.IsWatching">
            <summary>
            Determines whether a memo watch is active.
            </summary>
            <returns>
            	<see langword="true"/> if an memo watch is active; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method determines whether an memo watch is in place.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.StopWatching">
            <summary>
            Stops watching for memos.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops watching for memos.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam /></param>
            <remarks>
            <ininAsyncMethodNote />
            <ininHowWatchesWork />
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemoImpl(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Implementation of <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemo(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},ININ.IceLib.Statistics.Alerts.Memo)"/>.
            </summary>
            <param name="userIDs">List of IDs for users that are targets.</param>
            <param name="workgroupIDs">List of IDs for workgroups that are targets.</param>
            <param name="memo">Memo to be created.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemo(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Distributes a given <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to all listeners.
            </summary>
            <param name="memo"><see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> object to be distributed.</param>
            <param name="userIDs">List of IDs for users that are targets.</param>
            <param name="workgroupIDs">List of IDs for workgroups that are targets.</param>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemoAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},ININ.IceLib.Statistics.Alerts.Memo,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously distributes a given <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to all listeners.
            </summary>
            <param name="userIDs">List of IDs for users that are targets.</param>
            <param name="workgroupIDs">List of IDs for workgroups that are targets.</param>
            <param name="memo">Message to send.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemoAsyncPerformTask(ININ.IceLib.Statistics.Alerts.MemoList.AsyncMemoState)">
            <summary>
            This callback performs the actual async operation (called on an arbitrary worker thread).
            </summary>
            <param name="asyncState">State of the async.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.CommitMemoAsyncCompleted(ININ.IceLib.Statistics.Alerts.MemoList.AsyncMemoState)">
            <summary>
            This callback performs the actual async completion (called on the UI thread).
            </summary>
            <param name="asyncState">State of the async.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.DeleteMemoImpl(System.String)">
            <summary>
            Implementation of DeleteMemo.
            </summary>
            <param name="messageID">Name of the memo to be deleted.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.DeleteMemo(System.String)">
            <summary>
            Deletes a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> and notifies all listeners of its deletion.
            </summary>
            <param name="messageID">Name of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to be deleted.</param>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="messageID"/> length is zero.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoList.DeleteMemoAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes a <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> and notifies all listeners of its deletion.
            </summary>
            <param name="messageID">Name of <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="messageID"/> length is zero.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoList.WatchType">
            <summary>
            Gets the type of <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> events to watch for.
            </summary>
            <value>The type of the watch.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoList.AlertSetId">
            <summary>
            Gets the ID of the alert set this watch is associated with.
            Only valid if <see cref="P:ININ.IceLib.Statistics.Alerts.MemoList.WatchType"/> is set to
            <see cref="F:ININ.IceLib.Statistics.Alerts.MemoWatchType.AlertMemos"/>.
            </summary>
            <value>The alert set ID.</value>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.MemoList.MemoAdded">
            <summary>
            Occurs when a memo is added to the queue.
            </summary>
            <remarks>
            This event will only occur when memos being watched have changed. To start
            watching for memo changes call either the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> method or
            the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.MemoList.MemoDeleted">
            <summary>
            Occurs when a memo is deleted from the queue.
            </summary>
            <remarks>
            This event will only occur when memos being watched have changed. To start
            watching for memo changes call either the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> method or
            the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Statistics.Alerts.MemoList.MemoChanged">
            <summary>
            Occurs when a memo in the queue is changed.
            </summary>
            <remarks>
            This event will only occur when memos being watched have changed. To start
            watching for memo changes call either the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> method or
            the <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatching"/> or <see cref="M:ININ.IceLib.Statistics.Alerts.MemoList.StartWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoListCache">
            <summary>
            Handles caching Memo's for shared
            access via MemoList objects.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.GetMemos">
            <summary>
            Gets all active memos.
            </summary>
            <value>The memos.</value>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.#ctor(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Alerts.MemoWatchType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoListCache"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.#ctor(ININ.IceLib.Connection.Session,ININ.IceLib.Statistics.Alerts.MemoWatchType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoListCache"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.StartWatching(ININ.IceLib.Statistics.Alerts.MemoList)">
            <summary>
            Adds a list to the watch list.
            </summary>
            <param name="list">The list that is watching.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.IsWatching(ININ.IceLib.Statistics.Alerts.MemoList)">
            <summary>
            Determines whether a memo watch is active.
            </summary>
            <returns>
            	<see langword="true"/> if an memo watch is active; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method determines whether an memo watch is in place.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.StopWatching(ININ.IceLib.Statistics.Alerts.MemoList)">
            <summary>
            Removes a list to the watch list.
            </summary>
            <param name="list">The list to remove from watchers.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.CommitMemo(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},ININ.IceLib.Statistics.Alerts.Memo)">
            <summary>
            Commits the given <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> and notifies the given users and workgroups.
            </summary>
            <param name="userIDs">List of IDs of users to notify.</param>
            <param name="workgroupIDs">List of IDs of workgroups to notify.</param>
            <param name="memo"><see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> to send.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.DeleteMemo(System.String)">
            <summary>
            Send a delete memo command to the server.
            </summary>
            <param name="messageId">Memo to delete.</param>
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.HandleMemo(ININ.IceLib.Statistics.Internal.Messages.MemoData,System.Boolean)">
            <summary>
            Handles a memo received.
            </summary>
            <param name="messageData">The message data.</param>
            <param name="sendToAlertSetSubscribers">Whether or not to send this memo to all AlertSet subscribers.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.HandleMemoDeleted(System.String)">
            <summary>
            Handles a memo deleted.
            </summary>
            <param name="messageId">The message ID.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCache.BuildWatchSettings">
            <summary>
            Creates a new MemoWatchSettings
            based on the type of settings of this object.
            </summary>
            <returns>A configured settings.</returns>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoListCache.Session">
            <summary>
            Session this object belongs to.
            </summary>
            <value>The session.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoListCacheManager">
            <summary>
            Keeps track of all MemoListCaches the system is using.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.RetrieveAlertQueueCache(System.String)">
            <summary>
            Retrieves the alert queue cache.
            </summary>
            <param name="alertSetID">The alertSeID of the cache to retrieve.</param>
            <returns>
            The cache for the given alertSetID, it will be 
            crated if needed.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Statistics.Alerts.MemoListCacheManager"/> class.
            </summary>
            <param name="session">The session this cache belongs to.</param>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.HandleMemo(ININ.IceLib.Statistics.Internal.Messages.GeneralMessageEvent)">
            <summary>
            Handles a memo received.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.InvalidOperationException"><c>ArgumentOutOfRangeException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.HandleMemoDeleted(ININ.IceLib.Statistics.Internal.Messages.GeneralMessageDeleteEvent)">
            <summary>
            Handles a memo deleted.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.InvalidOperationException"><c>ArgumentOutOfRangeException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.RetrieveCache(ININ.IceLib.Statistics.Alerts.MemoWatchType,System.String)">
            <summary>
            Retrieves the cache for the given settings.
            </summary>
            <param name="memoType">Type of the <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> cache.</param>
            <param name="alertSetID">
            ID of the AlertSet, may be <see langword="null"/> if this is not
            an alert cache.
            </param>
            <returns>The requested cache.</returns>
            <exception cref="T:System.InvalidOperationException"><c>ArgumentOutOfRangeException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.RetrieveCache(ININ.IceLib.Statistics.Internal.Messages.MemoWatchSettings)">
            <summary>
            Retrieves the cache for the given settings.
            </summary>
            <param name="settings">The settings from a received message.</param>
            <returns>The requested cache.</returns>
            <exception cref="T:System.InvalidOperationException"><c>ArgumentOutOfRangeException</c>.</exception>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.MyListCache">
            <summary>
            Gets cache for list of my memos.
            </summary>
            <value>The MyList cache.</value>
        </member>
        <member name="P:ININ.IceLib.Statistics.Alerts.MemoListCacheManager.GeneralListCache">
            <summary>
            Gets cache for list of general memos.
            </summary>
            <value>The general list cache.</value>
        </member>
        <member name="T:ININ.IceLib.Statistics.Alerts.MemoWatchType">
            <summary>
            Represents the type of the memo watcher.
            </summary>
            <remarks>
            <see cref="T:ININ.IceLib.Statistics.Alerts.MemoList"/> objects can be created
            to watch for different circumstances.  This
            enum differentiates between the watch types.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.MemoWatchType.MyMemos">
            <summary>
            Watches for <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects that are
            addressed to the current user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.MemoWatchType.GeneralMemos">
            <summary>
            Watches for all non-alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Statistics.Alerts.MemoWatchType.AlertMemos">
            <summary>
            Watches for alert <see cref="T:ININ.IceLib.Statistics.Alerts.Memo"/> objects.
            This watch type will only watch for alerts
            that match a given <see cref="T:ININ.IceLib.Statistics.Alerts.AlertSet"/> ID.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatType">
            <summary>
            ===========================================================================
            FILE:    Statistics.imsg
            PURPOSE: Define the messages to and from SessionManager for making
            service requests pertaining to Statistics and Alerts.
            ===========================================================================
            ===========================================================================
            Parameters
            ===========================================================================
            Data Types
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticParameterValuesWatchRequest">
            <summary>
            Messages
            ___________________________________________________________________________
            Request message used to start or modify a watch on parameter values.
            NOTE: This message may become obsolete once the new heirarchy based
            NOTE: watch is implemented.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.ParameterQueryStartWatchRequest">
            <summary>
            This request is to watch the results of a parameter query.
            The Query is an ordered list of parameter values (either a specific
            value or the special ALL value).  The result of this watch
            request is to both return the current list of all parameter values
            that match the query, and to provide updates when the results of the
            query change.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.ParameterQueryStopWatchRequest">
            <summary>
            Matching request to stop watching the results of a parameter query.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.ParameterValuesRequest">
            <summary>
            Note that the parameter values passed in
            are not treated as "chained" by the
            session manager, but will instead
            be treated as independent requests.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.ParameterValuesResponse">
            <summary>
            Note that the order of the resulting
            ParameterValues list should match
            the inputed Parameters.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticParameterValuesValidateRequest">
            <summary>
            Note that the parameter values passed in
            via Query must be treated as "chained"
            by the session manager on this request.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.ParameterQueryResultsChanges">
            <summary>
            Events
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticValue">
            <summary>
            ===========================================================================
            Statistics
            ===========================================================================
            Data Types
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticCatalogStartWatchRequest">
            <summary>
            Messages
            ___________________________________________________________________________
            Events
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticAlertWatchFilterKey">
            <summary>
            ===========================================================================
            Alerts
            ===========================================================================
            Data Types
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.StatisticAlertWatchReqRequest">
            <summary>
            Messages
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.AlertSetStartWatchRequest">
            <summary>
            Request to start watching AlertSets.
            This request allows for watching lists of alert sets, identified by AlertSet ID.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.AlertCatalogStartWatchRequest">
            <summary>
            Request to start watching the AlertCatalog.
            This request allows for watching categories of alert sets, such as the list of subscribed alert sets.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.AdminAlertCatalogStartWatchRequest">
            <summary>
            Request to start watching the AlertCatalog.
            This request allows for watching all alert sets.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.AlertSetsAddedEvent">
            <summary>
            Events
            ___________________________________________________________________________
            </summary>
        </member>
        <member name="T:ININ.IceLib.Statistics.Internal.Messages.MemoRecipientTypeEnum">
            <summary>
            ===========================================================================
            Memo
            ===========================================================================
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.Messages.MemoData.SenderId">
            <summary>
            Fields that are always watched
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.Messages.MemoData.AllowEditing">
            <summary>
            Does this instance have rights to edit this message
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.Messages.MemoData.MemoRecipients">
            <summary>
            List of recipients
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.Messages.MemoData.Expiration">
            <summary>
            Ensure that this is in UTC format
            </summary>
        </member>
        <member name="P:ININ.IceLib.Statistics.Internal.Messages.MemoStartWatchResponse.ExistingMessages">
            <summary>
            List of messages that already exist for this watch
            </summary>
        </member>
    </members>
</doc>
