<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ININ.IceLib</name>
    </assembly>
    <members>
        <member name="T:ININ.IceLib.Internal.InternalClassOfService">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceHighlyAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalClassOfService.eClassOfServiceSparselyAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalSessionType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeFullLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeRestricted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionType.eSessionTypeStationless">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDeviceType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeFirst">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeWin32">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypePocketPC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeWeb">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypePhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeSIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeLinux">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeMac">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDeviceType.eDeviceTypeLast">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalConnectionState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionUp">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownServerDown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownSessionTimeout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownAdminLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownUserDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownStationDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownStationDeactivated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownAnotherLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionLost">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownUserLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConnectionState.eConnectionDownSwitchover">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalToggleParams">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleFirst">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleOn">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleOff">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalToggleParams.eToggleLast">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMakeCallParams">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallAllocd">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallStarted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMakeCallParams.eModeSyncCallCompleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalPromptType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptType.ePromptType_None">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptType.ePromptType_Personal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptType.ePromptType_CSatSurvey">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalPromptAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionRecord">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionCommit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionPlay">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionClear">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPromptAction.ePromptActionPlayAnswer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalVoicePromptType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeOutOfOffice">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeNoAnswer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeFollowMe">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeGreeting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeAvailableForward">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeQuickHold">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptType.eVoicePromptTypeAll">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalVoicePromptAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionRecord">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionCommit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionPreview">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionClear">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalVoicePromptAction.eVoicePromptActionCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalNameTextToSpeechAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalNameTextToSpeechAction.eNameTextToSpeechActionCommit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalNameTextToSpeechAction.eNameTextToSpeechActionPreview">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalNameSpeechRecognitionAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalNameSpeechRecognitionAction.eNameSpeechRecognitionActionCommit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalNameSpeechRecognitionAction.eNameSpeechRecognitionActionTest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMediaSupport">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CHAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_GENERIC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_BROWSER_SYNC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_CALLBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_DUAL_FORM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_INSTANT_QUESTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_SMS_MESSAGE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMediaSupport.MEDIA_WORK_ITEM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinClientVersion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionFire">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionRed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionVermillion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionRum">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionClay">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinClientVersion.eClientVersionCurrent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalFileTransferPacketType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketBegin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketEnd">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFileTransferPacketType.eFileTransferPacketConvertToMuLaw">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLicenseRequestFlags">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseReplace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRequestReplace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLicenseRequestFlags.eLicenseRelease">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCallAnalysisType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.Default">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.Yes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCallAnalysisType.No">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalReadyForCallsFlags">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsAfterLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalReadyForCallsFlags.ReadyForCallsAfterChangeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLoginExpirationLevel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLoginExpirationLevel.LoginExpirationLevel_SessionDeletion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLoginExpirationLevel.LoginExpirationLevel_Never">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLoginExpirationLevel.LoginExpirationLevel_SessionDeletion_ClearAllOrphans">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupEntryType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStandalonePhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeStationGroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeAttendantProfile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeWorkgroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryType.LookupEntryTypeDistributionQueue">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalEFaqQueryMode">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeNaturalLanguage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeBooleanExpression">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeWildcard">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeAutoDetect">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEFaqQueryMode.EFaqQueryModeFetchEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupComparisonType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeExact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeStartsWith">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeContains">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupComparisonType.LookupComparisonTypeRegEx">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalPageCommandType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeSubmit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeSave">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeHold">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalPageCommandType.PageCommandTypeError">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalProcessAutomationObjectType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationObjectType.ProcessAutomationObjectTypeNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationObjectType.ProcessAutomationObjectTypeProcess">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationObjectType.ProcessAutomationObjectTypeAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationObjectType.ProcessAutomationObjectTypeTask">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationObjectType.ProcessAutomationObjectTypeScript">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalProcessAutomationServerState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationServerState.ProcessAutomationServerStateNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationServerState.ProcessAutomationServerStateRunning">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationServerState.ProcessAutomationServerStateShuttingDown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessAutomationServerState.ProcessAutomationServerStateDown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMemoMessageWatchType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageWatchType.MemoMessageWatchTypeMyMemos">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageWatchType.MemoMessageWatchTypeAlerts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageWatchType.MemoMessageWatchTypeGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalMemoMessageRecipientType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageRecipientType.MemoMessageRecipientTypeUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageRecipientType.MemoMessageRecipientTypeAlerts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalMemoMessageRecipientType.MemoMessageRecipientTypeGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalHRESULTs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_TS_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3ERR_FILE_DOWNLOAD_COMPLETE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNEXPECTED_MESSAGE_FORMAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_AUTHENTICATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAIL_STATION_LOGIN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAIL_STATION_LOGOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_PAUSED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_SESSION_ID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NOT_LOGGED_IN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_USER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_UNKNOWN_STATUS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_LICENSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_REMOTE_AT_LOCAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_STATION_LOGIN_ONLY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_RIGHTS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_STATION_INACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_BAD_INTERACTION_ID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_SERVER_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CANCELLED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_VERSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_API_VERSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NONE_RUNNING_ASYNC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CALL_DOESNT_EXIST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_QUEUE_NOT_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_QUEUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CONF_DOESNT_EXIST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_CONF_NOT_EMPTY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ACTIVE_NOT_INTERRUPTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_LINE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_LINE_NOT_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_LINE_ALREADY_USED_BY_STATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_STATION_VOLUME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_VOICE_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_CONF_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_IP_RESOURCE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_CALL_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_LINE_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_CALL_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_TARGET_SELF">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_STATION_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_INVALID_NUMBER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_ANSWER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_RINGBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_TONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NORMAL_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_VM_SESSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_LINES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_ANSWER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_RINGBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_TONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_IP_RESPONSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_LINES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NOT_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ALREADY_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NOT_MUTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ALREADY_MUTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_MUTE_INTERCOM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_CLIENT_DIRECTORY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_DIRECTORY_UPDATE_FAILED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAILURE_READING_ENCRYPTION_KEY_FILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CLIENT_OUT_OF_DATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_AUTH_CONTINUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FILE_DOWNLOAD_PROBLEM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_COMMUNICATION_FAILURE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_TOO_BUSY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ORBIT_IN_USE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_POS_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_SENDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_MISSING_RECIPIENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_ATTACHMENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_SERVER_DOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MAILBOX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_NETWORK_ERROR_XFER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_NOT_SUPPORTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_UNSENT_RECIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MSG">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_SEARCH_LIMIT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.S_I3_WEBSVC_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_WEBSVC_GENERAL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_WEBSVC_UNKNOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FILE_NOT_FOUND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAX_SERVER_DOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SESSION_REFUSED_BY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SOCKET">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_BC_WAIT_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_FAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NOIMPL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_INVALID_VER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NO_PROMPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NO_PROMPT_FILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NO_WAV_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_PROMPT_DB">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_PROMPT_DEL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_PROMPT_LIST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_GET_ATTR">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NO_LIC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_ACTIVE_RULES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_NO_SURVEY_ID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_TUI_XML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CSS_MISSING_SURVEY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_SESSION_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_SIT_CONNECTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_NO_CIRCUIT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_OPERATOR_INTERCEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_SUBSYSTEM_FAILURE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_RFC_2833_REQUIRED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_VERSION_SERVER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_VERSION_CLIENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_NO_RESPONSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_NOT_RUNNING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_INVALID_PROCESS_INSTANCEID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_ERROR">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_MAX_NUMBER_CALL_APPEARANCES_REACHED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_OUTBOUND_CALL_LIMIT_EXCEEDED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_CIRCUIT_AVAILABLE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_OPERATOR_INTERCEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_ANSWERING_MACHINE_CONNECTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_DESTINATION_NOT_REACHED_UNKNOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_NO_REMOTE_FAX_TONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_STATION_NOT_REACHED_SIT_CONNECTION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TS_REORDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_REQUIRED_LICENSE_NOT_ASSIGNED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CS_REQUEST_CANCELED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CS_REQUEST_ABANDONED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_CS_REQUEST_REJECTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MSG_SIZE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MSG_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_MSG_CHARSET">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION_PARENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION_QUEUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION_FOLDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_INVALID_INTERACTION_ATTRIBUTE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_POS_MISSING_INTERACTION_ATTRIBUTE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_FEATURE_LICENSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_SERVER_INACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_SERVER_SHUTTING_DOWN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_SERVER_RESTORING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_SERVER_OVERLOAD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_FLOW_VERSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_INVALID_INPUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IPA_INVALID_XFER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SUPERVISOR_ASSISTANCE_ERROR">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SUPERVISOR_ASSISTANCE_INVALID_PARAMETER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SUPERVISOR_ASSISTANCE_UNKNOWN_REQUEST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SUPERVISOR_ASSISTANCE_INVALID_USER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SUPERVISOR_ASSISTANCE_INVALID_REQUEST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_PASSWORD_POLICY_VIOLATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_RESPONSE_TOO_BIG">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_FAILED_TO_DETECT_AUTH_TYPES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_IC_AUTH_DISABLED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INTEGRATED_WINDOWS_AUTH_DISABLED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_ALTERNATE_WINDOWS_AUTH_DISABLED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_WINDOWS_AUTH_DISABLED_FOR_OLD_CLIENTS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_REQUEST_REJECTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_INVALID_CONFIG">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_SERVICE_LOCATOR">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_NO_SERVICE_PROVIDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_METHOD_NOT_ALLOWED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_ALERTGUARD_RAIL_VIOLATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_IN_MAINTENANCE_MODE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalHRESULTs.E_I3ERR_SERVER_IN_EXCLUDED_LOCATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalStatusInfoFieldsSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_DATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_TIME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_NOTES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_FORWARD_NUMBER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStatusInfoFieldsSet.FIELDS_SET_STATUS_STALE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalObjectTypes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalObjectTypes.eTHIN_MANAGER_OBJECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalObjectTypes.eTHIN_SESSION_OBJECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinManagerEventIds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateSession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DestroySession">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAuthenticationToken">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangeStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetServerTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QuerySystemInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangePassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetServerParameters">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchServerParameters">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendCustomNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchCustomNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetPasswordPolicy">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ResetPassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCurrentStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCurrentStatusAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetCurrentStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ModifyUserWatchList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ModifyUserStatusMessagesWatchList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetPresence">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetPresence">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchPresence">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAvailableStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchAvailableStatusMessages">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AllStatusMessagesWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueChangeCols">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueGetContents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfAddParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfDelParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConfGetParties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_InteractionStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_InteractionStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetInteractionAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetInteractionAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_HistGetCallHistory">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_HistWatchCallHistory">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ScreenPopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueueSetAlerting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchInteractionAlert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AttributeMonitor">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetUserSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DeleteProfileInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ManageVoicePrompts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ManageNameTextToSpeech">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetNameTextToSpeechInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ManageNameSpeechRecognition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetNameSpeechRecognitionInfo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchFileTransferCertificates">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteActionAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeCall">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeCallAsync">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PlayDigits">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetStationVolume">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetStationVolume">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CustomButtonsConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CustomButtonsWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PlayWavAudio">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeStationConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MakeRemoteNumberConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopWavAudio">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ProcessMessageLight">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDirectoryConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDirectoryRows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDataSubscribe">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryUpdateContact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchAvailableDirectories">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDeleteContact">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryCompareKeys">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryRefreshContacts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryUpdateContactLink">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryCreateSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryRenameSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DirectoryDeleteSpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EraseDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchDirectoryFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetFilteredDirectoryRows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangeDirectoryFilterSort">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryStationDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryNumberDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryWorkgroupDetails">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchSharedAppearances">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetSharedAppearances">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryNumberDetails2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAllowableAuthentications">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentList">
             A request that asks the SM to blend together all of the HF manifests and compute
              a single effective manifest file that gets returned to the client.  The data should be
                [bool]  AsyncRequest - if true, the request will return a success result immediately
            				and you'll get a eThinSessionEvt_RecvComponentList event when
            				the data is ready.  If false, you'll get the standard HRESULT
            				error code.
            
              If successful HRESULT is seen, the response data is:
                [string] Manifest - the effective manifest file.
                
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentList2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentBegin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DownloadComponentBlock">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserFile">
             Get a file in the user area on the server.  The method is async, it will return immediately
              and you'll get subsequent events with the blocks of the file data. The parameters are:
            
             [string] File name.  This is the trailing part of the file name, for example
            			a value of "MySettings.xml" is fine, which will be put into your
            			user area on the server
             [DWORD RecommendBlockSize
             [DWORD] dwTransferToken - the correlation id you want to assoc with this req
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PutUserFile">
             Put a file in the user area on the server.  You can invoke this method multiple time
              to put the file in small chunks.  I recommed putting chunks of 2048 bytes, which is what
              the standard FTP does.  I assume it's a good size :)   The parameters are:
            
             [string] File name.  This is the trailing part of the file name, for example
            			a value of "MySettings.xml" is fine, which will be put into your
            			user area on the server
             [enum FileTransferPacketType] this is a bitwise DWORD, turn on the bit for "first block"
             			and "last block" as appropriate.  Using these bits, it's easy to send the
             			file in whatever chunk size you like
             [DWORD] Size of data block.
             [BYTE*] the actual data BYTEs.
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PutSmInfoInDs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchMessageLightEvents">
             Turn on or off the watch for MWI events
            
             [bool] On
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetVoiceMessageList">
            Request to get the list of voice mails from the user's inbox.
             the response does not contain the data, this request is async.
             When the data is ready you'll get an eThinSessionEvt_VoiceMessageList
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessagePlay">
             Request to play a given voice message to the station handset.  A request
              will first stop any existing message that's playing.
            
             [string] Message Id
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageStop">
             Request to stop playing any voice mail message that is currently playing
            
             [string] Message Id
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_VoiceMessageDownload">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUMMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UMMessageDownload">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UMMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_LicenseOperation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchLicenseEvents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EFaqQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EFaqMarkUsed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EFaqGetFaqs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivateSelf">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationWatchGroups">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationWatchSelf">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivationQuery2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentActivateAgents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_QueryUserWorkgroupsActivation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxSubmit">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxMonitor">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxQueryUserConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxUpdateUserConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxGetServerSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FaxViewProperties">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_I3DBTranExecTran">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GenericObjectCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAdHocReportingConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendText">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendURL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSendFile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatGetMembers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatModifyMembers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSetTypingIndicator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatModifyUsers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChatSetConversationWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailResolveName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailGetContents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailCreate2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailSave">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailSend2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailDownloadAttachedMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailDownloadAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailUploadAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EmailRemoveAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AgentHelpResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackAttempt">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackCompletion">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CallbackPhoneChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtGetData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtSaveUserData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RespMgmtWatchChanges">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateSidebarChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerDirectoryModify">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerMetaDataWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TrackerViewLoad">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchStation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SessionWatchMachine">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchUserEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetUserEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetCSLoginExpiration">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendLoginNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetEFaqWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetLookupEntries">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerQueryStaffingGroups">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerQueryAgentsForStaffingGroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerQuerySchedulableAgents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerNotifySchedulePublish">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerQueryDSAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_OptimizerWriteDSAttributes">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerAvailableWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerLogon">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerStartReceivingCalls">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerCallComplete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerUpdateStage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerPlacePreviewCall">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerUpdateCallData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerSetAgentType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerMarkCallForFinishing">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerRequestBreak">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerRequestLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerEndBreak">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerGetFormDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerEstablishConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerTransferToAttendant">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerMultiplexed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerAvailableCampaigns">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchSurveyCacheRefresh">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PlaySurveyAnswerRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchPromptList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetPromptList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FetchPromptFiles">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UploadPromptFiles">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecutePromptAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminStartWatchingObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminChangeWatchedObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminStopWatchingObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminGetObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminCreateObjects">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminModifyObjects">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminDeleteObjects">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminGetObjectDefaults">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminGetObjectValidators">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminChangePassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminExecuteFunction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetDefinitions">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConSetDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConRemoveDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetOccurrenceDates">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetOccurrence">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetInvitees">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetInvitee">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetRooms">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetRoom">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetAttendees">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetSiteSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConGetResources">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConControlAttendee">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IConMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetRecordingPlaybackUri">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetRecordingExportUri">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteArchivePrep">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteArchiveRun">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecategorizeRecordings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchRecorderDBChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendRecordingsEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDisplayNameFormats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetRecorderEmailSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderRegisterUser">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigPutXML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigGetXML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigListDSNs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigListUDLs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigListTables">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigListFields">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigTestConnection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigTestCampaign">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigRunDNCFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigQuickValidate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigBulkDNCScrub">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigForceCampaignTimezoneMap">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigRestartWorkflow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigRestartCampaign">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigResetCampaign">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigRecycleCampaign">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigTransitionCampaign">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigRemoveHistoryTables">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigGetScheduledAgents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigManageScheduleTable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigEncryption">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerConfigGetUDLContents">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetLaunchableWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchLaunchableWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StartWorkflow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendWorkflowCommand">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCachedObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_UpdateCachedObjectList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ProcessInstanceWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CancelRunningWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WorkItemInteractionWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchRunningWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FindWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AssociateInteractionWithWorkflow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AssociateNotesWithWorkflow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RetryFailedWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetNotesAndAssociatedInteractions">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchSavedWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DeleteRecordings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerGetCCSURI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerCallListTransaction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerCallListQuery">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerAddScheduledCalls">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerRemoveScheduledCalls">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_DialerRestartCCSHttpServer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ExecuteButtonAction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigListFlowsReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigSaveFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_WatchSameTimeICStatusMapping">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigLockFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IWPMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateCallbackInteraction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigPublishFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigDeleteFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigStopWatchingReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigStopWatchingWorkspaceReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigSaveWorkspaceReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigWatchIPAHandlers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigStopWatchingSecSpecsReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigListSecSpecsReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigCheckInFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigGetFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigGetWorkspaceReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MemoStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MemoStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MemoCreate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MemoDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CancelRunningWorkflowsByNumericId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigDBMetadataReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigListDataSourcesReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinSessionReq_FlowConfigStopWatchingDataSourcesReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigSaveCompressedFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_FlowConfigGetCompressedFlowReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CheckForRunningWorkflows">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetCurrentStateOfProcessAutomationServer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GeneralMessageStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GeneralMessageStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticWatchReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticAlertWatchReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticParameterValuesReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticParameterValuesWatchReq">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticCatalogStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticCatalogStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ParameterQueryStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ParameterQueryStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticParameterValuesValidate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ParameterValues">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogSaveAlertSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogDeleteAlertSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogSubscribe">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertSetStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertSetChangeWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertSetStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogChangeWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetLegacyReportList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopLegacyReportList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetDrillDownData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderPolicyStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderPolicyStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetRecorderPolicies">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StartTimedScreenRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StartWatchAgentAssistanceList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopWatchAgentAssistanceList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StartWatchAgentAssistanceItem">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopWatchAgentAssistanceItem">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CreateAgentAssistanceRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CompleteAgentAssistanceRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AcceptAgentAssistanceRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IgnoreAgentAssistanceRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendAgentAssistanceMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetAgentAssistanceRequestList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_EncryptS3Key">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetS3BucketsConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetS3BucketsConfig">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_TestS3BucketsAccess">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetS3BucketsFromConfigString">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ArchiveRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetArchivePaths">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConsultTransferMake">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConsultTransferSpeakTo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConsultTransferConclude">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConsultTransferCancel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ConferenceAddPartyByDialString">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_PrepareFileTransferURL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StartStationAudioPlayback">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StopStationAudioPlayback">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminAlertCatalogStartWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CaaSTrialMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SetWrapupCode">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_CSActivateSurvey">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_InitiateSecureInput">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IRPauseScreenStart">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_IRPauseScreenStop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ScrRecLoginClient">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ScrRecLogoffClient">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderStartScrRecordingAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderStopScrRecordingAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderPauseScrRecordingsAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderResumeScrRecordingsAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderTransferRecordingAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderRescueOrphans">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_SendProblemReportEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RecorderDeleteRecordingAck">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AlertCatalogUpdateSubscriptions">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_AdminAlertCatalogStopWatch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ChangeMasterKeyPassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_ActivateMasterKeyPassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_RevokeMasterKeyPassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_GetMasterKeyPasswordState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_StatisticCatalogStartWatchETags">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinManagerEventIds.eThinManagerReq_MaxClientRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinManagerNoTrace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.InternalThinManagerNoTrace.ContainsEntry(System.Int64)">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinManagerObfuscateTracing">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.InternalThinManagerObfuscateTracing.ContainsEntry(System.Int64)">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinSessionEventIds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RequestKeepAlivePings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SessionForceLogout">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewICServer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GeneralMessage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewClientTraceLevel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GeneralMessageDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CommunicationFailure">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ServerParametersChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CustomNotificationReceived">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SessionManagerRegionUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatusMessageListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatusChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewExtraStatusData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UsersStatusMessageListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PresenceServerStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PresenceChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AvailableStatusesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PresenceManagerStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PresenceProviderStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueContentsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueAttributesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueLostRights">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_QueueConferenceItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionDeallocated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionLostRights">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionConsultMorphed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionAutoAnswer">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_HistNewCallHistoryItem">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ScreenPop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_InteractionAlert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AttributeMonitorAttributeSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AttributeMonitorAttributeUnset">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AttributeMonitorUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AttributeMonitorLostRights">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AccountCodesActivation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSettingsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoicePromptsResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SpeechRecognitionResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ExecuteAsyncResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeCallResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CustomButtonDefs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeStationConnectionResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MakeRemoteNumberConnectionResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PlayWavAudioResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryRowsAvailable">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryContactsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DirectoryRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_DirectoryFilterCreated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinManagerEvt_FilteredContactDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PendingDirectoryConfigLoadCompleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SharedAppearancesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_WorkgroupDetailsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecvComponentList">
            Fired in response to a eThinManagerReq_DownloadComponentList request when in 
             async mode and the list is computed.  The payload data is a standard HRESULT
             followed by a string description for failure codes and a zero or one xml manifest
             files for success codes.
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecvComponentList2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserFileUpdated">
            Fired in when a user file is updated with the PutUserFile api
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_MessageLightEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessagePlayResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_VoiceMessageDownloadResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UMMessageList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_LicenseEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GroupStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentActivated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentActivateResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentActivationUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FaxSubmitResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FaxMonitorUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewText">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewURL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatNewFile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatHistoryResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatSendFileResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatGetMembersResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatPartyAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatPartyRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatTypingIndicator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ChatModifyMembersResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailResolveResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailSendResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailDownloadAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailUploadAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailRemoveAttachmentResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EmailContentUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentHelpRequest">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AgentHelpSupvResponse">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RxDataUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserEntryModified">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_TrackerMetaDataUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSessionChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSessionAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserSessionRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AdminObjectsFound">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AdminObjectsAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AdminObjectsUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AdminObjectsRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_EFaqListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderPolicyChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderStartRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderStopRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderPauseRecordings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderResumeRecordings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderTransferRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderServerStartup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderDeleteRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderConfigChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GlobalUserStatusChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_GlobalGroupStats">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserPasswordExpired">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserPasswordEnteredNagPeriod">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PublicKeyChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerServerRestarted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerPreviewCallAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerWorkflowStarted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerWorkflowStopped">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerDataPop">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerCampaignTransition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerBreakGranted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerLogoutGranted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerSetFormDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_OptimizerSchedulableAgentsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_OptimizerStaffingGroupsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_OptimizerDSAttributesChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SurveyCacheRefreshed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PromptActionCompleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PromptsAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PromptsUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_PromptsDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderDBChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DisplayNameFormatsChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RecorderEmailSettingsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CampaignServerEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatisticWatchUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatisticAlertWatchUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatisticParameterValuesUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatisticParameterValuesAdd">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_StatisticParameterValuesRemove">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ParameterQueryResultsChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_BulkParameterQueryResultsChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessAutomationServerStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_WorkItemShowPage">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_WorkItemPageClosed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_LaunchableWorkflowsChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RunningWorkflowAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RunningWorkflowChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_RunningWorkflowDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessTaskAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessTaskChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessTaskDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessActionAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessActionChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessActionDeleted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ExistingProcessInstances">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ExistingProcessTasks">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ExistingProcessActions">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessInstanceDataDefinition">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessInstanceDataComplete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ProcessInstanceDataPartial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SavedWorkflowsListChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SavedWorkflowChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigFlowItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigFlowItemChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigFlowItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigSecSpecItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigSecSpecItemChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigSecSpecItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigIPAHandlersChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerMultiplexed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerCampaignStarted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_DialerCampaignStopped">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_IWPEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigWorkspaceAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigWorkspaceChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigWorkspaceRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigDataSourceAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigDataSourceChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_FlowConfigDataSourceRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SameTimeICStatusMappingChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AlertSetsAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AlertSetsUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AlertSetsRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AlertNotification">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_LegacyReportList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_UserEffectiveStationChange">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestListItemAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestListItemStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestListItemRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemMessageAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemStateChanged">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemParticipantAdded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemParticipantRemoved">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AssistanceRequestItemParticipantUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_ClientGlobalMinimumTraceLevel">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_CaaSTrialEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_NewFileTransferCertList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_IConEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_TransactionInformationReceived">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_AcquiredMediaFlagsUpdated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalThinSessionEventIds.eThinSessionEvt_SessionManagerTooBusy">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalThinSessionObfuscateTracing">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.InternalThinSessionObfuscateTracing.ContainsEntry(System.Int64)">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionMediaType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_CALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_CALLBACK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_CHAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_GENERIC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_MONITOR">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_RECORDER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_WORK_ITEM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionMediaType.INTERACTION_MEDIA_TYPE_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionCapability">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_CONSULT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_DISCONNECT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_HOLD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_LISTEN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_MESSAGING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_MUTE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PARK">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PAUSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PICKUP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_RECORD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_REQUEST_HELP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_TRANSFER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_JOIN">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_OBJECTWINDOW">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_CONFERENCEABLE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_SIDEBAR_CHAT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_SUSPENDED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_SECURE_RECORDING_PAUSE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_EMAIL_SEND">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_EMAIL_REPLY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_EMAIL_REPLYALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_EMAIL_FORWARD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_SECURE_INPUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionCapability.CAPABILITY_COACHING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCapabilityState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_MUTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_LISTENED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_COACHED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_RECORDING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_PAUSED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_HELD">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_PRIVATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_MESSAGING">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_CONNECTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCapabilityState.STATE_DISCONNECTED">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalStationType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeLocal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeRemote">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeSIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalStationType.eStationTypeTAPI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateAlerting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateConnected">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateHeld">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateParked">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateInternalDisconnect">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateExternalDisconnect">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateMessaging">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateSuspended">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateSystem">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateOffering">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionState.eInteractionStateProceeding">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionDirection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionDirection.eInteractionDirectionIncoming">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionDirection.eInteractionDirectionOutgoing">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalInteractionPartyType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionPartyType.eInteractionPartyTypeInternal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalInteractionPartyType.eInteractionPartyTypeExternal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryDisplayType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayList">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayFilter">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplaySpeed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryDisplayType.eDirectoryDisplayTracker">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryAccessType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessRead">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessInsert">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessUpdate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessDelete">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessRename">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessPrimaryNo">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryAccessType.eDirectoryAccessAdmin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryCategoryType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryCompany">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryWorkgroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryGeneral">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryStationGroup">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategorySpeedDial">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryGroupAndProfile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryCategoryType.eDirectoryCategoryTracker">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultFailure">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultData">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultHash">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryResult.eDirectoryResultBounds">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalDirectoryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_FIRSTNAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_LASTNAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_DEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_COMPANY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_TITLE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_ADDRESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_CITY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_ZIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_COUNTRY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ASSISTANT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_COUNTRY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_BUS_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_MOBILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_FAX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_PAGER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ASSISTANT_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_URL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_PRIMARY_NO">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_NOTES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_ADDRESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_CITY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_STATE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_ZIP">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_HOME_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_VOICEMAIL_LOC">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_WORKGROUPS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ACCESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_OWNER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ALIAS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_STATUS_URI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_INDEX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_CONTACT_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_EXTERNAL_PRESENCE_PROVIDERS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_LYNC_SIP_ADDRESS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_CONTACT_SOURCES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_EXTERNAL_INFO_XML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_SKILLS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalDirectoryField.DIR_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalUserEntryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_COMPANY">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DEPT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_HOME_SITE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DOMAIN_USER">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_DEFAULT_WORKSTATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalUserEntryField.USER_ENTRY_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalLookupEntryField">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD__FIRST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_FIRST_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_LAST_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_EXT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_USERID">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_DEPARTMENT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_BUS_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_HOME_EMAIL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_BUS_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_BUS_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_HOME_PHONE2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_MOBILE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_HOME_PHONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_DISPLAY_NAME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_STATUS_URI">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_CONTACT_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_MATCH_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_IS_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD__LAST">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalLookupEntryField.LOOKUP_ENTRY_FIELD_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalProcessInstanceWatchSettings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessInstanceWatchSettings.PROCESS_INSTANCE_WATCH_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessInstanceWatchSettings.PROCESS_INSTANCE_WATCH_TASKS_ACTIONS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessInstanceWatchSettings.PROCESS_INSTANCE_WATCH_DATA">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalProcessInstanceWatchSettings.PROCESS_INSTANCE_WATCH_NOTES_AND_RELATED_INTERACTIONS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalSensitivity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityNone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityPersonal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityPrivate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityConfidential">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSensitivity.eSensitivityAny">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalImportance">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceUnknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceNormal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceLow">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceHigh">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalImportance.eImportanceAny">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCustomButtonAvailability">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityAlways">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityWithInteraction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonAvailability.eAvailabilityWithActiveInteraction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCustomButtonActionType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonActionType.eActionTypeHandler">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonActionType.eActionTypeLaunchApp">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalFaxStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusInvalid">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusHolding">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusQueuedForSend">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusConnecting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusTransmitting">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusSuccessful">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalFaxStatus.eFaxStatusFailed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalAppendMode">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.Replace">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.Append">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAppendMode.AppendWithSeparator">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalWorkgroupAttributesMask">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_NONE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_EXTENSION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_HAS_QUEUE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_HAS_MAILBOX">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_QUEUE_TYPE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_HAS_ACTIVATION">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_IS_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_IS_WRAP_UP_ACTIVE">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_SUPERVISORS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_MEMBERS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_ACTIVE_MEMBERS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_WRAP_UP_CLIENT_TIMEOUT">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_WRAP_UP_CODES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_RINGTONE_FOR_CALLS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_RINGTONE_FOR_EMAILS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_RINGTONE_FOR_CHATS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_RINGTONE_FOR_OTHER_INTERACTIONS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_CAN_RECEIVE_WORK_ITEMS">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_ACD_ROUTING_OUTBOUND_MAILBOXES">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_MAXIMUM_CHAT_RESPONSE_TIME">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalWorkgroupAttributesMask.WORKGROUP_ATTRIBUTE_ALL">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalRecordingMediaType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalRecordingMediaType.PrimaryRecordingMedia">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalRecordingMediaType.ScreenRecording">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalRecordingMediaType.EmailAttachment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternaleNameFormat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_IADefault">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_FML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_LFM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_LF">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_LF_FML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleNameFormat.eNameFormat_LF_LFM">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternaleCompanyFormat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleCompanyFormat.eCompanyFormat_IADefault">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleCompanyFormat.eCompanyFormat_Included">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternaleCompanyFormat.eCompanyFormat_NotIncluded">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalEmailImportance">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailImportance.EmailImportance_Unknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailImportance.EmailImportance_Normal">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailImportance.EmailImportance_Low">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailImportance.EmailImportance_High">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalCustomButtonLocation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonLocation.CustomButtonLocation_Unknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonLocation.CustomButtonLocation_Interaction">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalCustomButtonLocation.CustomButtonLocation_Queue">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalEmailResponseType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailResponseType.EmailResponseType_None">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailResponseType.EmailResponseType_Forward">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailResponseType.EmailResponseType_Reply">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalEmailResponseType.EmailResponseType_ReplyAll">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalParameterValuesQueryType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalParameterValuesQueryType.eQueryListValues">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalParameterValuesQueryType.eQueryListOwnerMembers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalParameterValuesQueryType.eQueryListMemberOwners">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalParameterValuesQueryResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalParameterValuesQueryResult.eSuccess">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalParameterValuesQueryResult.eQueryNotSupported">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalConsultTransferParticipant">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConsultTransferParticipant.eConsultTransferParticipant_None">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConsultTransferParticipant.eConsultTransferParticipant_Agent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConsultTransferParticipant.eConsultTransferParticipant_Caller">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConsultTransferParticipant.eConsultTransferParticipant_Consult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalConsultTransferParticipant.eConsultTransferParticipant_All">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalAssistanceRequestState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestState.eAssistanceRequest_PendingAccept">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestState.eAssistanceRequest_InProgress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestState.eAssistanceRequest_Completed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalAssistanceRequestParticipantStatus">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestParticipantStatus.eAssistanceRequestParticipant_None">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestParticipantStatus.eAssistanceRequestParticipant_Accepted">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestParticipantStatus.eAssistanceRequestParticipant_Ignored">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalAssistanceRequestParticipantStatus.eAssistanceRequestParticipant_Initiated">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.InternalSessionManagerTooBusyEvent">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionManagerTooBusyEvent.eSessionManagerTooBusyEvent_None">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.InternalSessionManagerTooBusyEvent.eSessionManagerTooBusyEvent_QueueNotificationsSuspended">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.AllowableAuthentications">
            <summary>
            Represents the allowable authentication methods for logon.
            </summary>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.AllowableAuthentications.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.AllowableAuthentications.AllowICAuth">
            <summary>
            Gets the value indicating whether or not ICAuthentication is allowed.
            </summary>
            <value><see langword="true"/> if ICAuthentication is allowed, otherwise <see langword="false"/></value>
        </member>
        <member name="P:ININ.IceLib.Connection.AllowableAuthentications.AllowWindowsAuth">
            <summary>
            Gets the value indicating whether or not WindowsAuthentication is allowed.
            </summary>
            <value><see langword="true"/> if WindowsAuthentication is allowed, otherwise <see langword="false"/></value>
        </member>
        <member name="P:ININ.IceLib.Connection.AllowableAuthentications.AllowAlternateWindowsAuth">
            <summary>
            Gets the value indicating whether or not AlternateWindowsAuthentication is allowed.
            </summary>
            <value><see langword="true"/> if AlternateWindowsAuthentication is allowed, otherwise <see langword="false"/></value>
        </member>
        <member name="P:ININ.IceLib.Connection.AllowableAuthentications.AllowCachedCredentials">
            <summary>
            Gets the value indicating whether or not the usage of cached credentials is allowed.
            </summary>
            <value><see langword="true"/> if caching credentials is allowed, otherwise <see langword="false"/></value>
        </member>
        <member name="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings">
            <summary>
            Passed to a Session in order to authenticate a Windows user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings"/> object is used to specify
            Windows user authentication settings when the credentials for the application's current environment 
            don't necessarily match the user's credentials.  This is used when Windows user credentials should
            be used to authenticate the user requesting a Session.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <seealso cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/>
        </member>
        <member name="T:ININ.IceLib.Connection.AuthSettings">
            <summary>
            Passed to a Session in order to authenticate a user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> object serves as a base class
            for objects that specify user authentication settings.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AuthSettings"/> class with default settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.AuthSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.AuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <note>Note to implementers, if your <see cref="T:ININ.IceLib.Connection.AuthSettings"/> doesn't return parameters
            that can be used to reconstitute this object from a string dictionary, 
            then <see cref="M:ININ.IceLib.Connection.AuthSettings.RetrieveInitialParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)"/> must be overridden to provide usable parameters.</note>
            <param name="session">The session for which to load any resources, if required.</param>
            <param name="parameters">The parameters.</param>
            <param name="passwordUsage"><see cref="T:ININ.IceLib.Connection.PasswordUsage"/> enumeration is used to determine if the password key/value pair 
            should be included in the parameters dictionary.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="session">The session for which to load any resources, if required.</param>
            <param name="parameters">The parameter data into which we set our values.</param>
            <param name="challenge">A string array that contains the server's challenge string from a previous SetParameters call.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.RetrieveInitialParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <summary>
            Retrieves parameters that can be used to reconstitute this object.
            </summary>
            <param name="session">The session for which to load any resources, if required.</param>
            <param name="parameters">The parameters.</param>
            <param name="passwordUsage"><see cref="T:ININ.IceLib.Connection.PasswordUsage"/> enumeration is used to determine if the password key/value pair 
            should be included in the parameters dictionary.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Dispose">
            <overloads>
            Releases all resources used by the AuthSettings.
            </overloads>
            <summary>
            Releases all resources used by the AuthSettings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.AuthSettings.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the AuthSettings and optionally releases the managed resources.
            </summary>
            <param name="disposing">Indicates whether the control is in the process of being disposed of.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.AuthSettings.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings"/> class.
            </summary>
            <remarks>
            The properties of the object must be set before the object can be used to connect.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.#ctor(System.String,System.String,System.String,ININ.IceLib.Connection.WindowsAuthProtocols)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings"/> class and populates
            the properties from the given parameters.
            </summary>
            <param name="domainName">Name of the domain to which the user belongs.</param>
            <param name="userName">Name of the Windows user.</param>
            <param name="password">The password.</param>
            <param name="protocols">The Windows authentication protocols to use.</param>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">An invalid value was specified as part of the protocol flags.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.AlternateWindowsAuthSettings"/> class given
            a combined domain and user name, as well as a password.
            </summary>
            <param name="userNameWithDomain">The user name with the domain prefix in the form: "domain\user",
            or in the User Principle Name (UPN) format: "user@example.com".
            If no domain is specified, and the user name is not in the UPN format, the domain of the environment 
            in which the IceLib application is running will be used.
            </param>
            <param name="password">The user's password.</param>
            <remarks>
            <para>
            The <see cref="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Protocols"/> property will be set to <see cref="F:ININ.IceLib.Connection.WindowsAuthProtocols.All">WindowsAuthProtocols.All</see>.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">An invalid value was specified as part of the protocol flags.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="userNameWithDomain"/> is not formatted properly.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The domain, username, or protocols entries were not found in <paramref name="parameters"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Domain">
            <summary>
            Gets or sets the domain associated with the <see cref="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.UserName"/>.
            </summary>
            <remarks>
            If <see cref="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.UserName"/> is in the User Principle Name (UPN) format,
            this value may be an empty string.
            </remarks>
            <value>The domain.</value>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.FullyQualifiedUserName">
            <summary>
            Gets the fully qualified user name.
            </summary>
            <remarks>If a domain was specified, the result will be in the format "<see cref="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Domain"/>\<see cref="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.UserName"/>".
            If a User Principal Name (UPN) was specified, the result will be the UPN only (for example, "user@example.com").
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Password">
            <summary>
            Sets the password.
            </summary>
            <value>The password.</value>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.AlternateWindowsAuthSettings.Protocols">
            <summary>
            Gets or sets the Windows authentication protocols to use.
            </summary>
            <value>Flags specifying protocols to use.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">An invalid value was specified as part of the protocol flags.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.ClassOfService">
            <summary>
            Specifies constants indicating what class of service a session supports.
            </summary>
            <remarks>
            <para>This enumeration is used by <see cref="T:ININ.IceLib.Connection.SessionSettings"/> to specify what class of service a session supports.</para>
            <para>Terminated sessions purge shared server-side cache after roughly 3 minutes for <see cref="F:ININ.IceLib.Connection.ClassOfService.HighlyAvailable"/> and after roughly 30 minutes for other levels.</para>
            <ininStandardConnectionExample/>
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.HighlyAvailable">
            <summary>The session connection is highly available.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.General">
            <summary>The session connection has general availability.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ClassOfService.SparselyAvailable">
            <summary>The session connection is sparsely available.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.CommonCredentials">
            <summary>
            Offers a set of static methods that get or set credentials to or from the credential cache.
            </summary>
            <remarks>
            <para>
            This allows an application to create a session without prompting for credentials each time
            by using credentials that were previously saved.
            </para>
            </remarks>
            <example>
            <para>The following example illustrates one way to store credentials using 
            the <c>CommonCredentials</c> class.
            <code lang="C#">
            
            ... //Create a session and connect.
            
                 
                 //Connected successfully. Store the credentials so they can be used to login later.
                 string applicationName = System.Diagnostics.Process.GetCurrentProcess().ProcessName;
            
                 StoredCredentials credentials = new StoredCredentials(applicationName, _Session, true);
                 CommonCredentials.SetCredentials(credentials, true);  //save these credentials and set them as the default set.
            ...
            </code>
            </para>
            <para>This example demonstrates how to load the most recently stored credentials between the defaults
            and those stored for this application.
            <code lang="C#">
            ...
                string applicationName = System.Diagnostics.Process.GetCurrentProcess().ProcessName;
            
                StoredCredentials credentials = CommonCredentials.GetCredentials(applicationName, 
                                                                                 LoadFlags.Default | LoadFlags.Application, 
                                                                                 LoadPreference.Newest);
                
                if ((null != credentials) &amp;&amp; credentials.HasPersistedPassword)
                {
                    _session.Connect(credentials.SessionSettings,
                                 credentials.HostSettings,
                                 credentials.AuthSettings,
                                 credentials.StationSettings);
                }
                else
                {
                    PromptUserForLogin();
                }
            ...
            </code>
            </para>
            </example>
            <seealso cref="T:ININ.IceLib.Connection.StoredCredentials"/>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.PopulateFromXml(System.Xml.XmlDocument)">
            <exclude/><summary>
            Populates the class from XML.
            </summary>
            <param name="xmlDoc">The XML document containing the data.</param>
            <returns><see langword="true"/> if successful or <see langword="false"/> if the load failed.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.GetCredentials">
            <overloads>Retrieves credentials that were previously stored on the system.</overloads>
            <summary>
            Gets the default stored credentials.
            </summary>
            <returns>A <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> object representing all the credential information that was saved, or <see langword="null"/> if no credentials were found.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.GetCredentials(System.String,ININ.IceLib.Connection.LoadFlags,ININ.IceLib.Connection.LoadPreference)">
            <summary>
            Gets the stored credentials for the specified application, given a set of acceptable 
            credentials (Application, Default, etc.) and a preference as to which to try first.
            </summary>
            <param name="applicationName">The unique name of the application storing the credentials.</param>
            <param name="acceptedCreds">One or more <see cref="T:ININ.IceLib.Connection.LoadFlags"/> indicating which set of stored credentials are acceptable.</param>
            <param name="preference">Used to specify the order in which to try and load the credentials.</param>
            <returns>
            A <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> object from the specified set of accepted credentials, or <see langword="null"/>
             if there were no matches.
            </returns>
            <remarks>
            If <see cref="F:ININ.IceLib.Connection.LoadPreference.Newest"/> is specified, the system will retrieve the
            most recently saved <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> object amongst those specified in <paramref name="acceptedCreds"/>.
            If <see cref="F:ININ.IceLib.Connection.LoadPreference.Application"/> is specified, the system will search for a set of stored
            credentials using the following search order (records that are not indicated by <paramref name="acceptedCreds"/> are ignored):
             1. Credentials previously saved by the specified application.
             2. The default set of stored credentials.
             3. Any other stored credentials.
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <seealso cref="T:ININ.IceLib.Connection.LoadFlags"/>
            <seealso cref="T:ININ.IceLib.Connection.LoadPreference"/>
            <seealso cref="T:ININ.IceLib.Connection.StoredCredentials"/>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.GetCredentials(System.String)">
            <summary>
            Gets the stored credentials for the specified application.
            </summary>
            <param name="applicationName">The unique name of the application storing the credentials.</param>
            <returns>The <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> object that was last saved under <c>applicationName</c>, 
            or <see langword="null"/> if there are no credentials stored for that application.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.SetCredentials(ININ.IceLib.Connection.StoredCredentials,System.Boolean)">
            <summary>
            Persists the stored credentials for later retrieval.
            </summary>
            <param name="credentials">The credentials to save.</param>
            <param name="setAsDefault">Overwrite the existing default saved credentials.
            If <paramref name="setAsDefault"/> is set to <see langword="true"/> the default credentials will be set to 
            <paramref name="credentials"/>, as will the credentials for the specified application.  Otherwise, the 
            saved credentials for <c>applicationName</c> will be set to <paramref name="credentials"/> and the default 
            will remain unchanged.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">An argument was invalid.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.GetCredentialFileContents">
            <exclude/><summary>
            Gets the credential file contents from disk and decrypts them.
            </summary>
            <returns>The contents of the credential file as a string.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.CommonCredentials.SetCredentialFileContents(System.String)">
            <exclude/><summary>
            Encrypts and sets the credential file contents.
            </summary>
            <param name="contents">The data to be stored.</param>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionEvent">
            <summary>
            Events that initiate state transitions.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionState">
            <summary>
            Specifies constants indicating the state of a Session's connection.
            </summary>
            <remarks>
            <para>
            This enumeration is used in conjunction with <see cref="T:ININ.IceLib.Connection.ConnectionStateReason"/> by Session to specify the state of its connection.
            </para>
            <para>
            The ConnectionState state machine looks like the following:
            </para>
            <code>
                     /------\ &lt;------------ /----\
                     | Down |               | Up |
                     \------/               \----/
                       |  ^                  ^
                       |  |                  |
                       |  |   /--------------/
                       V  |   |
             o-----&gt; /---------\
                     | Attempt |
                     \---------/
            </code>
            <para>
            The following are connection states (followed by their transition symbols):
            	<list type="bullet">
            	<item><term>Up</term><description>(U)</description></item>
            	<item><term>Down</term><description>(D)</description></item>
            	<item><term>Attempting</term><description>(A)</description></item>
            	<item><term>None</term><description>(N)</description></item>
            	</list>
            The following are connection state reasons (followed by their applicable transitions):
            	<list type="bullet">
            	<item><term>Switchover</term><description>(U-&gt;D)</description></item>
            	<item><term>SessionTimeout</term><description>(U-&gt;D)</description></item>
            	<item><term>UserLogOff</term><description>(U-&gt;D)</description></item>
            	<item><term>LogOn</term><description>(N-&gt;A, A-&gt;U)</description></item>
            	<item><term>LogOnFailed</term><description>(A-&gt;D)</description></item>
            	<item><term>AnotherLogOn</term><description>(U-&gt;D)</description></item>
            	<item><term>StationDeactivated</term><description>(U-&gt;D)</description></item>
            	<item><term>StationDeleted</term><description>(U-&gt;D)</description></item>
            	<item><term>AdminLogoff</term><description>(U-&gt;D)</description></item>
            	<item><term>ServerNotResponding</term><description>(U-&gt;L, A-&gt;D, L-&gt;A, A-&gt;L)</description></item>
            	<item><term>None</term><description>(Initial state)</description></item>
            	</list>
            </para>
            </remarks>
            <example>
            The following example demonstrates usage of a Session object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            Session session = new Session();
            
            ... // Further processing
            
            if (session.ConnectionState != ConnectionState.Up)
            {
              // There is no active connection.
            }
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.None">
            <summary>The session's connection does not exist.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Up">
            <summary>The session's connection is up.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Down">
            <summary>The session's connection is down.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionState.Attempting">
            <summary>The session is attempting to re-establish a connection.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Connection.Session.ConnectionStateChanged"/> event.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class contains properties
            that describe the <see cref="T:ININ.IceLib.Connection.ConnectionState"/> change and the reason for the change.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.#ctor(ININ.IceLib.Connection.ConnectionState,ININ.IceLib.Connection.ConnectionStateReason)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class with the specified state and reason.
            </summary>
            <param name="state">The new connection state.</param>
            <param name="reason">The new connection state reason.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.#ctor(ININ.IceLib.Connection.ConnectionState,ININ.IceLib.Connection.ConnectionStateReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ConnectionStateChangedEventArgs"/> class with the specified message.
            </summary>
            <param name="state">The new connection state.</param>
            <param name="reason">The new connection state reason.</param>
            <param name="message">The message associated with the connection state change.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified value is not from the enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.Message">
            <summary>
            Gets the message associated with the connection state change.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.State">
            <summary>
            Gets the new <see cref="T:ININ.IceLib.Connection.ConnectionState"/>.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ConnectionStateChangedEventArgs.Reason">
            <summary>
            Gets the new <see cref="T:ININ.IceLib.Connection.ConnectionStateReason"/>.
            </summary>
            <value>The reason.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.ConnectionStateReason">
            <summary>
            Specifies constants indicating the reason for the state of a Session's connection.
            </summary>
            <remarks>
            This enumeration is used to indicate the reason for the Session's <see cref="T:ININ.IceLib.Connection.ConnectionState"/>.
            </remarks>
            <example>
            The following example demonstrates usage of a Session object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            Session session = new Session();
            
            ... // Further processing
            
            if ((session.ConnectionState == ConnectionState.Down) &amp;&amp; (session.ConnectionStateReason == ConnectionStateReason.LogOnFailed))
            {
              // The login attempt failed.
            }
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.None">
            <summary>There is no reason for the current connection state.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.ServerNotResponding">
            <summary>The connection state is not up because the server is not responding.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.LogOn">
            <summary>The connection state is attempting or up because a logon has been initiated.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.LogOnFailed">
            <summary>The connection state is down because the logon attempt failed.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.AdminLogOff">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.UserDeleted">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.StationDeleted">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.StationDeactivated">
            <summary>The connection state is down due to administrative action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.AnotherLogOn">
            <summary>The connection state is down due to a subsequent logon.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.UserLogOff">
            <summary>The connection state is down because the user has logged off.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.SessionTimeout">
            <summary>The connection state is down because the session has timed out.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ConnectionStateReason.Switchover">
            <summary>The connection state is down because a switchover has been initiated.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.DeviceType">
            <summary>
            Specifies constants indicating what type of device is establishing a session.
            </summary>
            <remarks>
            <para>This enumeration is used by <see cref="T:ININ.IceLib.Connection.SessionSettings"/> to specify what type of device is establishing a session.</para>
            <ininStandardConnectionExample/>
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.General">
            <summary>The device details cannot be identified.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Win32">
            <summary>The device is using Win32.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.PocketPC">
            <summary>The device is using PocketPC.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Web">
            <summary>The device is a web page.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Phone">
            <summary>The device is a phone interface.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Sip">
            <summary>The device is a Sip phone interface.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Linux">
            <summary>The device is using Linux.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.DeviceType.Mac">
            <summary>The device is a Mac.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.EffectiveStationChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Connection.Session.EffectiveStationChanged"/> event.
            </summary>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.EffectiveStationChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.EffectiveStationChangedEventArgs"/> class.
            </summary>
            <param name="userId">The user ID.</param>
            <param name="effectiveStation">The effective station.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.EffectiveStationChangedEventArgs.UserId">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.EffectiveStationChangedEventArgs.EffectiveStation">
            <summary>
            Gets the effective station.
            </summary>
            <value>The effective station.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfileCache.GetNamespaceContents(System.String,System.Boolean)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfileCache.RemoveProfileItem(System.String,System.String)">
            <exception cref="T:ININ.IceLib.NotCachedException"><c>NotCachedException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfileCache.RemoveNamespaceContents(System.String)">
            <exception cref="T:ININ.IceLib.NotCachedException"><c>NotCachedException</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCache.GetInstance(ININ.IceLib.Connection.Session,System.String,System.Boolean)">
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/>is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCache.#ctor(ININ.IceLib.Connection.Session,System.String,System.Boolean)">
            <exception cref="T:System.ArgumentNullException"><see cref="T:ININ.IceLib.Connection.Session"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCache.GetCustomProfileContents">
            <summary>
            Gets the custom profile contents.  If the file does not exist in local cache, or is out of date, it will be downloaded.
            </summary>
            <returns>The contents of the custom profile.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey.Equals(ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey.op_Equality(ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey,ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey.op_Inequality(ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey,ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ApplicationBasedCustomProfileCacheKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs">
            <summary>
            Provides data for the asynchronous completed event of <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.CheckForApplicationBasedSettingsAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs},System.Object)"/>.
            </summary>
            <icversion>4.0 SU 2</icversion>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs.#ctor(System.Boolean,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs"/> class.
            </summary>
            <param name="hasApplicationBasedSettings">if set to <see langword="true"/> then the application based settings exist.</param>
            <param name="error">The error.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs.HasApplicationBasedSettings">
            <summary>
            Gets a value indicating whether the application based settings exists.
            </summary>
            <value>
            <see langword="true" /> if the application based settings exist; otherwise, <see langword="false" />.
            </value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessage">
            <summary>
            Represents a custom notification message received from the IC server.
            </summary>
            <remarks>
            <para>See <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> for further details.</para>
            <ininGettingStartedCustomNotifications/>
            </remarks>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomMessage"/> class.
            </summary>
            <param name="header">The header for this custom message.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadString">
            <summary>
            Reads a string from the response stream. Do not use with custom handlers (
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The string value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadStrings">
            <summary>
            Reads the strings from the response stream.
            </summary>
            <returns>The string[] value.</returns>
            <remarks><see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/> is allowed in the use of this method.</remarks>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadBoolean">
            <summary>
            Reads a bool from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The bool value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadChar">
            <summary>
            Reads a char from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The char value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadByte">
            <summary>
            Reads a byte from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The byte value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt16">
            <summary>
            Reads an Int16 from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The Int16 value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt32">
            <summary>
            Reads an Int32 from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The Int32 value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadInt64">
            <summary>
            Reads an Int64 from the response stream. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The Int64 value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ReadDouble">
            <summary>
            Reads the double. Do not use with custom handlers 
            (<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <returns>The double value.</returns>
            <exception cref="T:System.InvalidOperationException">Invalid data format requested.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">Attempted to read beyond end of the message.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessage.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessage.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessageHeader">
            <summary>
            Indentifies the type of a CustomMessage.
            </summary>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomMessageHeader"/> class.
            </summary>
            <param name="type">The custom notification type.</param>
            <param name="objectId">The object ID.</param>
            <param name="eventId">The event ID.</param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="type"/> is not a valid value for <see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomMessageHeader.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType">
            <summary>
            Gets the type of the custom notification.
            </summary>
            <value>The type of the custom notification.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomMessageType">
            <summary>
            Represents the type of Custom Messages.
            </summary>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.None">
            <summary>
            No type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification">
            <summary>
            Reply from a custom handler.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ApplicationRequest">
            <summary>
            A Request sent to another IceLib application.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ApplicationResponse">
            <summary>
            A Response from another IceLib application.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomNotification">
            <summary>
            Provides functionality for sending and receiving notifications to and from custom handlers and 
            IceLib applications.
            </summary>
            <remarks>
            <para>Initiating custom handlers is possible through the <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> methods. <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> can be used to receive notifications from a custom handler when it sends a 
            custom notification.</para>
            <para>The <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequest(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequestAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> methods can be 
            used to send out request notifications to other IceLib applications. Other IceLib applications can listen for 
            application requests by using <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and can 
            respond by using the <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponse(ININ.IceLib.Connection.Extensions.CustomResponse)"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponseAsync(ININ.IceLib.Connection.Extensions.CustomResponse,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> 
            methods.</para>
            <ininGettingStartedCustomNotifications/>
            </remarks>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> class.
            </summary>
            <param name="session">The session.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <summary>
            Sends a message, with no response expected.
            </summary>
            <param name="customRequest">The custom request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid data format found.</exception>
            <remarks>
            <para>Custom Handlers expect an array of strings (only) as input. Make sure that your custom request 
            contains an array of strings only.</para>
            <para>Be sure to <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> if the custom handler sends out custom notification. Again, 
            Custom Handlers send an array of strings (only) as notifications.</para>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously sends a message, with no response expected.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/>
            <para>Custom Handlers expect an array of strings (only) as input. Make sure that your custom request contains an array of strings only.</para>
            <para>Be sure to <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> if the custom handler sends out custom notification. Again, Custom Handlers send an array of strings (only) as notifications.</para>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequest(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <exclude/><summary>
            Sends the specified custom request.
            </summary>
            <param name="customRequest">The custom request.</param>
            <returns>The response.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid data format found.</exception>
            <remarks>
            <para>Custom Handlers expect an array of strings (only) as input.</para>
            <para>Custom Handlers that use the 'custom notification initiator' cannot send responses to a 
            <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> request, so the return message will contain no data.</para>
            <para> Custom handlers can only take an array of strings as input. Any other data format will throw 
            <exception cref="T:System.InvalidOperationException"/>.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{ININ.IceLib.Connection.Extensions.SendCompletedEventArgs},System.Object)">
            <exclude/><summary>
            Asynchronously sends the specified custom request.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <para>Custom Handlers expect an array of strings (only) as input.</para>
            <para>Custom Handlers that use the 'custom notification initiator' cannot send responses to a 
            <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> request, so the return message will contain no data.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequest(ININ.IceLib.Connection.Extensions.CustomRequest)">
            <summary>
            Sends the specified custom request.
            </summary>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            </remarks>
            <param name="customRequest">The custom request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationRequestAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Sends the no response asynchronously.
            </summary>
            <param name="customRequest">The custom request.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininAsyncMethodNote/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponse(ININ.IceLib.Connection.Extensions.CustomResponse)">
            <summary>
            Sends the response.
            </summary>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            </remarks>
            <param name="customResponse">The custom response.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendApplicationResponseAsync(ININ.IceLib.Connection.Extensions.CustomResponse,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Sends the response asynchronously.
            </summary>
            <param name="customResponse">The custom response.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininAsyncMethodNote/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])">
            <summary>
            Sends a request to the server to start watching for messages with the given header information.
            </summary>
            <param name="messageTypes">The notification types.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <ConnectionExceptions/>
            <remarks>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/>.
            </note>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously sends a request to the server to start watching for messages with the given header information.
            </summary>
            <param name="messageTypes">The notification types.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/>.
            </note>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.ChangeWatchedNotifications(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])">
            <summary>
            Sends a request to the server to change the watched notifications.
            </summary>
            <param name="messageTypes">The message types.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <ConnectionExceptions/>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.ChangeWatchedNotificationsAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously sends a request to the server to change the watched notifications.
            </summary>
            <param name="messageTypes">The notification types.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <para>For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StopWatching">
            <summary>
            Stops watching for custom messages.
            </summary>
            <remarks>
            <ininHowWatchesWork />
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.StopWatching(System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously stops watching for custom messages.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomNotification.GetCurrentlyWatchedHeaders">
            <summary>
            Returns the currently watched headers.
            </summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of <see cref="T:ININ.IceLib.Connection.Extensions.CustomMessageHeader"/> objects.</returns>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.CustomNotification.CustomNotificationReceived">
            <summary>
            Occurs when a <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> is received from the server.
            </summary>
            <remarks>
            This event will only occur if custom notification are being watched. To start
            watching custom notifications call either the <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> method
            or the <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> method.
            <para> For further details see <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.</para>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatching(ININ.IceLib.Connection.Extensions.CustomMessageHeader[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.StartWatchingAsync(ININ.IceLib.Connection.Extensions.CustomMessageHeader[],System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskState">
            <exclude/>
            <summary>
            Tracks the state of an async operation.
            </summary>
            <remarks>
            <para>A specialization should be implemented that tracks any input or output values for the specific
            asynchronous operation in question.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskState.#ctor(System.Int64,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskState"/> class with a unique task ID.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>The task ID.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.UserState">
            <summary>
            Gets the user state.
            </summary>
            <value>The user state.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskState.Cancelled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ININ.IceLib.Internal.AsyncTaskState"/> is cancelled.
            </summary>
            <value><see langword="true"/> if cancelled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomNotificationReceivedEventArgs">
            <summary>
            Provides definition for the CustomNotificationReceived event of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.
            </summary>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomNotificationReceivedEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomProfile">
            <summary>
            Allows storage of custom application settings to the Interaction Center server.
            </summary>
            <seealso cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> class.
            </summary>
            <param name="session">The session.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetLegacyCustomProfile(ININ.IceLib.Connection.Session)">
            <summary>
            Gets the legacy custom profile.
            </summary>
            <param name="session">The session.</param>
            <returns>A <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> that uses the legacy mechanism for getting and setting profile information.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetApplicationCustomProfile(ININ.IceLib.Connection.Session)">
            <summary>
            Gets the custom profile for this application's profile.
            </summary>
            <param name="session">The session.</param>
            <returns>
            A <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> that uses the <paramref name="session"/>'s <see cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/> 
            for getting and setting profile information.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.NotSupportedException">The server does not support setting the profile name for custom profiles.</exception>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetOtherApplicationCustomProfile(ININ.IceLib.Connection.Session,System.String)">
            <summary>
            Gets the custom profile for a specific application's profile.
            </summary>
            <param name="session">The session.</param>
            <param name="applicationProfileName">The application's profile name to use.</param>
            <returns>
            A <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> that uses the <paramref name="applicationProfileName"/> 
            for getting profile information.
            </returns>
            <remarks>
            Custom profile information retrieved this way is read-only if the <paramref name="applicationProfileName"/> 
            does not match the value provided on the <paramref name="session"/>'s <see cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A parameter is <see cref="F:System.String.Empty"/>.</exception>
            <exception cref="T:ININ.IceLib.ServerOperationNotSupportedException">The server does not support setting the profile name for custom profiles.</exception>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.AreApplicationBasedSettingsSupported(ININ.IceLib.Connection.Session)">
            <summary>
            Indicates whether or not application based settings are supported on the IC Server.
            </summary>
            <param name="session">The session.</param>
            <remarks>
            The <see cref="T:ININ.IceLib.Connection.Session"/> need to be connected to an IC Server in order to provide an accurate value.
            </remarks>
            <returns><see langword="true"/> if application based settings are supported on the IC Server; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetProfileItem(System.String,System.String)">
            <summary>
            Gets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <returns>The requested profile item.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/>
            length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile information could not be retrieved.</exception>
            <remarks>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetProfileItemAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/>
            length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile information could not be retrieved.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <para>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetNamespaceContents(System.String)">
            <summary>
            Gets the profile items contained in the requested namespace path.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <returns>The profile items.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile information could not be retrieved.</exception>
            <remarks>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            <note>
            Requesting a namespace will cause that namespace, and all sub-namespaces, to be returned and cached.
            This can be used to pre-cache all profile items for a root namespace and make subsequent requests
            for profile items return from the local cache instead of issuing a server request.
            </note>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetNamespaceContentsAsync(System.String,System.EventHandler{ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the profile items contained in the requested namespace path.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile information could not be retrieved.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <para>
            This method will return the value from the cache, if the attribute is cached.
            If the attribute is not being cached, it will send a request to the server and get the attribute.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.Object)">
            <summary>
            Sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.String)">
            <summary>
            Sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItemAsync(System.String,System.String,System.Object,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance 
            containing the event data.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItemAsync(System.String,System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance 
            containing the event data.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveProfileItem(System.String,System.String)">
            <summary>
            Removes the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveProfileItemAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously removes the specified profile item.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance 
            containing the event data.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="namespacePath"/> or <paramref name="key"/> 
            length is zero.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveNamespaceContents(System.String)">
            <summary>
            Removes the profile items in the specified namespace.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If the namespacePath length is zero.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveNamespaceContentsAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously removes the profile items in the specified namespace.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance 
            containing the event data.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If the <paramref name="namespacePath"/> length is zero.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.FlushChanges">
            <summary>
            Forces any pending changes to be saved to the server immediately.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.FlushChangesAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously forces any pending changes to be saved to the server.
            </summary>
            <param name="completedCallback">The <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> instance 
            containing the event data.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:ININ.IceLib.IceLibException">The custom profile item cannot be modified because <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems"/> is <see langword="true"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.CheckForApplicationBasedSettings">
            <summary>
            Checks to see if the application based settings exist for the specified 
            application profile name from <seealso cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/>.
            </summary>
            <remarks>
            Returns <see langword="false"/> if <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.IsInLegacyMode"/> is <see langword="true"/>, 
            otherwise, tries to download the application based settings from the IC Server and returns 
            whether or not it was successful.
            </remarks>
            <returns><see langword="true"/> if the application based settings exist; otherwise, <see langword="false"/>.</returns>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomProfile.CheckForApplicationBasedSettingsAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.CheckForApplicationBasedSettingsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously checks to see if the application based settings exist for the specified 
            application profile name from <seealso cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/>.
            </summary>
            <returns><see langword="true"/> if the application based settings exist; otherwise, <see langword="false"/>.</returns>
            <remarks>
            <ininAsyncMethodNote/>
            Returns <see langword="false"/> if <see cref="P:ININ.IceLib.Connection.Extensions.CustomProfile.IsInLegacyMode"/> is <see langword="true"/>, 
            otherwise, tries to download the application based settings from the IC Server and returns 
            whether or not it was successful.
            </remarks>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomProfile.IsInLegacyMode">
            <summary>
            Gets a value indicating whether this custom profile is in legacy mode.
            </summary>
            <value>
            <see langword="true"/> if this custom profile is legacy mode; otherwise, <see langword="false"/>.
            <remarks>
            Custom profile instances that are in legacy mode save profile information in a single file.  To use 
            per-application custom profile settings to save profile information, use <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetApplicationCustomProfile(ININ.IceLib.Connection.Session)"/> 
            or <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetOtherApplicationCustomProfile(ININ.IceLib.Connection.Session,System.String)"/>.  When using these methods to create a custom profile, 
            the connected <see cref="T:ININ.IceLib.Connection.Session"/>'s <see cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/> needs to be set.
            </remarks>
            </value>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomProfile.CanEditProfileItems">
            <summary>
            Gets a value indicating whether this custom profile allows editing profile items.
            </summary>
            <value>
            <see langword="true"/> if this custom profile allows editing profile items; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            When using creating a custom profile with <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.GetOtherApplicationCustomProfile(ININ.IceLib.Connection.Session,System.String)"/>, if the application profile name 
            does not match the <see cref="T:ININ.IceLib.Connection.Session"/>'s <see cref="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName"/>, then editing of the 
            profile items via calls to <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.Object)"/>, <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.String)"/>, 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveProfileItem(System.String,System.String)"/>, <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.RemoveNamespaceContents(System.String)"/>, <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.FlushChanges"/>, and the associated 
            asynchronous versions, are not allowed.
            </remarks>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomRequest">
            <summary>
            Represents a custom notification request sent to the IC server.
            </summary>
            <remarks>
            <para>See <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> for further details.</para>
            <ininGettingStartedCustomNotifications/>
            </remarks>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.#ctor(ININ.IceLib.Connection.Extensions.CustomMessageHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomRequest"/> class.
            </summary>
            <param name="header">The header for this custom message.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.String)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.String[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Boolean)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Char)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Byte)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int16)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int32)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Int64)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.Write(System.Double)">
            <summary>
            Writes the specified data. Do not use with custom handlers (sending requests via
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponse(ININ.IceLib.Connection.Extensions.CustomRequest)"/> or 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomNotification.SendServerRequestNoResponseAsync(ININ.IceLib.Connection.Extensions.CustomRequest,System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs},System.Object)"/> and if
            <see cref="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header"/>.<see cref="P:ININ.IceLib.Connection.Extensions.CustomMessageHeader.CustomMessageType"/> == 
            <see cref="F:ININ.IceLib.Connection.Extensions.CustomMessageType.ServerNotification"/>).
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.InvalidOperationException">Invalid data format.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomRequest.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.CustomResponse">
            <summary>
            Represents a custom notification response to reply to the IC server.
            </summary>
            <remarks>
            <para>See <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> for further details.</para>
            <ininGettingStartedCustomNotifications/>
            </remarks>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.#ctor(ININ.IceLib.Connection.Extensions.CustomMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.CustomResponse"/> class.
            </summary>
            <param name="originalMessage">The original message that is being responded to.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.String)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.String[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Boolean)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Char)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Byte)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int16)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int32)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Int64)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.Write(System.Double)">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.CustomResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.EventId">
            <summary>
            Gets the event ID.
            </summary>
            <value>The event ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.ObjectId">
            <summary>
            Gets the object ID for this request.
            </summary>
            <value>The object ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.ObjectType">
            <summary>
            Gets the object type.
            </summary>
            <value>The object type.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.Header">
            <summary>
            Gets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.CustomResponse.OriginalMessage">
            <summary>
            Gets the original message.
            </summary>
            <value>The original message.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.DeserializationMethod">
            <summary>
            Method used to deserialize a <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.DeserializationMethod.Unknown">
            <summary>
            The data was supplied externally.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.DeserializationMethod.XmlDeserialization">
            <summary>
            A single string was deserialized using the new style of XML deserialization.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.DeserializationMethod.SingleStringValue">
            <summary>
            A single string was found and no deserialization performed.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.DeserializationMethod.MultiStringValue">
            <summary>
            Multiple strings were found and no deserialization performed.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,ININ.IceLib.Connection.Extensions.ProfileItem},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs"/> class.
            </summary>
            <param name="profileItems">The profile items.</param>
            <param name="error">The error.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">State of the user.</param>
            <exception cref="T:System.ArgumentNullException">The target parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetNamespaceContentsCompletedEventArgs.ProfileItems">
            <summary>
            Gets the profile items.
            </summary>
            <value>The profile items.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ProfileItem,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs"/> class.
            </summary>
            <param name="profileItem">The profile item.</param>
            <param name="error">The error.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetProfileItemCompletedEventArgs.ProfileItem">
            <summary>
            Gets the profile item.
            </summary>
            <value>The profile item.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs">
            <summary>
            Provides data for asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ServerParameter[],System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs"/> class.
            </summary>
            <param name="serverParams">The server parameters.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs.ServerParameters">
            <summary>
            Gets the server parameters.
            </summary>
            <value>The server parameters.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.LegacyCustomProfileCache.GetInstance(ININ.IceLib.Connection.Session)">
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/>is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.LegacyCustomProfileCache.#ctor(ININ.IceLib.Connection.Session)">
            <exception cref="T:System.ArgumentNullException"><see cref="T:ININ.IceLib.Connection.Session"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.LegacyCustomProfileCache.ReadItems(ININ.ThinBridge.Message,System.String)">
            <exception cref="T:ININ.IceLib.IceLibException">Unexpected message format.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib.Connection.Extensions</b> namespace contains classes to support advanced connection-related features.</para>
            <para>This includes retrieving <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/>, <see cref="T:ININ.IceLib.Connection.Extensions.Security">setting the user's password</see>,
            persisting <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile">custom settings</see> to the IC server, sending or receiving a <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>,
            and <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch">watching for creation of other Sessions</see>.</para>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.PasswordEventArgs">
            <summary>
            This class implements event arguments for the <see cref="E:ININ.IceLib.Connection.Extensions.Security.PasswordExpired"/> and 
            <see cref="E:ININ.IceLib.Connection.Extensions.Security.PasswordEnteredNagPeriod"/> events.
            </summary>
            <icversion>3.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.PasswordEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.PasswordEventArgs"/> class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.Event">
            <summary>
            Gets or sets the type of event (Password entered nag period or Password expired).
            </summary>
            <value>The event attribute.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.UserId">
            <summary>
            Gets or sets the user ID for which this password event has occurred.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.Text">
            <summary>
            Gets or sets the localized text corresponding to the password event.
            </summary>
            <value>The localized text.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.PasswordAge">
            <summary>
            Gets or sets the password age.
            </summary>
            <value>The password age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.PasswordMaxAge">
            <summary>
            Gets or sets the password max age.
            </summary>
            <value>The password max age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordEventArgs.PasswordNagAge">
            <summary>
            Gets or sets the password nag age.
            </summary>
            <value>The password nag age.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.PasswordPolicy">
            <summary>
            Defines password policy for a given user, for use with the <see cref="T:ININ.IceLib.Connection.Extensions.Security"/> class.
            </summary>
            <doctask/>
            <icversion>3.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.PasswordPolicy.ConvertServerXmlDateTime(System.String,System.DateTime)">
            <summary>
            Converts the server DateTime(UTC) and applies a supplied default (<paramref name="defaultDate"/>), if <paramref name="date"/> is null or empty.
            </summary>
            <param name="date">Server's DateTime in UTC.</param>
            <param name="defaultDate">Default to apply if <paramref name="date"/> is null or empty.</param>
            <returns>Converted DateTime in UTC.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.PasswordPolicy.ConvertServerXmlDateTime(System.String)">
            <summary>
            Converts the server DateTime(UTC) and applies a default if <paramref name="date"/> is null or empty.
            </summary>
            <param name="date">Server's DateTime in UTC.</param>
            <returns>Converted DateTime in UTC.</returns>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.CurrentAge">
            <summary>
            Gets the current age.
            </summary>
            <value>The current age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumAge">
            <summary>
            Gets the maximum age.
            </summary>
            <value>The maximum age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumNagPeriod">
            <summary>
            Gets the maximum nag period.
            </summary>
            <value>The maximum nag period.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MinimumAge">
            <summary>
            Gets the minimum age.
            </summary>
            <value>The minimum age.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MinimumLength">
            <summary>
            Gets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.UniquenessConstraint">
            <summary>
            Gets the uniqueness constraint.
            </summary>
            <value>The uniqueness constraint.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AllSequentialDigitsAllowed">
            <summary>
            Gets a value indicating whether all sequential digits is allowed.
            </summary>
            <value>
            	<see langword="true"/> if all sequential digits is allowed; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.LastPasswordSetTime">
            <summary>
            Gets the last password set time in UTC.
            </summary>
            <value>The last password set time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MaximumAllowedLoginAttempts">
            <summary>
            Gets the maximum allowed login attempts.
            </summary>
            <value>The maximum allowed login attempts.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AccountLockoutDuration">
            <summary>
            Gets the account lockout duration.
            </summary>
            <value>The account lockout duration.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.AccountLockoutResetTime">
            <summary>
            Gets the account lockout reset time.
            </summary>
            <value>The account lockout reset time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.LastLockoutTime">
            <summary>
            Gets the last lockout time in UTC.
            </summary>
            <value>The last lockout time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MustChangePassword">
            <summary>
            Gets a value indicating whether the user must change their password.
            </summary>
            <value><see langword="true"/> if the user must change their password; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicy.MustChangePasswordTime">
            <summary>
            Gets the must change password time in UTC.
            </summary>
            <value>The must change password time.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs">
            <summary>
            Arguments returned by the <see cref="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicyAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)"/> request.
            </summary>
            <doctask/>
            <icversion>3.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.PasswordPolicy,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs"/> class.
            </summary>
            <param name="passwordPolicy">The password policy.</param>
            <param name="error">The error.</param>
            <param name="cancelled">Not currently supported.</param>
            <param name="userState">The user-supplied object to be passed to the asynchronous password policy operation.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs.PasswordPolicy">
            <summary>
            Gets or sets the password policy.
            </summary>
            <value>The password policy.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProblemReporter">
            <summary>
            Used to submit a problem report along with a subject, description, and related files.
            </summary>
            <remarks>
            <para>
            Calling <see cref="M:ININ.IceLib.Connection.Extensions.ProblemReporter.Submit"/> or <see cref="M:ININ.IceLib.Connection.Extensions.ProblemReporter.SubmitAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> will upload the files to the destination and 
            send an email to the appropriate recipients, both of which are defined in Interaction Administrator.
            </para>
            <para>The file size limit to upload is 200MB.</para>
            </remarks>
            <icversion>4.0 SU 3</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProblemReporter.#ctor(ININ.IceLib.Connection.Session,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProblemReporter"/> class.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <param name="subject">The subject for the email of the problem report.</param>
            <param name="description">The description of the problem.</param>
            <param name="filePath">The path and name of a local file to upload. The file size must not exceed 200MB.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The filePath parameter points to a file that exceeds 200MB.</exception>
            <exception cref="T:System.IO.IOException">There was an error accessing the file.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProblemReporter.Submit">
            <summary>
            Submits the problem report and emails the recipients defined in Interaction Administrator.
            </summary>
            <exception cref="T:ININ.IceLib.IceLibException">The file exceeded the upload limit of 200MB or there were insufficient rights to submit a report.</exception>
            <exception cref="T:System.IO.IOException">There was an error accessing the file.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProblemReporter.SubmitAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously submits the problem report and emails the recipients defined in Interaction Administrator.
            </summary>        
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.Exception">An unexpected exception occurred while submitting.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The file exceeded the upload limit of 200MB.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProblemReporter.SubmitAsyncPerformTask(ININ.IceLib.Connection.Extensions.ProblemReporter.AsyncProblemReporterState)">
            <exception cref="T:System.Exception">An unexpected exception occurred while subscribing.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProblemReporter.SubmitAsyncCompleted(ININ.IceLib.Connection.Extensions.ProblemReporter.AsyncProblemReporterState)">
            <exception cref="T:System.Exception">An unexpected exception occurred while subscribing.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProblemReporter.Subject">
            <summary>
            Gets the subject for the email of the report.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProblemReporter.Description">
            <summary>
            Gets the description for the report.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProblemReporter.FilePath">
            <summary>
            Gets the filepath for the file to upload.
            </summary>
            <value>The filepath.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProfileItem">
            <summary>
            Represents a custom application setting that will be persisted to the Interaction Center server.
            </summary>
            <seealso cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.#ctor(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> class.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="isPlainTextValue">if set to <see langword="true"/> then the value is plain text (non-serialized).</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> class.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> class.
            </summary>
            <param name="namespacePath">The namespace path.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.DeserializeProfileItem(ININ.IceLib.Connection.Session,System.String,System.String,System.String[])">
            <exception cref="T:ININ.IceLib.IceLibException"><paramref name="serializedValues"/> was empty or <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.Equals(ININ.IceLib.Connection.Extensions.ProfileItem)">
            <summary>
            Determines whether the specified ProfileItem is equal to the current ProfileItem.
            </summary>
            <param name="other">The ProfileItem to compare with the current ProfileItem.</param>
            <returns><see langword="true"/> if the specified ProfileItem is equal to the current ProfileItem; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.op_Equality(ININ.IceLib.Connection.Extensions.ProfileItem,ININ.IceLib.Connection.Extensions.ProfileItem)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> are equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> to compare.</param>
            <returns><see langword="true"/> if the instances are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.op_Inequality(ININ.IceLib.Connection.Extensions.ProfileItem,ININ.IceLib.Connection.Extensions.ProfileItem)">
            <summary>
            Determines whether two instances of <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> are not equal.
            </summary>
            <param name="a">The first <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> to compare.</param>
            <param name="b">The second <see cref="T:ININ.IceLib.Connection.Extensions.ProfileItem"/> to compare.</param>
            <returns><see langword="true"/> if the instances are not equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProfileItem.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.IsPlainTextValue">
            <summary>
            Gets a value indicating whether this profile item is stored with a plain text value.
            </summary>
            <remarks>
            Profile items that are saved with a plain text value means that the <see cref="P:ININ.IceLib.Connection.Extensions.ProfileItem.Value"/> object 
            property can be safely casted to a <see cref="T:System.String"/>.  This is controlled by using 
            the <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.Object)"/> method (in which case, 
            this value would be <see langword="false"/>) or with the 
            <see cref="M:ININ.IceLib.Connection.Extensions.CustomProfile.SetProfileItem(System.String,System.String,System.String)"/> method (in which case this 
            value would be <see langword="true"/>.
            </remarks>
            <value>
            <see langword="true"/> if this profile item is stored with a plain text value; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.NamespacePath">
            <summary>
            Gets the namespace path.
            </summary>
            <value>The namespace path.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProfileItem.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings">
            <summary>
            Passed to a Session in order to authenticate an Interaction Center user that is creating
            a session on behalf of another Interaction Center user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> object is used to specify
            Interaction Center proxy user authentication settings.  This is used when an IC user name and
            password should be used to authenticate the proxy user requesting a Session on behalf of another
            Interaction Center user. In order to do proxy logins the proxy user must have the 
            <c>I3_VALUE_RIGHT_MISC_PROXY_LOGINS</c> right set in Interaction Administrator.
            </para><br/>
            <para>The <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> object can be used with the 
            <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> object to supply the 
            <see cref="T:ININ.IceLib.Connection.StationSettings"/> and <see cref="T:ININ.IceLib.Connection.SessionSettings"/> 
            arguments to the Connect method of the <see cref="T:ININ.IceLib.Connection.Session"/> object.</para>
            <note>In 2.4 SU 27 and beyond the server parameter <c>UsersWithProxyLoginRight</c> is used to 
            set the list of users that have rights to perform proxy logins via this class.  The value for this 
            parameter should contain a '|' delimited list of user IDs.
            However, in 3.0 and beyond the logged in user must have a specific "Proxy Logins" Access Control right 
            configured on their IC User via the Interaction Administrator application. This setting is in the 
            "Miscellaneous" section of the Access Control settings.</note>
            <example>
            <code escaped="false" lang="C#">
            ProxyAuthSettings authSettings = new ProxyAuthSettings("My_IC_ProxyUserID", "My_IC_ProxyPassword", "My_IC_TargetUserId");
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <icversion>3.0, 2.4 SU 27</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor">
            <overloads>Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class with default settings.
            </summary>
            <param name="proxyUserName">Name of the proxy user.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="targetUserName">Name of the target user.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor(System.String,System.String,System.String,ININ.IceLib.Connection.Extensions.ProxyTargetUserType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> class.
            </summary>
            <param name="proxyUserName">Name of the proxy user.</param>
            <param name="proxyPassword">The proxy password.</param>
            <param name="targetUserName">Name of the target user.</param>
            <param name="targetUserType">The target user type.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="targetUserType"/> is not from the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><param name="parameters"/> does not contain an entry for userid or targetusername.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong><see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/></strong> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.RetrieveInitialParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ProxyUserName">
            <summary>
            Gets or sets the name of the proxy user.
            </summary>
            <value>The name of the proxy user.</value>
            <exception cref="T:System.ArgumentNullException">Value must not be <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.TargetUserName">
            <summary>
            Gets or sets the target user name.
            </summary>
            <exception cref="T:System.ArgumentNullException">Value must not be <see langword="null"/>.</exception>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.TargetUserType">
            <summary>
            Gets or sets the target user type.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> value must be of type <see cref="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType"/>.</exception>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyAuthSettings.ProxyPassword">
            <summary>
            Sets the proxy password.
            </summary>
            <value>The proxy password.</value>
            <exception cref="T:System.ArgumentNullException">Value must not be <see langword="null"/>.</exception>
            <remarks>Note: There is intentionally no public getter for this property.</remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType">
            <summary>
            Used to specify if the target user is an IC user or a Windows user.
            </summary>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.ProxyTargetUserType.ICUser">
            <summary>
            IC user target type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.ProxyTargetUserType.WindowsUser">
            <summary>
            Windows user target type.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings">
            <summary>
            Passed to a Session in order to authenticate an Interaction Center user (through windows authentication) that is creating
            a session on behalf of another Interaction Center user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> object is used to specify
            Interaction Center proxy user authentication settings.  This is used when windows credentials
            should be used to authenticate the proxy user requesting a Session on behalf of another
            Interaction Center user. In order to do proxy logins the proxy user must have the <c>I3_VALUE_RIGHT_MISC_PROXY_LOGINS</c> right set
            in Interaction Administrator.
            </para><br/>
            <para>The <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> object can be used with the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> object
            to supply the <see cref="T:ININ.IceLib.Connection.StationSettings"/> and <see cref="T:ININ.IceLib.Connection.SessionSettings"/> arguments to the Connect method
            of the <see cref="T:ININ.IceLib.Connection.Session"/> object.</para>
            <note>In 2.4 SU 27 and beyond the server parameter <c>UsersWithProxyLoginRight</c> is used to 
            set the list of users that have rights to perform proxy logins via this class.  The value for this 
            parameter should contain a '|' delimited list of user IDs.
            However, in 3.0 and beyond the logged in user must have a specific "Proxy Logins" Access Control right 
            configured on their IC User via the Interaction Administrator application. This setting is in the 
            "Miscellaneous" section of the Access Control settings.</note>
            <example>
            <code escaped="false" lang="C#">
            ProxyWindowsAuthSettings authSettings = new ProxyWindowsAuthSettings("My_IC_ProxyUserID", "My_IC_ProxyPassword", "My_IC_TargetUserId");
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class with default settings.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class with default settings specifying
            the target user name.
            </summary>
            <param name="targetUserName">The target user name.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.#ctor(System.String,ININ.IceLib.Connection.Extensions.ProxyTargetUserType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class
            specifying the target user name and target user type.
            </summary>
            <param name="targetUserName">The target user name.</param>
            <param name="targetUserType">The type of user the target user.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="targetUserType"/> is not from the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType"/> enumeration.</exception>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.#ctor(ININ.IceLib.Connection.WindowsAuthProtocols,System.String,ININ.IceLib.Connection.Extensions.ProxyTargetUserType)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class, designating
            which protocols should be used as well as the target user name and type of target user.
            </summary>
            <param name="protocolFlags">Flags to indicate which protocols should be used.</param>
            <param name="targetUserName">The target user name.</param>
            <param name="targetUserType">The type of user the target user is.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The target user type is not from the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.#ctor(ININ.IceLib.Connection.WindowsAuthProtocols,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> class, designating
            which protocols should be used as well as the target user name.
            </summary>
            <param name="protocolFlags">Flags to indicate which protocols should be used.</param>
            <param name="targetUserName">The target user name.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <strong><see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/></strong> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.ProxyUserName">
            <summary>
            Gets the Windows user name associated with this instance.
            </summary>
            <value>The windows user name.</value>
            <icversion>3.0 SU 11</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.TargetUserName">
            <summary>
            Gets or sets the target user name associated with this instance.
            </summary>
            <value>The target user name.</value>
            <exception cref="T:System.ArgumentNullException">Value must not be <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.TargetUserType">
            <summary>
            Gets or sets the target user type.
            </summary>
            <value>The target user type.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyTargetUserType"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ProxyWindowsAuthSettings.ProtocolFlags">
            <summary>
            Gets or sets the protocol flags.
            </summary>
            <value>The protocol flags.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.Security">
            <summary>
            Provides access to the Session user's password policy and allows for setting of the password.
            </summary>
            <remarks>Use this class to get the password policy for a user, or to set the user's password.</remarks>
            <doctask/>
            <icversion>3.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security"/> class.
            </summary>
            <param name="session">The session.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicy">
            <summary>
            Gets the password policy for this session user.
            </summary>
            <returns>The <see cref="T:ININ.IceLib.Connection.Extensions.PasswordPolicy"/> for this session user.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.GetPasswordPolicyAsync(System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the password policy for this session user.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam /></param>
            <remarks><ininAsyncMethodNote /></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.SetPassword(System.String,System.String)">
            <summary>
            Sets the password for this session user.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <remarks>If the password cannot be set, an <see cref="T:ININ.IceLib.IceLibException"/> containing the error 
            message will be thrown.</remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The password was unable to be set.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.SetPasswordAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the password for this session user.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <para>If the password cannot be set, an <see cref="T:ININ.IceLib.IceLibException"/> containing the error message will be returned in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">AsyncCompletedEventArgs.Error</see> property.</para>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.Security.PasswordExpired">
            <summary>
            Raised when the session user's password expires.
            </summary>
            <remarks>
            This event will only occur while the session is connected. (See 
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> and <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.)
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.Security.PasswordEnteredNagPeriod">
            <summary>
            Raised when the session user's password enters the password nag period.
            </summary>
            <remarks>
            This event will only occur while the session is connected. (See 
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> and <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.)
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.#ctor(System.String,System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState"/> class.
            </summary>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new pasasword.</param>
            <param name="taskId">The task ID.</param>
            <param name="setPasswordCompletedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.#ctor(System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.PasswordPolicyAsyncCompletedEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState"/> class.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="getPasswordPolicyCompletedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.GetPasswordPolicyCompletedCallback">
            <summary>
            Gets the completed callback.
            </summary>
            <value>The completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.SetPasswordCompletedCallback">
            <summary>
            Gets the set password completed callback.
            </summary>
            <value>The set password completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.OldPassword">
            <summary>
            Gets or sets the old password.
            </summary>
            <value>The old password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>The new password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.Security.AsyncPasswordPolicyState.PasswordPolicy">
            <summary>
            Gets or sets the password policy.
            </summary>
            <value>The password policy.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs">
            <summary>
            Provides data for the SendServerRequest method of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/> <c>completedCallback</c> 
            delegate of <see cref="T:ININ.IceLib.Connection.Extensions.CustomNotification"/>.
            </summary>
            <doccompleted/>
            <icversion>2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.CustomMessage,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SendCompletedEventArgs.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParameter">
            <summary>
            Provides information about a server parameter within the Interaction Center system.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameter.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Name">
            <summary>
            Gets the Name of the server parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Exists">
            <summary>
            Gets whether this server parameter exists on the server.
            </summary>
            <value><see langword="true"/> if the server parameter exists; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameter.Value">
            <summary>
            Gets the value of this server parameter.
            </summary>
            <value>The value of this parameter.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.#ctor(ININ.IceLib.Connection.Session)">
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.GetInstance(ININ.IceLib.Connection.Session)">
            <summary>
            Gets a <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameterCache"/>.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <returns>The <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameterCache"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            A parameter is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.GetServerParameters(System.String[])">
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serverParameterNames"/> is <see langword="null"/> or empty.
            </exception>
            <exception cref="T:ININ.IceLib.IceLibException">The session is in an invalid state for this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.StartWatching(ININ.IceLib.Connection.Extensions.ServerParameters,System.String[])">
            <exception cref="T:System.InvalidOperationException">The watcher is already watching.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.ChangeWatchedParameters(ININ.IceLib.Connection.Extensions.ServerParameters,System.String[],System.String[],System.Boolean)">
            <exception cref="T:System.InvalidOperationException">The watcher is not currently watched.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.StopWatching(ININ.IceLib.Connection.Extensions.ServerParameters)">
            <exception cref="T:System.InvalidOperationException">The watcher is not currently watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.GetCachedServerParameter(System.String)">
            <exception cref="T:ININ.IceLib.NotCachedException"><paramref name="parameterName"/> is not cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameterCache.GetCachedServerParameters(ININ.IceLib.Connection.Extensions.ServerParameters)">
            <exception cref="T:System.InvalidOperationException">The watcher is not currently watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParameterCache.Session">
            <summary>
            Gets the Session with which this <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameterCache"/> is associated.
            </summary>
            <value>The session.</value>`
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParameters">
            <summary>
            Allows querying and watching of server parameters within the Interaction Center system.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameters"/> class.
            </summary>
            <param name="session">The Session with which it is associated.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetServerParameters(System.String[])">
            <summary>
            Gets a list of server parameters.
            </summary>
            <param name="serverParameterNames">The server parameters being requested.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameter"/> objects.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session is not connected.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetServerParametersAsync(System.String[],System.EventHandler{ININ.IceLib.Connection.Extensions.GetServerParametersCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets a list of server parameters.
            </summary>
            <param name="serverParameterNames">The server parameters being requested.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.IsWatching">
            <overloads>
            Determines whether a watch is active.
            </overloads>
            
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<see langword="true"/> if a watch is active; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.IsWatching(System.String)">
            <summary>
            Determines whether a watch is active and if the specified value is being watched.
            </summary>
            <param name="serverParamName">Name of the server parameter.</param>
            <returns>
            	<see langword="true"/> if a watch is active and the specified value is being watched; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            This method determines whether a watch is in place for this instance and whether the specified value is being watched.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])">
            <summary>
            Starts watching the specified <paramref name="serverParameterNames"/>.
            </summary>
            <param name="serverParameterNames">The server parameter names.</param>
            <remarks>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The object is already being watched.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously starts watching the specified <paramref name="serverParameterNames"/>.
            </summary>
            <param name="serverParameterNames">The server parameter names.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.ChangeWatchedParameters(System.String[],System.String[],System.Boolean)">
            <summary>
            Changes which server parameters are being watched.
            </summary>
            <param name="serverParameterNamesToAdd">The server parameter names to add. (Can be <see langword="null"/>.)</param>
            <param name="serverParameterNamesToRemove">The server parameter names to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <remarks>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            <ininWatchRequired/>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session is not connected.</exception>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not in the cache.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.ChangeWatchedParametersAsync(System.String[],System.String[],System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously changes which server parameters are being watched.
            </summary>
            <param name="serverParameterNamesToAdd">The server parameter names to add. (Can be <see langword="null"/>.)</param>
            <param name="serverParameterNamesToRemove">The server parameter names to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <para><b>Note: </b>This method silently ignores attempts to add items already being watched or to remove items not being watched.</para>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StopWatching">
            <summary>
            Stops watching the server parameters.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops watching the server parameters.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam /></param>
            <remarks>
            <ininAsyncMethodNote />
            <ininHowWatchesWork />
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetCachedServerParameter(System.String)">
            <summary>
            Gets the Server Parameter that is cached.
            </summary>
            <remarks>
            <ininWatchRequired/>
            </remarks>
            <param name="parameterName">The name of the parameter.</param>
            <returns>The requested server parameter.</returns>
            <exception cref="T:ININ.IceLib.NotCachedException">The requested parameter is not cached.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParameters.GetCachedServerParameters">
            <summary>
            Gets all the server parameters that are cached.
            </summary>
            <returns>The <see cref="T:ININ.IceLib.Connection.Extensions.ServerParameter"/> array.</returns>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.ServerParameters.ServerParametersChanged">
            <summary>
            Occurs when a Server Parameter changes.
            </summary>
            <remarks>
            This event will only occur when server parameters being watched have changed. To start
            watching for server parameters call either the <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])"/> method or
            the <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/> method. To modify which server parameters are
            being watched once the watch has been started, use the 
            <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.ChangeWatchedParameters(System.String[],System.String[],System.Boolean)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatching(System.String[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.ServerParameters.StartWatchingAsync(System.String[],System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:ININ.IceLib.Connection.Extensions.ServerParameters.ServerParametersChanged"/> event.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.ServerParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs"/> class.
            </summary>
            <param name="serverParameters">The server parameters.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.ServerParametersChangedEventArgs.ServerParameters">
            <summary>
            Gets the server parameters.
            </summary>
            <value>The server parameters.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatch">
             <summary>
             Allows watching for login/logout events for users, all users on a station, or all users on a computer.
             </summary>
             <example>
             This code creates a session watch then selects a user and performs a proxy login using the <see cref="T:ININ.IceLib.Connection.Extensions.ProxyAuthSettings"/> object.
             <code escaped="false" lang="C#">
             private Session _Session = new Session();
             private Session _ProxySession = new Session();
             private AuthSettings _AuthSettings = null;
             private SessionWatch _SessionWatch;
             ...
             private void _ButtonStartWatch_Click(object sender, EventArgs e)
                {
                    SessionWatchForm dlg = new SessionWatchForm();
            
                    if (dlg.ShowDialog(this) == DialogResult.OK)
                    {
                        this._SessionWatch.StartWatchingAsync(new SessionWatchId[] { dlg.WatchedObject }, new EventHandler&lt;SessionWatchAsyncEventArgs&gt;(OnSessionStartWatchCompleted), null);
                    }
                }
                private void OnSessionStartWatchCompleted(object sender, SessionWatchAsyncEventArgs args)
                {
                    if (args.Error == null)
                    {
                        ReadOnlyCollection&lt;SessionWatchSettings&gt; watchSettings = args.SessionWatchSettings;
            
                        this._ListViewUserSessions.Enabled = true;
            
                        foreach (SessionWatchSettings setting in watchSettings)
                        {
                            ListViewItem lvi = new ListViewItem();
                            lvi.Tag = setting;
            
                            lvi.Text = setting.UserName;
            
                            lvi.SubItems.Add(setting.SessionSettings.ApplicationName);
                            lvi.SubItems.Add(setting.SessionSettings.IsoLanguage);
                            lvi.SubItems.Add(setting.StationSettings.StationId);
                            lvi.SubItems.Add(setting.SessionSettings.MachineName);
            
                            this._ListViewUserSessions.Items.Add(lvi);
                            
                        }
                   }
                   else
                   {
                       logMessage("Start watch user sessions failed!", args.Error);
                   }
                }
              private void _ListViewUserSessions_MouseUp(object sender, MouseEventArgs e)
              {
                if (e.Button == MouseButtons.Right)
                {
                    ListViewHitTestInfo lvhti = this._ListViewUserSessions.HitTest(e.X, e.Y);
            
                    ListViewItem lvi = lvhti.Item;
            
                    if (lvi != null)
                    {
                        ContextMenu menu = new ContextMenu();
                        SessionWatchSettings settings = lvi.Tag as SessionWatchSettings;
            
                        MenuItem mi = new MenuItem("Login User - " + settings.UserName);
            
                        mi.Click += new EventHandler(mi_Click);
                        mi.Tag = settings;
            
                        menu.MenuItems.Add(mi);
            
                        menu.Show(this._ListViewUserSessions, new Point(e.X, e.Y), LeftRightAlignment.Left);
                    }
                }
              }
            
             void mi_Click(object sender, EventArgs e)
             {
                MenuItem mi = sender as MenuItem;
                SessionWatchSettings settings = mi.Tag as SessionWatchSettings;
            
                PasswordDialog dlg = new PasswordDialog();
            
                if (dlg.ShowDialog(this) == DialogResult.OK)
                {
                    ProxyAuthSettings auth = new ProxyAuthSettings(this._Session.UserId, dlg.Password, settings.UserName);
                    StationSettings stationSettings = new WorkstationSettings(settings.StationSettings.StationId, settings.StationSettings.SupportedMedia);
                    HostSettings hostSettings = this.GetHostSettings();
                    SessionSettings sessionSettings = settings.SessionSettings;
            
                    _ProxySession.ConnectAsync(sessionSettings, hostSettings, auth, stationSettings, OnProxyLoginComplete, null);
                }
             
             }
             </code>
             </example>
             <icversion>3.0, 2.4 SU 27</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> class.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.IsWatching">
            <overloads>
            Determines whether a watch is active.
            </overloads>
            
            <summary>
            Determines whether a watch is active.
            </summary>
            <returns>
            	<see langword="true"/> if a watch is active; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method determines whether a watch is in place for this instance.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.IsWatching(ININ.IceLib.Connection.Extensions.SessionWatchId)">
            <summary>
            Determines whether a watch is active and if the specified value is being watched.
            </summary>
            <param name="watchId">The scoped identifier.</param>
            <returns>
            	<see langword="true"/> if a watch is active and the specified value is being watched; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            This method determines whether a watch is in place for this instance and whether the specified value is being watched.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])">
            <summary>
            Sets a watch for login/logout events for users, all users on a station, or all users on a computer.
            </summary>
            <param name="watchIds">The scoped identifiers for all watches.</param>
            <returns>The session watch settings.</returns>
            <remarks>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">The object is already being watched.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Asynchronously sets a watch for login/logout events for users, all users on a station, or all users on a computer.
            </summary>
            <param name="watchIds">The scoped identifiers for all watches.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter array is empty.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StopWatching">
            <summary>
            Stops all watches.
            </summary>
            <remarks>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.StopWatchingAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously stops all watches.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam /></param>
            <remarks>
            <ininAsyncMethodNote />
            <ininHowWatchesWork />
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessions(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)">
            <summary>
            Changes the list of users, stations, and computers to watch for user login/logout events.
            </summary>
            <param name="sessionWatchIdsToAdd">The session watch IDs to add. (Can be <see langword="null"/>.)</param>
            <param name="sessionWatchIdsToRemove">The session watch IDs to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <returns>The session watch settings.</returns>
            <exception cref="T:System.ArgumentNullException">An element in a parameter is <see langword="null"/>.</exception>
            <remarks>
            <Note>This method silently ignores attempts to add items already being watched or to remove items not being watched.</Note>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The object is not being watched.</exception>
            <ConnectionExceptions/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessionsAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Asynchronously changes the list of users, stations, and computers to watch for user login/logout events.
            </summary>
            <param name="sessionWatchIdsToAdd">The session watch IDs to add. (Can be <see langword="null"/>.)</param>
            <param name="sessionWatchIdsToRemove">The session watch IDs to remove. (Can be <see langword="null"/>.)</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">An element in a parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <Note>This method silently ignores attempts to add items already being watched or to remove items not being watched.</Note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.SessionWatch.SessionWatchedUserChanged">
            <summary>
            Occurs when a Session starts or stops for a watched user, station, or machine.
            </summary>
            <remarks>
            This event will only occur when sessions being watched have changed. To start
            watching for sessions call either the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> method or
            the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/> method. To modify which sessions are
            being watched once the watch has been started, use the 
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessions(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.SessionWatch.SessionWatchedUserAdded">
            <summary>
            Occurs when a user session is created in IC.
            </summary>
            <remarks>
            This event will only occur when sessions being watched have changed. To start
            watching for sessions call either the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> method or
            the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/> method. To modify which sessions are
            being watched once the watch has been started, use the 
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessions(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <icversion>3.0 SU 2, 2.4 SU 31</icversion>
        </member>
        <member name="E:ININ.IceLib.Connection.Extensions.SessionWatch.SessionWatchedUserRemoved">
            <summary>
            Occurs when a user session is removed in IC.
            </summary>
            <remarks>
            This event will only occur when sessions being watched have changed. To start
            watching for sessions call either the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> method or
            the <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/> method. To modify which sessions are
            being watched once the watch has been started, use the 
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.ChangeWatchedSessions(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)"/> method.
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatchId[])"/> or <see cref="M:ININ.IceLib.Connection.Extensions.SessionWatch.StartWatchingAsync(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)"/>.</note>
            <ininHowWatchesWork/>
            </remarks>
            <icversion>3.0 SU 2, 2.4 SU 31</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="watchIds">The watch IDs.</param>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean,System.Int64,System.EventHandler{ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState"/> class.
            </summary>
            <param name="watchIdsToAdd">The watch IDs to add.</param>
            <param name="watchIdsToRemove">The watch IDs to remove.</param>
            <param name="replaceExisting">if set to <see langword="true"/> to replace existing.</param>
            <param name="taskId">The task ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState">State of the user.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIds">
            <summary>
            Gets or sets the watch IDs.
            </summary>
            <value>The watch IDs.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIdsToAdd">
            <summary>
            Gets or sets the watch IDs to add.
            </summary>
            <value>The watch IDs to add.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchIdsToRemove">
            <summary>
            Gets or sets the watch IDs to remove.
            </summary>
            <value>The watch IDs to remove.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.ReplaceExisting">
            <summary>
            Gets or sets a value indicating whether to replace existing.
            </summary>
            <value><see langword="true"/> if should replace existing; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.CompletedCallback">
            <summary>
            Gets the completed callback.
            </summary>
            <value>The completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.WatchCompletedCallback">
            <summary>
            Gets the watch completed callback.
            </summary>
            <value>The watch completed callback.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatch.AsyncSessionWatchState.SessionWatchSettings">
            <summary>
            Gets or sets the session watch settings.
            </summary>
            <value>The session watch settings.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs">
            <summary>
            Provides data for the asynchronous completed events of <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/>.
            </summary>
            <icversion>3.0, 2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{ININ.IceLib.Connection.Extensions.SessionWatchSettings},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs"/> class.
            </summary>
            <param name="sessionWatchSettings">The session watch settings.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchAsyncEventArgs.SessionWatchSettings">
            <summary>
            Gets the session watch settings.
            </summary>
            <value>The session watch settings.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchCache.ChangeWatch(ININ.IceLib.Connection.Extensions.SessionWatch,ININ.IceLib.Connection.Extensions.SessionWatchId[],ININ.IceLib.Connection.Extensions.SessionWatchId[],System.Boolean)">
            <ConnectionExceptions />
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchCache.StartWatching(ININ.IceLib.Connection.Extensions.SessionWatch,ININ.IceLib.Connection.Extensions.SessionWatchId[])">
            <ConnectionExceptions />
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchCache.SendSessionWatchRequest(System.Collections.Generic.List{System.String},System.Boolean,ININ.ThinBridge.Message)">
            <summary>
            Handles common code to perform the actual session watch request to SM. 
            Used in the Request[Type]SessionWatches functions
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchCache.WatchCount">
            <summary>
            Gets the number of watchers.
            </summary>
            <value>The watch count.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs">
            <summary>
            Provides data for the watched user added and watched user removed events.
            </summary>
            <icversion>3.0 SU 2, 2.4 SU 31</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs"/> class with a
            <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings"/> instance.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs.ReadFromMessage(ININ.ThinBridge.NotifierReader)">
            <summary>
            Deserializes an instance of <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs"/> from a server message.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="reader"/> is <see langword="null"/>.</exception>
            <param name="reader">The <see cref="T:ININ.ThinBridge.NotifierReader"/>.</param>
            <returns>A new instance of <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs"/>.</returns>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserAddedRemovedEventArgs.Settings">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings"/> instance.
            </summary>
            <value>The <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings"/> instance.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs">
            <summary>
            Provides data for the watched user changed event.
            </summary>
            <icversion>3.0, 2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.#ctor(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs"/> class.
            </summary>
            <param name="login">if set to <see langword="true"/>, logged in.</param>
            <param name="userId">The user ID.</param>
            <param name="stationName">Name of the station.</param>
            <param name="machineName">Name of the machine.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.Login">
            <summary>
            Gets a value indicating whether the change was a login.
            </summary>
            <value><see langword="true"/> if logged in; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.UserId">
            <summary>
            Gets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.StationName">
            <summary>
            Gets the name of the station.
            </summary>
            <value>The name of the station.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchedUserChangedEventArgs.MachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchId">
            <summary>
            Identifies a watched session for the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatch"/> class.
            </summary>
            <icversion>3.0, 2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.#ctor(ININ.IceLib.Connection.Extensions.SessionWatchType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchId"/> class.
            </summary>
            <param name="watchType">Type of the watch.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchId.WatchType">
            <summary>
            Gets the type of the watch.
            </summary>
            <value>The type of the watch.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchId.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionType">
            <summary>
            Identifies a SessionWatchSettings' session type.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings">
            <summary>
            Describes session, station, and machine data for a watched session.
            </summary>
            <icversion>3.0, 2.4 SU 28</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Extensions.SessionWatchSettings"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Extensions.SessionWatchSettings.Equals(ININ.IceLib.Connection.Extensions.SessionWatchSettings)">
            <summary>
            Checks for equality between this instance an another SessionWatchSettingsInstance.
            </summary>
            <param name="other">The other SessionWatchSettings instance to test for equality to the current instance.</param>
            <returns><langref name="true"> if the the appropriate fields match, indicating the SessionWatchSettings objects
            represent the same session watch. </langref>></returns>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.SessionSettings">
            <summary>
            Gets the session settings.
            </summary>
            <value>The session settings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.StationSettings">
            <summary>
            Gets the station settings (as a StationSettings-derived instance).
            </summary>
            <value>The StationSettings-derived instance (e.g. <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/>, <see cref="T:ININ.IceLib.Connection.StationlessSettings"/>, etc.).</value>
            <remarks>
            <example>
            <code escaped="false" lang="C#">
            SessionWatchSettings sessionWatchSettings = ...;
            RemoteStationSettings remoteStationSettings = sessionWatchSettings.StationSettings as RemoteStationSettings;
            if (remoteStationSettings != null)
            {
                // do work for remote station.
            }
            else if (sessionWatchSettings.StationSettings is StationlessSettings)
            {
                // do work for stationless settings.
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Extensions.SessionWatchSettings.SessionWatchId">
            <summary>
            Gets the session watch ID. This is used to correlate user session information
            with a session watch.
            </summary>
            <value>The session watch ID.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Extensions.SessionWatchType">
            <summary>
            Describes the type of Session Watch to perform.
            </summary>
            <icversion>3.0, 2.4 SU 28</icversion>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.User">
            <summary>
            Watch for a given user.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.Station">
            <summary>
            Watch for all users on a station.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Extensions.SessionWatchType.Machine">
            <summary>
            Watch for all users on a machine.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.HostEndpoint">
            <summary>
            Represents an endpoint for BridgeHost connections.
            </summary>
            <remarks>
            <para>
            This is used by the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class to
            specify an endpoint (i.e. BridgeHost) for the Session to use when attempting a connection.
            </para><br/>
            <note>
            <B>BridgeHost</B> is the connector between thin clients and the Session Manager. It translates 
            network protocols, socket-level security checking, and other tasks during a thin 
            client-to-Session Manager exchange.
            </note>
            <br/>
            <example>
            <code escaped="false" lang="C#">
            HostEndpoint hostEndpoint = new HostEndpoint("MyBridgeHostServer");
            HostSettings hostSettings = new HostSettings(hostEndpoint);
            Session session = new Session();
            session.Connect(..., hostSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort">
            <summary>
            Represents the default Port. This field is read-only.
            </summary>
            <remarks>
            If the <see cref="P:ININ.IceLib.Connection.HostEndpoint.Port"/> property is set to this value, 
            then the default BridgeHost port will be used.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with default 
            settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with the specified 
            host.
            </summary>
            <remarks>
            The host will attempt to be parsed for the [host]:[port] format. The port will default to 
            <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort"/> if not set.
            </remarks>
            <param name="host">The host to connect to.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="host"/> parameter string is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="host"/> parameter string is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with the specified
            host and port.
            </summary>
            <remarks>
            The host will attempt to be parsed for the [host]:[port] format. If the port is not found in this format, 
            it will be set by the port parameter.
            </remarks>
            <param name="host">The host to connect to.</param>
            <param name="port">The port to connect with.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="host"/> parameter string is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="host"/> parameter string is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port"/> parameter is less than 1 or greater than 65535.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> class with the specified
            host and port and adds a reference to itself as the only resolved endpoint.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="resolveToSelf">if set to <see langword="true"/>, resolve to self.</param>
            <remarks>
            <para>This constructor may be used to initialize an instance of <see cref="T:ININ.IceLib.Connection.HostEndpoint"/>
            that is known to resolve only to itself. Since <see cref="M:ININ.IceLib.Connection.HostEndpoint.ResolveEndpoint"/>
            uses network-bound DNS operations, it is advantageous to create self-resolving endpoints
            when possible to reduce unnecessary network overhead.</para>
            <para>This also serves to limit the number of unique instances of <see cref="T:ININ.IceLib.Connection.HostEndpoint"/>.</para>
            </remarks>
            <exception cref="T:System.ArgumentException">The <paramref name="host"/> parameter string is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="host"/> parameter string is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port"/> parameter is less than 1 or greater than 65535.</exception>
        </member>
        <member name="F:ININ.IceLib.Connection.HostEndpoint.DefaultHost">
            <summary>
            Represents the default Host. This field is read-only.
            </summary>
            <remarks>
            <para>If the <see cref="P:ININ.IceLib.Connection.HostEndpoint.Host"/> property is set to this value, 
            then the default BridgeHost host will be used.</para>
            <para>Retrieves the default host server stored in the registry. 
            It will first look in HKEY_CURRENT_USER\Software\Interactive Intelligence\EIC\BridgeHost in the default key. 
            Then if that is blank it will look in the same place under HKEY_LOCAL_MACHINE. Finally, if that is also 
            blank, it defaults to <i>i3ClientSrv</i>. It is recommended that sites create a DNS alias to their BridgeHost 
            server with that name.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostEndpoint.SetHost(System.String)">
            <summary>
            Parses the specified host to set both the host and port (if specified).
            </summary>
            <param name="host">The host value to parse.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.HostEndpoint.Host">
            <summary>
            Gets or sets the Host.
            </summary>
            <value>The host.</value>
            <remarks>
            This property specifies the host to connect to. The default is 
            <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultHost"/>. Setting this property will attempt to parsed 
            for the [host]:[port] format. If the port is not specified in this format, 
            it remains unchanged from what it was previously.
            </remarks>
            <exception cref="T:System.ArgumentException">The host string is empty.</exception>
            <exception cref="T:System.ArgumentNullException">The host string is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.HostEndpoint.Port">
            <summary>
            Gets or sets the Port.
            </summary>
            <value>The port.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.HostEndpoint.DefaultPort"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The port value is less than 1 or greater than 65535.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.HostSettings">
            <summary>
            Passed to a Session in order to specify a host (i.e. IC server).
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.HostSettings"/> object is used to specify
            a <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> (i.e. IC server) for the Session to use when attempting a connection.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor(ININ.IceLib.Connection.HostEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class with the specified host.
            </summary>
            <param name="hostEndpoint">The host to connect to.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.HostSettings"/> class given a parameters dictionary.
            </summary>
            <param name="parameters">The parameters.</param>
            <exception cref="T:System.ArgumentException"><paramref name="parameters"/> does not contain an entry for hostendpoint.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exclude/><summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.HostSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.HostSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.HostSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.HostSettings.IgnoreAlternateServerList">
            <summary>
            If set to <see langword="true"/>, <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> will not try any alternate servers when 
            connecting to the IC server specified by these <c>HostSettings</c>.  Defaults to <see langword="false"/>.
            </summary>
            <value><see langword="true"/>, if the list of alternate servers should be ignored.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.HostSettings.HostEndpoint">
            <summary>
            Gets or sets the HostEndpoint.
            </summary>
            <value>The host endpoint.</value>
            <remarks>
            This property specifies the HostEndpoint to connect to.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The value being set is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.ICAuthSettings">
            <summary>
            Passed to a Session in order to authenticate an Interaction Center user.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> object is used to specify
            Interaction Center user authentication settings.  This is used when an IC username and
            password should be used to authenticate the user requesting a Session.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> class with user settings.
            </summary>
            <param name="userName">The Interaction Center user name.</param>
            <param name="password">The Interaction Center password.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><param name="parameters"/> does not contain an entry for userid.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.RetrieveInitialParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.ICAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.ICAuthSettings.UserName">
            <summary>
            Gets or sets the Interaction Center userName.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.ICAuthSettings.Password">
            <summary>
            Sets the Interaction Center password.
            </summary>
            <value>The password.</value>
            <remarks>Note: There is intentionally no public getter for this property.</remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.IceLibConnectionException">
            <summary>
            The exception that is thrown when an attempt to connect to an IC server has failed.
            </summary>
            <remarks>
            <para>
            This exception is thrown when attempting to establish a connection to an IC server has failed.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            <para>
            Please refer to <see cref="T:ININ.IceLib.Connection.IceLibConnectionExceptionTypes"/> for a list of possible error types.
            </para>
            </remarks>
            <doccompleted/>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="T:ININ.IceLib.IceLibException">
            <summary>
            The general exception that is thrown for IceLib when a more specific exception cannot be determined.
            </summary>
            <remarks>
            <para>
            This exception is thrown throughout IceLib when a more specific exception cannot be determined.  It
            also serves as the base class for more specific IceLib exceptions, allowing consistent exception
            handling for all such exceptions.
            </para>
            <para>
            Please refer to <see cref="T:ININ.IceLib.IceLibExceptionTypes"/> for a list of error types.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:ININ.IceLib.IceLibException.ErrorType">
            <summary>
            Gets the value for the type of error.
            </summary>
            <remarks>Please refer to the <see cref="T:ININ.IceLib.IceLibExceptionTypes"/> class for more information on the error.</remarks>
            <value>The error type.</value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="P:ININ.IceLib.IceLibException.ErrorCode">
            <summary>
            Gets or sets the internal error code.
            </summary>
            <value>The error code.</value>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with default settings.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with default settings.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with a specified error message.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with a specified error message.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with a specified error message.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with a 
            specified error message.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.#ctor(System.Int32,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> class with a 
            specified error message.
            </summary>
            <param name="icelibConnectionExceptionType">The type of the connection exception.</param>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.IceLibConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.IceLibConnectionException.ConnectionErrorType">
            <summary>
            Gets the value for the type of error.
            </summary>
            <remarks>Please refer to the <see cref="T:ININ.IceLib.Connection.IceLibConnectionExceptionTypes"/> class for more information on the error.</remarks>
            <value>The error type.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.IceLibConnectionExceptionTypes">
            <summary>
            This class is used by <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> to provide more information about the type of error.
            </summary>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.Unspecified">
            <summary>An unknown error occurred.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.AccessDenied">
            <summary>The specified user or station does not have sufficient rights to perform the requested action.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.UnknownUser">
            <summary>The specified user name is not known.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.ICAuthDisabled">
            <summary>IC authentication is disabled.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.IntegratedWindowsAuthDisabled">
            <summary>Windows authentication is disabled.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.AlernateWindowsAuthDisabled">
            <summary>Alternate windows authentication is disabled.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.Authentication">
            <summary>There was an error authenticating the username and/or password.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.UnknownStation">
            <summary>The specified station is not known.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.StationInactive">
            <summary>The specified station is marked inactive.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.NoRights">
            <summary>The required rights are unavailable.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.RequiredLicenseNotAssigned">
            <summary>The license required to perform the requested operation is unavailable.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.RemoteAtLocal">
            <summary>Local logins to remote stations are not permitted.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.SessionRefusedBy">
            <summary>The session has been refused by the server.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.ConnectionRefused">
            <summary>The connection was actively refused by the socket.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.InvalidSessionId">
            <summary>The Session ID is invalid.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.ServerTooBusy">
            <summary>The server is currently too busy to accept a new session.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.NoServerFound">
            <summary>There was no server found.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.LoginTimeout">
            <summary>The login request exceeded the timeout period.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.InvalidParameterValues">
            <summary>There were invalid parameters for the connect request.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.Socket">
            <summary>A non-specific socket error occurred.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.IceLibConnectionExceptionTypes.HostNameResolutionError">
            <summary>The specified host name could not be resolved.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.InvalidServerVersionException">
            <summary>
            The exception that is thrown when an attempt was made to connect to an IC server with an incompatible IceLib version.
            </summary>
            <remarks>
            <para>
            This exception is thrown when attempting to establish a connection to an IC server from an incompatible IceLib version.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with a specified error message.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with a 
            specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.InvalidServerVersionException"/> class with a 
            specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.InvalidServerVersionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.AlternateEndpointParameters">
            <summary>
            Holds information used to determine the end points to connect to during a <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/>.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.AlternateEndpointParameters.#ctor(System.String,System.String,ININ.IceLib.Connection.HostEndpoint,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Internal.AlternateEndpointParameters"/> class.
            </summary>
            <param name="stationId">The station ID.</param>
            <param name="userId">The user ID.</param>
            <param name="rawEndpoint">The raw endpoint.</param>
            <param name="useLocationOnlyIfAvailable">Determines if the mapped location should be used, if present.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.AlternateEndpointParameters.#ctor(System.String,System.String,ININ.IceLib.Connection.HostEndpoint,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{ININ.IceLib.Connection.HostEndpoint})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Internal.AlternateEndpointParameters"/> class.
            </summary>
            <param name="stationId">The station ID.</param>
            <param name="userId">The user ID.</param>
            <param name="rawEndpoint">The raw endpoint.</param>
            <param name="useLocationOnlyIfAvailable">Determines if the mapped location should be used, if present.</param>
            <param name="attemptedReconnects">The number of times a reconnect has been attempted.</param>
            <param name="reconnectEndpointsToSkip">The endpoints to skip during subsequent reconnects.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.AlternateEndpointParameters.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.FallbackLocation">
            <exclude/>
            <summary>
            For internal use only.
            A fallback location to be used when the primary location is unreachable.
            </summary>
            <remarks>
            When attempting to connect, IceLib should first attempt to connect to any session manager instance associated
            with the location mapped to the user.  If the user is not mapped, then the location mapped to the station.
            If the user / station location is unreachable, that location will contain a list of fallback location.  Each
            fallback location has a priority order index indicated the order in which fallback locations should be 
            attempted.  Multiple fallback locations may share a priority order index value, and in this case these locations
            are considered peers: IceLib should attempt all un-attempted session manager instances associated with those
            locations before attempting the next lower priority fallback location.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.Equals(ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.CompareTo(ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.op_GreaterThan(ININ.IceLib.Connection.Internal.FallbackLocation,ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.op_GreaterThanOrEqual(ININ.IceLib.Connection.Internal.FallbackLocation,ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.op_LessThan(ININ.IceLib.Connection.Internal.FallbackLocation,ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.op_LessThanOrEqual(ININ.IceLib.Connection.Internal.FallbackLocation,ININ.IceLib.Connection.Internal.FallbackLocation)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.FallbackLocation.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.FallbackLocation.PriorityOrderIndex">
            <summary>
            Gets or sets the index of the priority order.
            </summary>
            <value>The index of the priority order.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.FallbackLocation.LocationId">
            <summary>
            Gets or sets the location id.
            </summary>
            <value>The location id.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.Location">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.Location.Equals(ININ.IceLib.Connection.Internal.Location)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.Location.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.Location.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.Location.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
            <value>The display text.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.Location.FallbackLocations">
            <summary>
            Gets the fallback locations for this location.
            </summary>
            <value>The fallback locations.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.LocationMapping">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.LocationMapping.Equals(ININ.IceLib.Connection.Internal.LocationMapping)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.LocationMapping.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.LocationMapping.MappedId">
            <summary>
            Gets or sets the ID of the object mapped to a <see cref="T:ININ.IceLib.Connection.Internal.Location"/>.
            </summary>
            <value>The mapped ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.LocationMapping.LocationId">
            <summary>
            Gets or sets the ID of the <see cref="T:ININ.IceLib.Connection.Internal.Location"/> that the object is mapped to.
            </summary>
            <value>The <see cref="T:ININ.IceLib.Connection.Internal.Location"/> ID.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.SessionManagerCluster">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerCluster.Equals(ININ.IceLib.Connection.Internal.SessionManagerCluster)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerCluster.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.HostKey">
            <summary>
            Gets or sets the host key.
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.DefaultLocationId">
            <summary>
            The default location ID for this session manager cluster when neither station nor user is known.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.UserLocationMappings">
            <summary>
            Gets or sets the user location mappings.
            </summary>
            <value>The user location mappings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.StationLocationMappings">
            <summary>
            Gets or sets the station location mappings.
            </summary>
            <value>The station location mappings.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.SessionManagerInstances">
            <summary>
            Gets or sets the session manager instances.
            </summary>
            <value>The session manager instances.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerCluster.Locations">
            <summary>
            Gets or sets the locations.
            </summary>
            <value>The locations.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.SessionManagerClusterCache">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerClusterCache.GetClusterForHostKey(System.String)">
            <summary>
            Gets the cluster for host key.
            </summary>
            <param name="hostKey">The host key.</param>
            <returns>The SessionManagerCluster for the hostKey, or null if one was not found.</returns>
            <remarks>
            This version of the method will only return a cluster if one exists for the requested host.  Use
            the other version if you want to be sure to load an alternate server list from a legacy file.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerClusterCache.GetClusterForHostKey(ININ.IceLib.Connection.HostSettings)">
            <summary>
            Gets the cluster for host key.
            </summary>
            <param name="hostSettings">The host settings.</param>
            <returns>The cluster for the host, or the recovered alternate server list for the host.</returns>
            <remarks>
            This version of the method will attempt to retrieve an alternate server list using the legacy
            alternate server list file if a cluster can not be loaded.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerClusterCache.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerClusterCache.SessionManagerClusters">
            <summary>
            Gets or sets the SessionManagerClusters.
            </summary>
            <value>The user location mappings.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.SessionManagerInstance">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.Equals(ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.CompareTo(ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.op_GreaterThan(ININ.IceLib.Connection.Internal.SessionManagerInstance,ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.op_GreaterThanOrEqual(ININ.IceLib.Connection.Internal.SessionManagerInstance,ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.op_LessThan(ININ.IceLib.Connection.Internal.SessionManagerInstance,ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.op_LessThanOrEqual(ININ.IceLib.Connection.Internal.SessionManagerInstance,ININ.IceLib.Connection.Internal.SessionManagerInstance)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Internal.SessionManagerInstance.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.SessionManagerName">
            <summary>
            Gets or sets the name of the session manager name.
            </summary>
            <value>The name of the session manager.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.ServerName">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The name of the server.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.LocationId">
            <summary>
            Gets or sets the location id.
            </summary>
            <value>The location id.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.InstanceType">
            <summary>
            Gets or sets the session manager instance type.
            </summary>
            <value>The type of the session manager instance.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.SwitchType">
            <summary>
            Gets or sets the switch type.
            </summary>
            <value>The type of the switch.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.QualifiedNames">
            <summary>
            Gets or sets the qualified names.
            </summary>
            <value>The qualified names.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.AdditionalProperties">
            <summary>
            Gets or sets the additional properties.
            </summary>
            <value>The additional properties.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Internal.SessionManagerInstance.AdditionalPropertiesArray">
            <summary>
            Gets or sets the additional properties array.
            </summary>
            <value>The additional properties array.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Internal.SessionManagerInstanceType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Internal.SessionManagerInstanceType.OnServer">
            <summary>
            On Server Session Manager.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Internal.SessionManagerInstanceType.OffServer">
            <summary>
            Off Server Session Manager (OSSM).
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.Internal.SessionManagerInstanceType.RawEndPoint">
            <summary>
            Session Manager based on a raw end point.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.SrpAuthHelper">
            <summary>
            Used by an AuthSettings derived class to do the heavy lifting of the SRP6 password protocol
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Internal.SrpAuthHelper"/> object is internally by AuthSettings derived
            classes when a username/password is to be checked via the SRP6 challenge/response mechanism.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.SrpAuthHelper"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.SRPCreateInitialRequest(ININ.IceLib.Connection.Session,System.String,System.String)">
            <summary>
            Create the string compatible with the passwd element of the AuthSettings object for the initial request.
            </summary>
            <param name="session">The session for which to load any resources, if required.</param>
            <param name="UserName">The IC username to verify the password for.</param>
            <param name="plaintextPassword">The password for the specified UserName.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.SRPCreateResponse(ININ.IceLib.Connection.Session,System.String,System.String,System.String)">
            <summary>
            Create the string compatible with the passwd element of the AuthSettings object for the subsequent requests
            where this client side is handling a server's challenge packet.
            </summary>
            <param name="session">The session for which to load any resources, if required.</param>
            <param name="UserName">The IC username to verify the password for.</param>
            <param name="plaintextPassword">The password for the specified UserName.</param>
            <param name="challenge">The server's challenge packet.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.CalculateM2">
            <summary>
            Helper function to calculate the M2 value in the SRP6 protocol.
            </summary>
            For complete information, read the comments in the SetParameters() functions
            <returns>the bytes of the M2 value</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.CalculateM1(System.String,System.Byte[])">
            <summary>
            Helper function to calculate the M1 value in the SRP6 protocol.
            </summary>
            For complete information, read the comments in the SetParameters() functions
            <returns>the bytes of the M1 value</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeMap(System.UInt32)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeHashToString(System.Byte[])">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeZeroExtend(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeKeyMap(System.String)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeKeyMap(System.String,System.Boolean)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeMakePasswordHalf(System.String,System.String,System.Boolean)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
        </member>
        <member name="M:ININ.IceLib.Internal.SrpAuthHelper.MungeMakePassword(System.String,System.String)">
            <summary>
            Helper function to munge the clear text password into an obfuscated hash.
            </summary>
            This isn't necessary for SRP6 protocol, but it is needed because of how
            CIC stores user passwords.  Basically you cannot modify these MungeXXX functions
            unless the CIC system changes to match, this code is meant to directly mirror
            what CIC does.
            <returns>The munged password</returns>
        </member>
        <member name="T:ININ.IceLib.Connection.SwitchType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SwitchType.Unknown">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SwitchType.Switch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SwitchType.NoSwitch">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.LoadFlags">
            <summary>
            This bitmask is used specify which credentials to load from the set 
            of credentials that have been stored.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadFlags.None">
            <summary>
            No load flags were specified.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadFlags.Default">
            <summary>
            Indicates the default stored credentials.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadFlags.Application">
            <summary>
            Indicates the stored credentials for the specified application.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadFlags.OtherApplications">
            <summary>
            Indicates the stored credentials for applications other than the specified application.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadFlags.Any">
            <summary>
            Represents all the stored credentials.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.LoadPreference">
            <summary>
            Used to specify the order in which to try and retrieve stored credentials.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadPreference.None">
            <summary>
            No load preference was identified.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadPreference.Newest">
            <summary>
            Attempt to load the newest record first.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.LoadPreference.Application">
            <summary>
            Attempt to load the record associated with the specified application first.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib.Connection</b> namespace contains classes for connecting with Interaction Center.</para>
            <para>There are a number of classes within the <b>ININ.IceLib.Connection</b> namespace that provide support to the classes mentioned in the preceding summary. Example of the supporting classes are enumerations, event argument classes, and delegates used by events within classes.</para>
            <para>
            <b>Session.</b> The <see cref="T:ININ.IceLib.Connection.Session"/> object is the root of any IceLib connection with the IC server.
            It accepts various settings to describe the session and provides events when the connection state changes.
            </para>
            <para>
            <b>Host Settings.</b> The <see cref="T:ININ.IceLib.Connection.HostSettings"/> is used to specify
            the BridgeHost to which a Session should be established.
            </para>
            <para>
            <b>Authentication Settings.</b> There are a number of object classes that are used to specify
            authentication settings for the Session such as what IC User ID and Password to login with.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.AuthSettings"/>. Examples of authentication classes are:
            <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/>
            and <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/>,
            </para>
            <para>
            <b>Station Settings.</b> There are a number of object classes that are used to specify
            station settings for the Session such as what remote number is serving as the User's station.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.StationSettings"/>. Examples of station classes are:
            <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/>
            and <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/>,
            </para>
            <note>All "manager" classes found in the IceLib library are designed as
            <i>singletons</i>-classes instantiated only once. For example, to begin working with any of the functionality provided in
            the <c>ININ.IceLib.Interactions.InteractionsManager</c>, you must obtain the instance
            through a call to its <c>GetInstance</c> method.</note>
            <example>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            InteractionsManager interactionsManager = InteractionsManager.GetInstance(session);
            </code>
            </example>
            <ininStandardConnectionExample/>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Connection.PasswordUsage">
            <summary>
            Used to determine if the password should be saved to a file or sent to the server.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.PasswordUsage.None">
            <summary>
            Does not send the password.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.PasswordUsage.SendToServer">
            <summary>
            Sends password to the server without saving to a file.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.PasswordUsage.SaveToFile">
            <summary>
            Saves the password to a file.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.ReadyForInteractionsType">
            <summary>
            Specifies constants indicating at what time the application is ready to make or receive Interactions.
            </summary>
            <remarks>
            If <c>None</c> is specified, the application will have to explicitly call <see cref="M:ININ.IceLib.Connection.Session.SetReadyForInteractions"/> when it is ready to receive Interactions.
            </remarks>
            <icversion>3.0 SU 1</icversion>
        </member>
        <member name="F:ININ.IceLib.Connection.ReadyForInteractionsType.None">
            <summary>
            The application will be free to decide when it is ready to make or take Interactions.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ReadyForInteractionsType.AfterLogin">
            <summary>
            The application will be ready 8 seconds after login completes successfully.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ReadyForInteractionsType.AfterChangeStation">
            <summary>
            The application will be ready immediately after <see cref="M:ININ.IceLib.Connection.Session.ChangeStation(ININ.IceLib.Connection.StationSettings)"/> completes successfully.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteFileHelper">
            <summary>
            Utility class for transferring personal storage files.
            </summary>
            <remarks>
            <para>
            This helper class transfers personal storage files between local and remote locations. This
            is also used by IceLib for UnifiedMessaging operations involving Voicemail and Fax.
            </para>
            <para></para>
            <example>
            <code escaped="false" lang="C#">
            // This assumes a pre-existing session and local file.
            RemoteFileHelper remoteFileHelper = new RemoteFileHelper(session);
            string remoteFileName = remoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            remoteFileHelper.UploadFile(localFileName, remoteFileName);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteFileHelper"/> class.
            </summary>
            <param name="session">The session.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.NewLocalFileName">
            <summary>
            Creates an empty temporary file in the local temp directory.
            </summary>
            <remarks>
            NOTE: The returned file name has been created with zero size. Do not attempt to create a new file
            with the same name, as it will fail.
            </remarks>
            <returns>The full path to the created temporary file.</returns>
            <exception cref="T:System.IO.IOException">The file could not be created. Check the TMP, TEMP, and USERPROFILE environment variables, 
            the temporary directory permissions, and verify that there is enough free disk space.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.NewRemoteFileName(ININ.IceLib.Connection.ServerFileType)">
            <summary>
            Generates a valid and unique path and file name suitable for uploading to PersonalStorage on the server.
            </summary>
            <param name="serverFileType"><see cref="T:ININ.IceLib.Connection.ServerFileType"/> that is used to determine destination directory.</param>
            <returns>
            Path name to use for uploading a file of type "<see cref="T:ININ.IceLib.Connection.ServerFileType"/>".
            This file is not created by default (unlike <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.NewLocalFileName"/>).
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.CancelUpload(System.String)">
            <summary>
            Cancels a current file upload (based on the unique remote file name).
            </summary>
            <param name="remoteFileName">The unique server file name to cancel from uploading.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.CancelDownload(System.String)">
            <summary>
            Cancels a current file download (based on the unique remote file name).
            </summary>
            <param name="remoteFileName">The unique server file name to cancel from downloading.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String)">
             <overloads>
             Uploads a local file into the specified remote location.
             </overloads>
            
             <summary>
             Uploads a local file into the specified remote location, without performing audio codec conversion.
             </summary>
             <param name="localFileName">The local file name.</param>
             <param name="remoteFileName">The remote file name.</param>
             <returns><see langword="true"/> if the upload succeeded, <see langword="false"/> if it was cancelled.</returns>
             <remarks>
             Note that some types of server files are periodically purged for space reasons, so an uploaded
             file may not exist for all time in the future.
             </remarks>
             <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.IO.BinaryReader,System.Object)">
            <summary>
            Uploads a stream into the specified remote location, without performing audio codec conversion.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="reader">The reader.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><see langword="true"/> if the upload succeeded, <see langword="false"/> if it was cancelled.</returns>
            <remarks>
            Note that some types of server files are periodically purged for space reasons, so an uploaded
            file may not exist for all time in the future.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="remoteFileName"/>
            length is zero.</exception>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String,System.Boolean)">
            <summary>
            Uploads a local file into the specified remote location.
            </summary>
            <remarks>
            Note that some types of server files are periodically purged for space reasons, so an uploaded
            file may not exist for all time in the future.
            </remarks>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="convertAudio">Convert to acceptable audio format. If <see langword="false"/>, audio playback of this file may fail.</param>
            <returns><see langword="true"/> if the upload succeeded, <see langword="false"/> if it was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.IO.BinaryReader,System.Boolean,System.Object)">
            <summary>
            Uploads a stream into the specified remote location.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="reader">The reader.</param>
            <param name="convertAudio">Convert to acceptable audio format. If <see langword="false"/>, audio playback of this file may fail.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><see langword="true"/> if the upload succeeded, <see langword="false"/> if it was cancelled.</returns>
            <remarks>
            Note that some types of server files are periodically purged for space reasons, so an uploaded
            file may not exist for all time in the future.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="remoteFileName"/>
            length is zero.</exception>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.String,System.Object)">
            <summary>
            Downloads a remote file and saves it to the specified local location.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="localFileName">The local file name.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><see langword="true"/> if the file was fully downloaded, <see langword="false"/> if the download was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.IO.BinaryWriter,System.Object)">
            <summary>
            Downloads a remote file and saves it to the specified stream.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="writer">The writer.</param>
            <param name="userState">An object representing state for all events fired during this operation.</param>
            <returns><see langword="true"/> if the file was fully downloaded, <see langword="false"/> if the download was cancelled.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A file name parameter had 0-length.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.RemoteFileHelper.UploadProgressChanged">
            <summary>
            Occurs when the progress level changes for an uploading file.
            </summary>
            <remarks>
            <para>This event will only occur if a upload has been started. (See 
            <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String)"/> or 
            <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.UploadFile(System.String,System.String,System.Boolean)"/>.)</para>
            <para>The UserData property of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> will contain 
            the local file name specified in order to track multiple concurrent uploads.</para>
            <note>All event handlers should be added before the upload is started.</note>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.RemoteFileHelper.DownloadProgressChanged">
            <summary>
            Occurs when the progress level changes for a downloading file.
            </summary>
            <remarks>
            <para>This event will only occur if a download has been started. (See 
            <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.String,System.Object)"/> or 
            <see cref="M:ININ.IceLib.Connection.RemoteFileHelper.DownloadFile(System.String,System.IO.BinaryWriter,System.Object)"/>.)</para>
            <para>The UserData property of the 
            <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> will contain  the
            remote file name specified in order to track multiple concurrent downloads.
            </para>
            <note>All event handlers should be added before the download is started.</note>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteNumberSettings">
            <summary>
            Passed to a Session in order to specify a remote number connection.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> object is used to specify
            dynamic remote workstation settings.  This establishes a Session via a remote phone number,
            but not associated with a particular IC station.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.Connection.StationSettings">
            <summary>
            Passed to a Session in order to specify a station.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationSettings"/> object serves as a base class
            for objects that specify station settings.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class with default settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor(ININ.IceLib.Connection.SupportedMedia)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class with media settings.
            </summary>
            <remarks>
            This constructor is called by derived class constructors to initialize state in this type.
            </remarks>
            <param name="supportedMedia">The media types supported by this station.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exclude/><summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationSettings"/> class 
            given a dictionary containing values for the class members.
            </summary>
            <param name="parameters">The parameters.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="parameters"/> does not have an entry for mediaflags.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.StationSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.StationSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="P:ININ.IceLib.Connection.StationSettings.SupportedMedia">
            <summary>
            Gets or sets the SupportedMedia.
            </summary>
            <value>The supported media.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.SupportedMedia.None"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StationSettings.StationConnectionMode">
            <summary>
            Gets the station connection mode, which controls when the user is logged out of the station.
            </summary>
            <value>The station connection mode.</value>
            <seealso cref="M:ININ.IceLib.Connection.Session.SetStationConnectionMode(ININ.IceLib.Connection.StationConnectionMode,System.Int32)"/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationSettings.StationId">
            <summary>
            Gets a StationId to best represent the <see cref="T:ININ.IceLib.Connection.StationSettings"/>.
            </summary>
            <value>The station ID.</value>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.#ctor(ININ.IceLib.Connection.SupportedMedia,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> class with station settings.
            </summary>
            <param name="supportedMedia">The media types supported by this station.</param>
            <param name="remoteNumber">The remote number.</param>
            <param name="persistentConnection">Specifies whether the remote connection is persistent.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentException">A required property was not found in <param name="parameters"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteNumberSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.RemoteNumber">
            <summary>
            Gets or sets the RemoteNumber.
            </summary>
            <value>The remote number.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteNumberSettings.PersistentConnection">
            <summary>
            Gets or sets the PersistentConnection.
            </summary>
            <value><see langword="true"/> if a persistent connection; otherwise, <see langword="false"/>.</value>
            <remarks>
            The default is <see langword="false"/>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.RemoteStationSettings">
            <summary>
            Passed to a Session in order to specify a remote station.
            </summary>
            <remarks>
            <para>
            Use the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> object to specify
            remote workstation settings.  It establishes a Session against the specified station,
            but via a remote phone number.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor(System.String,ININ.IceLib.Connection.SupportedMedia,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class with station settings.
            </summary>
            <param name="workstation">The workstation.</param>
            <param name="supportedMedia">The media types supported by this station.</param>
            <param name="remoteNumber">An optional remote number. (Can be <see langword="null"/>.)</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor(System.String,ININ.IceLib.Connection.SupportedMedia,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> class with station settings.
            </summary>
            <param name="workstation">The workstation.</param>
            <param name="supportedMedia">The media types supported by this station.</param>
            <param name="remoteNumber">An optional remote number. (Can be <see langword="null"/>.)</param>
            <param name="persistentConnection">Specifies whether the remote connection is persistent.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentException">A required property was not found in <param name="parameters"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RemoteStationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.Workstation">
            <summary>
            Gets or sets the Workstation.
            </summary>
            <value>The workstation.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.RemoteNumber">
            <summary>
            Gets or sets the optional RemoteNumber.
            </summary>
            <value>The remote number.</value>
            <remarks>
            If the value is set to <see langword="null"/>
            it will automatically default to an empty string.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.RemoteStationSettings.PersistentConnection">
            <summary>
            Gets or sets the PersistentConnection.
            </summary>
            <value><see langword="true"/> if a persistent connection; otherwise, <see langword="false"/>.</value>
            <remarks>
            The default is <see langword="false"/>.
            </remarks>
            <exclude/>
        </member>
        <member name="T:ININ.IceLib.Connection.RequestTimeoutException">
            <summary>
            The exception that is thrown for IceLib when a server operation times out.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested server operation times out.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
            <icversion>4.0 SU 3</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with a specified error message.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with a 
            specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> class with a 
            specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.RequestTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.RestrictedAuthSettings">
            <summary>
            Legacy authentication passed to a Session in order to allow a restricted session (e.g. to download updates).
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> object is used to specify
            restricted user authentication settings.  This is used when a minimal Session is needed,
            perhaps to get the server time offset, but it is rarely used.  In the future, it could
            be used by extended Session functionality.
            </para>
            <example>
            <code escaped="false" lang="C#">
            // No username or password is required for these restricted sessions.
            RestrictedAuthSettings authSettings = new RestrictedAuthSettings();
            Session session = new Session();
            session.Connect(..., authSettings, ...);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.RestrictedAuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.RestrictedAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="T:ININ.IceLib.Connection.ServerFileType">
            <summary>
            Specifies constants indicating where to store files in PersonalStorage on the server.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.RemoteFileHelper"/> to specify a remote file type.
            </remarks>
            <example>
            The following example demonstrates creation of a remote file name.
            <code lang="C#">
            string remoteFileName = RemoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Other">
            <summary>The destination for this file is unable to be determined based on file type, use the default destination.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Fax">
            <summary>The destination for this file is the location for Fax files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Voicemail">
            <summary>The destination for this file is the location for Voicemail files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Email">
            <summary>The destination for this file is the location for Email files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.Chat">
            <summary>The destination for this file is the location for Chat files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.ResponseManagementDocument">
            <summary>The destination for this file is the location for Response Managment documents.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.ApplicationSettings">
            <summary>The destination for this file is the location for Application Settings.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.ImageResource">
            <summary>The destination for this file is the location for Image resources.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.ProblemReport">
            <summary>The destination for this file is the location for Problem Report files.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.ServerFileType.ClientTemplate">
            <summary>The destination for this file is the location for Client templates.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.Session">
            <summary>
            Represents the connection Session with the Interaction Center server.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.Session"/> is the root of any IceLib connection 
            with the IC server. It accepts various settings to describe the session and provides events when 
            there is a change in connection settings or connection state.
            </para>
            <para>
            <b>Host Settings.</b> The <see cref="T:ININ.IceLib.Connection.HostSettings"/> is used to specify
            the BridgeHost to which a Session should be established.
            </para>
            <para>
            <b>Authentication Settings.</b> There are a number of object classes that are used to specify
            authentication settings for the Session such as what IC User ID and Password to login with.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.AuthSettings"/>. Examples of authentication classes are:
            <see cref="T:ININ.IceLib.Connection.ICAuthSettings"/>
            and <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/>,
            </para>
            <para>
            <b>Station Settings.</b> There are a number of object classes that are used to specify
            station settings for the Session such as what remote number is serving as the User's station.
            All such objects inherit from <see cref="T:ININ.IceLib.Connection.StationSettings"/>. Examples of station classes are:
            <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/>
            and <see cref="T:ININ.IceLib.Connection.RemoteStationSettings"/>,
            </para>
            <ininStandardConnectionExample/>
            <example>
            <note>All "manager" classes found in the IceLib library are designed as
            <i>singletons</i>-classes instantiated only once. For example, to begin working with any of the functionality provided in
            the <c>ININ.IceLib.Interactions.InteractionsManager</c>, you must obtain the instance
            through a call to its <c>GetInstance</c> method.</note>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            InteractionsManager interactionsManager = InteractionsManager.GetInstance(session);
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Session"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.Session"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the Session.
            </summary>
            <param name="disposing">Indicates whether the object is in the process of being disposed of.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)">
            <summary>
            Connects the session using the specified settings.
            </summary>
            <remarks>
            <para>For security reasons a user can only be logged in to one station at a time.
            If the user logs in to a different station, the system drops the original station 
            connection. Multiple instances of client applications may be run on the same 
            machine using different user logins and the same station.</para>
            
            <para>If a user who is logged in via Interaction Client .NET Edition tries, for example, 
            to connect using Interaction Client Web Edition, they will receive a message at the original 
            station such as: "Your connection has been dropped due to a subsequent login on a different station".</para>
            </remarks>
            <param name="sessionSettings">The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> for the connection.</param>
            <param name="hostSettings">The <see cref="T:ININ.IceLib.Connection.HostSettings"/> for the connection.</param>
            <param name="authSettings">The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> for the connection.</param>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The connection was not established.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">A required license is not available.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously connects the session using the specified settings.
            </summary>
            <param name="sessionSettings">The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> for the connection.</param>
            <param name="hostSettings">The <see cref="T:ININ.IceLib.Connection.HostSettings"/> for the connection.</param>
            <param name="authSettings">The <see cref="T:ININ.IceLib.Connection.AuthSettings"/> for the connection.</param>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <para>For security reasons a user can only be logged in to one station at a time.
            If the user logs in to a different station, the system drops the original station 
            connection. Multiple instances of client applications may be run on the same 
            machine using different user logins and the same station.</para>
            <para>If a user who is logged in via Interaction Client .NET Edition tries, for example, 
            to connect using Interaction Client Web Edition, they will receive a message at the original 
            station such as: "Your connection has been dropped due to a subsequent login on a different station".</para>
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.IsFatalConnectionError(System.Exception)">
            <exclude/>
            <summary>
            Determines whether the specified exception indicates that the connection will fail on all servers.
            </summary>
            <param name="ex">The exception.</param>
            <returns>
            	<see langword="true"/> if the connection would fail if attempted on the alternate servers too; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.IsConnectionError(System.Int32,System.Int32@)">
            <exclude/>
            <summary>
            Determines whether the specified exception is a connection error.
            </summary>
            <param name="error">The exception.</param>
            <param name="connectionExceptionType">the type of the connection exception.</param>
            <returns>
            	<see langword="true"/> if the error is a connection error; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.LoginToBridgeClient(ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy,ININ.IceLib.Connection.HostEndpoint,System.Boolean)">
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.InternalReconnectImpl(System.Boolean)">
            <exception cref="T:System.ObjectDisposedException">This session is already disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CleanupBridgeClient">
            <summary>
            Call this to clean up the internal <see cref="T:ININ.ThinBridge.PooledIPBridgeClient"/> instance.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetAutoReconnectInterval(System.Int32)">
            <summary>
            Sets the amount of time (in seconds) to wait between reconnection attempts when the connection has been lost.
            </summary>
            <param name="interval">The time, in seconds, to wait between reconnection attempts.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetAutoReconnectInterval(System.Int32,System.Int32)">
            <summary>
            Sets the amount of time (in seconds) to wait between reconnection attempts when the connection has been lost,
            allowing a difference between the amount of time before an initial reconnect and 
            all subsequent reconnect attempts.
            </summary>
            <param name="initialInterval">The time, in seconds, to wait before performing an initial reconnection attempt.</param>
            <param name="subsequentIntervals">The time, in seconds, to wait between all reconnection attempts after the first reconnection attempt has occurred.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">An invalid interval parameter value was used.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.Disconnect">
            <summary>
            Disconnects the Session.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The connection could not be disconnected.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.DisconnectAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously disconnects the Session.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ChangeStationImpl(ININ.IceLib.Connection.StationSettings)">
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ChangeStation(ININ.IceLib.Connection.StationSettings)">
            <summary>
            Changes the station for the session.
            </summary>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <remarks>
            <para>For security reasons a user can only be logged in to one station at a time.
            If the user logs in to a different station, the system drops the original station 
            connection. Multiple instances of client applications may be run on the same 
            machine using different user logins and the same station.</para>
            <para>If a user who is logged in via Interaction Client .NET Edition tries, for example, 
            to connect using Interaction Client Web Edition, they will receive a message at the original 
            station such as: "Your connection has been dropped due to a subsequent login on a different station".</para>
            <ininHowWatchesWork/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ChangeStationAsync(ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously changes the station for the session.
            </summary>
            <param name="stationSettings">The <see cref="T:ININ.IceLib.Connection.StationSettings"/> for the connection.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <para>For security reasons a user can only be logged in to one station at a time.
            If the user logs in to a different station, the system drops the original station 
            connection. Multiple instances of client applications may be run on the same 
            machine using different user logins and the same station.</para>
            <para>If a user who is logged in via Interaction Client .NET Edition tries, for example, 
            to connect using Interaction Client Web Edition, they will receive a message at the original 
            station such as: "Your connection has been dropped due to a subsequent login on a different station".</para>
            <ininAsyncMethodNote/>
            <ininHowWatchesWork/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetStationConnectionMode(ININ.IceLib.Connection.StationConnectionMode,System.Int32)">
            <summary>
            Sets the station connection mode for the session, which controls when the user is logged out of the station.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationConnectionMode"/> controls whether the user remains connected to the station,
            or is logged out of the station when the IceLib session is disconnected.  See the documentation for
            <see cref="T:ININ.IceLib.Connection.StationConnectionMode"/> for a description of each mode.
            </para>
            <para>
            For cases where the station connection remains after the IceLib Session disconnects, the <paramref name="applicationGroupId"/>
            is used to group the station connections made by the specific client application so that the application can manage them 
            from subsequent IceLib sessions.
            </para>
            </remarks>
            <param name="stationConnectionMode">The station connection mode.</param>
            <param name="applicationGroupId">The application group ID.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetStationConnectionModeAsync(ININ.IceLib.Connection.StationConnectionMode,System.Int32,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the station connection mode for the session, which controls when the user is logged out of the station.
            </summary>
            <param name="stationConnectionMode">The station connection mode.</param>
            <param name="applicationGroupId">The application group ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetReadyForInteractionsImpl">
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetReadyForInteractions">
            <summary>
            Signals the application's readiness to make or receive Interactions.
            </summary>
            <remarks>
            <para>This need only be called if the value of <see cref="P:ININ.IceLib.Connection.SessionSettings.ReadyForInteractions"/> requires it.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.ReadyForInteractions"/>
            <icversion>3.0 SU 1</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SetReadyForInteractionsAsync(System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously signals the application's readiness to make or receive Interactions.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <para>This need only be called if the value of <see cref="P:ININ.IceLib.Connection.SessionSettings.ReadyForInteractions"/> requires it.</para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.ReadyForInteractions"/>
            <icversion>3.0 SU 1</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetAllowableAuthentications(ININ.IceLib.Connection.HostSettings)">
            <summary>
            Gets the allowable authentication types.
            </summary>
            <remarks>
            As a 3rd Party API consumer, this method will not need to be invoked. 
            Interaction Administrator can be used to configure which authentication types are allowed to be used to connect. 
            Those types will be presented in the application login options.
            </remarks>
            <param name="hostSettings">The <see cref="T:ININ.IceLib.Connection.HostSettings"/> for the connection.</param>
            <returns>An <see cref="T:ININ.IceLib.Connection.AllowableAuthentications"/> object defining the allowable authentication types.</returns>
            <exception cref="T:System.ArgumentNullException">HostSettings is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">There was an error communicating with the server.</exception>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetSessionSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.SessionSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetHostSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.HostSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.HostSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetAuthSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.AuthSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.AuthSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetStationSettings">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.StationSettings"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.StationSettings"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.GetStationInfo">
            <summary>
            Gets a copy of the <see cref="T:ININ.IceLib.Connection.StationInfo"/>.
            </summary>
            <returns>The Session's <see cref="T:ININ.IceLib.Connection.StationInfo"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CreateMessage(System.Int64)">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The event ID to associate with the Message being created.</param>
            <returns>The newly created Message for use with this Session.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessageNoResponse(ININ.ThinBridge.Message)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessageAndThrowIfError(ININ.ThinBridge.Message)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessage(ININ.ThinBridge.Message)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessageAndThrowIfError``2(``0)">
            <exclude/><summary>For internal use only.</summary>
            <param name="request">The Request to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SendMessage``2(``0)">
            <exclude/><summary>For internal use only.</summary>
            <param name="request">The Message to be sent.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.BeginSendMessage(ININ.ThinBridge.Message,System.AsyncCallback,System.Object)">
            <exclude/><summary>For internal use only.</summary>
            <param name="message">The Message to be sent.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state"><ininAsyncStateParam/></param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.EndSendMessage(System.IAsyncResult)">
            <exclude/><summary>For internal use only.</summary>
            <param name="asyncResult">
            An IAsyncResult that stores state information and any user defined data for this asynchronous operation.
            </param>
            <returns>The Message that we returned.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">
            BridgeClient is <see langword="null"/>. Session is either in the disconnected state or it is not yet connected.
            </exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.RegisterMessageHandler(System.Int64,System.EventHandler{ININ.IceLib.Internal.MessageReceivedEventArgs})">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The message ID with which to associate this handler.</param>
            <param name="eventHandler">The message received event delegate.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.DeregisterMessageHandler(System.Int64,System.EventHandler{ININ.IceLib.Internal.MessageReceivedEventArgs})">
            <exclude/><summary>For internal use only.</summary>
            <param name="eventId">The message ID with which to associate this handler.</param>
            <param name="eventHandler">The message received event handler.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.LocalTimeToUtcString(System.DateTime)">
            <exclude/><summary>Converts the local time to a UTC date string for the server, adjusting for clock skew.</summary>
            <param name="localTime">The local time.</param>
            <returns>The UTC date string.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.UtcStringToLocalTime(System.String)">
            <exclude/><summary>Converts the UTC date string from the server to local time, adjusting for clock skew.</summary>
            <param name="utcDateTime">The UTC date string.</param>
            <returns>The local time.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.HandleRequestKeepAlivePings(ININ.ThinBridge.Message)">
            <exception cref="T:System.Exception"><c>Exception</c>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.CheckSession">
            <summary>
            Verify that there is a connected session.
            </summary>
            <remarks>
            This helper can be used to provide early detection of an invalid connection.  If the Session does not 
            have a connection an exception will be thrown.
            </remarks>
            <exception cref="T:ININ.IceLib.Connection.SessionDisconnectedException">The Session does not have a valid connection.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.OnStationSettingsChanged(System.EventArgs)">
            <exception cref="T:System.Exception">An event handler threw an exception.</exception>
        </member>
        <member name="E:ININ.IceLib.Connection.Session.ConnectionStateChanged">
            <summary>
            Occurs when the Session's <see cref="P:ININ.IceLib.Connection.Session.ConnectionState"/> changes.
            </summary>
            <remarks>
            This event will only occur while the session is connected. (See <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> and <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.)
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Session.StationSettingsChanged">
            <summary>
            Occurs when the Session's <see cref="T:ININ.IceLib.Connection.StationSettings"/> changes.
            </summary>
            <remarks>
            This event will only occur while the session is connected. (See <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> and <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.)
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            </remarks>
        </member>
        <member name="E:ININ.IceLib.Connection.Session.EffectiveStationChanged">
            <summary>
            Occurs when the Session user's <see cref="P:ININ.IceLib.Connection.Session.EffectiveStation"/> changes.
            </summary>
            <remarks>
            This event will only occur while the session is connected. (See <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> and <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.)
            <note>All event handlers should be added before calling
            <see cref="M:ININ.IceLib.Connection.Session.Connect(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.ConnectAsync(ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.ComponentModel.AsyncCompletedEventHandler,System.Object)"/>.</note>
            </remarks>
            <icversion>4.0</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AutoReconnectEnabled">
            <summary>
            Enables or disables automatic reconnection attempts when the connection is lost.
            </summary>
            <value>
            	<see langword="true"/> if auto reconnect is enabled; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AutoReconnecting">
            <summary>
            Identifies whether an AutoReconnect is in the process of occurring.
            </summary>
            <value><see langword="true"/> if auto reconnecting; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.IsEncrypted">
            <summary>
            Returns whether the current connection is encrypted.
            </summary>
            <value>
            	<see langword="true"/> if this instance is encrypted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.Endpoint">
            <summary>
            Returns a new <see cref="T:ININ.IceLib.Connection.HostEndpoint"/> containing the details of the currently connected <see cref="T:ININ.IceLib.Connection.HostEndpoint"/>.
            </summary>
            <value>The endpoint.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionState">
            <summary>
            Gets the current <see cref="T:ININ.IceLib.Connection.ConnectionState"/> of the Session.
            </summary>
            <value>The connection state.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionStateReason">
            <summary>
            Gets the current <see cref="T:ININ.IceLib.Connection.ConnectionStateReason"/> of the Session.
            </summary>
            <value>The connection state reason.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ConnectionStateMessage">
            <summary>
            Gets the most recent text description of the state of the Session.
            </summary>
            <value>The connection state message.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionId">
            <summary>
            The internal Session ID.
            </summary>
            <value>The session ID.</value>
            <remarks>
            This value can be used for diagnostic purposes.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.RawSessionId">
            <summary>
            The internal Session ID as a UInt32.
            </summary>
            <value>The session ID.</value>
            <remarks>
            This value can be used for diagnostic purposes.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SupportedMedia">
            <summary>
            Gets the supported media flags (<see cref="T:ININ.IceLib.Connection.SupportedMedia"/>).
            </summary>
            <value>The supported media.</value>
            <remarks>This value is updated when <see cref="M:ININ.IceLib.Connection.Session.ChangeStation(ININ.IceLib.Connection.StationSettings)"/> or <see cref="M:ININ.IceLib.Connection.Session.SetStationConnectionMode(ININ.IceLib.Connection.StationConnectionMode,System.Int32)"/> is called.</remarks>
            <icversion>4.0 SU 3, 3.0 SU 16</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.EffectiveStation">
            <summary>
            Gets the effective station that the user is logged in to.
            <remarks>
            This value is initially set to <see cref="F:System.String.Empty"/>, and will be updated after
            the session user logs into a station.
            </remarks>
            </summary>
            <value>The effective station.</value>
            <icversion>4.0</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.Instructions">
            <summary>
            Specifices instructions about how the message should be handled.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.UserId">
            <summary>
            Gets the ID of the logged in IC user.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerName">
            <summary>
            Gets the relative distinguished name (RDN) of the SessionManager to which the session is connected.
            </summary>
            <value>The RDN of the session manager.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerNameFQDN">
            <summary>
            Gets the fully qualified domain name (FQDN) of the SessionManager to which the session is connected.
            </summary>
            <value>The FQDN of the session manager.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerVersion">
            <summary>
            Gets the version number of the SessionManager to which the session is connected (if available).
            </summary>
            <value>The session manager version.</value>
            <remarks>
            Note that this version info wasn't available until version 2.4 Feature Pack 1.  When connecting
            to SessionManagers of an earlier version the string will be empty. This version is the file version of the session manager.
            Please refer to <see cref="P:ININ.IceLib.Connection.Session.InteractionCenterReleaseVersion"/> and <see cref="P:ININ.IceLib.Connection.Session.SessionManagerReleaseVersion"/> to know the major, minor and SU versions of the IC server and Session Manager respectively.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.InteractionCenterReleaseVersion">
            <summary>
            Gets the release version information of the Interaction Center to which the session is connected (if available).
            </summary>
            <value>The Interaction Center version.</value>
            <icversion>3.0 SU 11</icversion>
            <remarks>
            This property contains major version, minor version and SU version.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.SessionManagerReleaseVersion">
            <summary>
            Gets the release version information of the Session Manager to which the session is connected (if available).
            </summary>
            <value>The Session Manager version.</value>
            <icversion>3.0 SU 11</icversion>
            <remarks>
            This property contains major version, minor version and SU version.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ICServer">
            <summary>
            Gets the name of the IC server to which the session is connected.
            </summary>
            <value>The IC server.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.CustomerName">
            <summary>
            Gets the name of the customer to whom IC is licensed.
            </summary>
            <value>The name of the customer.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.UserLogOnId">
            <summary>
            Gets the log on ID of the logged in IC user.
            </summary>
            <value>The log on ID.</value>
            <icversion>4.0</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.UserAgreement">
            <summary>
            Gets the user agreement text.
            </summary>
            <value>The user agreement.</value>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.DisplayName">
            <summary>
            Gets the display name for the logged in user.
            </summary>
            <returns>The logged in user's display name or <see cref="F:System.String.Empty"/> if the display name is not 
            available.</returns>
            <icversion>4.0 SU 3</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.CultureInfo">
            <summary>
            Gets the culture info, as specified by <see cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage">SessionSettings.IsoLanguage</see>.
            </summary>
            <value>The culture info.</value>
            <remarks>
            This value is used to load IceLib's string resources.  If <see cref="P:ININ.IceLib.Connection.Session.AttemptToSetThreadCulture"/>
            is set to <see langword="true"/>, this value will also be applied to IceLib's background threads'
            <see cref="P:System.Threading.Thread.CurrentUICulture"/>.
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.AttemptToSetThreadCulture"/>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage">SessionSettings.IsoLanguage</seealso>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AttemptToSetThreadCulture">
            <summary>
            Gets or sets a value indicating whether to attempt to set IceLib's background threads' <see cref="P:System.Threading.Thread.CurrentUICulture"/>.
            </summary>
            <value>
            	<see langword="true"/> if should attempt to set thread culture; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>This is an optional convenience that simplifies the work of any custom applications that require their threads'
            <see cref="P:System.Threading.Thread.CurrentUICulture"/> to be set. IceLib does not rely on <see cref="P:ININ.IceLib.Connection.Session.AttemptToSetThreadCulture"/> for whether it should
            load its string resources, but does use <see cref="P:ININ.IceLib.Connection.Session.CultureInfo"/>.</para>
            <para>
            If set to <see langword="true"/>, IceLib will attempt to set the <see cref="P:System.Threading.Thread.CurrentUICulture"/> of its
            background threads to the value in <see cref="P:ININ.IceLib.Connection.Session.CultureInfo"/> (as specified by <see cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage">SessionSettings.IsoLanguage</see>).
            <note>The background threads' <see cref="P:System.Threading.Thread.CurrentCulture"/> will never be set by IceLib.</note>
            </para>
            <para>This setting defaults to <see langword="true"/>.</para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.CultureInfo"/>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.ClockSkew">
            <summary>
            Gets the clock skew.
            </summary>
            <value>The clock skew.</value>
            <remarks>
            <para>The clock skew accounts for slight differences in the clock adjustment of the local client
            versus the IC server.  It does not account for timezone differences.</para>
            <para>This value is exposed to allow conversion of times between client and server for custom
            attributes or other values outside of the control of IceLib itself.</para>
            <para>The relationship of clock skew to client and server times can be described as follows:
            	<list type="bullet">
            	<item><description>[Clock Skew] = [Server Time Now in Local Time] - [Client Time Now]</description></item>
            	<item><description>[IceLib Client Time] = [Server Time in Local Time] - [Clock Skew] - [AdditionalUtcOffset]</description></item>
            	<item><description>[Server Time in Local Time] = [IceLib Client Time] + [Clock Skew] + [AdditionalUtcOffset]</description></item>
            	</list>
            </para>
            <para>As shown, IceLib DateTime values are also affected by the <see cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>, if one is specified.</para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset">
            <summary>
            Gets or sets an additional clock skew for the session.
            </summary>
            <value>The additional clock skew.</value>
            <remarks>
            <para>
            The default is a time span of 0. This can be changed to perform a "proxy" time adjustment as if the user 
            were logging in from another machine. For instance, a web server might want to artificially adjust time to 
            match where the web browser is running.
            </para>
            <para>This time span will be added into all IceLib <see cref="T:System.DateTime"/> values:
            	<list type="bullet">
            	<item><description>[Clock Skew] = [Server Time Now in Local Time] - [Client Time Now]</description></item>
            	<item><description>[IceLib Client Time] = [Server Time in Local Time] - [Clock Skew] - [AdditionalUtcOffset]</description></item>
            	<item><description>[Server Time in Local Time] = [IceLib Client Time] + [Clock Skew] + [AdditionalUtcOffset]</description></item>
            	</list>
            </para>
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.MachineName"/>
        </member>
        <member name="P:ININ.IceLib.Connection.Session.CertificateCache">
            <summary>
            Gets the session manager certificate cache.
            </summary>
            <value>The certificate cache.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.Session.ConnectionExceptionComparer">
            <exclude/>
            <summary>
            Nested class to do a custom comparison of exceptions encountered while connection.
            The WORST errors will be LESS THAN other errors so that they will be at the front of any ordered lists.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.ConnectionExceptionComparer.GetPriority(ININ.IceLib.IceLibException)">
            <exclude/>
            <summary>
            Gets the priority of the exception.
            </summary>
            <param name="iceEx">The exception.</param>
            <returns>The priority of the exception.  Lower numbers are higher priority.</returns>
        </member>
        <member name="T:ININ.IceLib.Connection.Session.SystemEventsMonitor">
            <summary>
            Helper class to allow for monitoring of static <see cref="T:Microsoft.Win32.SystemEvents"/> by multiple WeakReferenced Sessions.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SystemEventsMonitor.RegisterSession(ININ.IceLib.Connection.Session)">
            <summary>
            Registers the session.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.Session.SystemEventsMonitor.DeRegisterSession(ININ.IceLib.Connection.Session)">
            <summary>
            Des the register session.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="T:ININ.IceLib.Connection.SessionDisconnectedException">
            <summary>
            The exception that is thrown for IceLib when a server operation is requested while the Session is disconnected.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a server operation is requested
            while the Session is disconnected.  If the Session is connected, this SessionDisconnectedException will not
            be thrown, even if the request times out.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with a specified error message.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <i>innerException</i> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with a 
            specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionDisconnectedException"/> class with a 
            specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionDisconnectedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.SessionSettings">
            <summary>
            Passed to a Session in order to configure a session.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.SessionSettings"/> object is used to specify
            overall settings such as the connecting application's name or a specific ISO language
            to use.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.SessionSettings"/> class with additional settings.
            </summary>
            <param name="customSettings">Additional settings to be passed through during login.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">A parameter value is invalid.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.SessionSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.SessionSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><see langword="true"/> if successful.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Set the name-value pairs that should be passed.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="includeCustomSettings">if set to <see langword="true"/>, persists all custom settings.</param>
            <returns><see langword="true"/> if successful.</returns>
            <remarks>
            This version of the call is used by <see cref="T:ININ.IceLib.Connection.CommonCredentials"/> to prevent
            persisting the license requirements of an application
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Connection.SessionSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationName">
            <summary>
            Gets or sets the Application Name for the session.
            </summary>
            <value>The name of the application.</value>
            <remarks>
            <para>
            This setting identifies the application that created the Session.  
            (Defaults to the name of the current process.)
            </para>
            <para>
            The value will show up in the Supervisor view for SessionManager.  It will also be used for future 
            associations of plug-ins to applications.  So, please set it to a constant value representing the 
            application.
            </para>
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationProfileName">
            <summary>
            Gets or sets the Application Profile Name for the session.
            </summary>
            <value>The profile name for the application.</value>
            <remarks>
            <para>
            See the <see cref="T:ININ.IceLib.Connection.Extensions.CustomProfile"/> object to see how this value affects how Custom Profiles work.
            </para>
            </remarks>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage">
            <summary>
            Gets or sets the ISO culture name for the session.
            </summary>
            <remarks>
            The ISO culture name is in the format "&lt;languagecode2&gt;-&lt;country/regioncode2&gt;"
            and defaults to <c>System.Globalization.CultureInfo.CurrentUICulture.Name</c>.
            Set this value to control the language of strings returned from Session Manager.
            </remarks>
            <value>The ISO language.</value>
            <seealso cref="P:ININ.IceLib.Connection.Session.CultureInfo"/>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.MachineName">
            <summary>
            Gets or sets the MachineName for the session.
            </summary>
            <value>The machine name.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>. This can be changed to perform a "proxy" 
            login as if the user were logging in from another machine. For instance, a web server might use a proxy 
            login by specifying the machine name where the web browser is running.
            </remarks>
            <seealso cref="P:ININ.IceLib.Connection.Session.AdditionalUtcOffset"/>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ClassOfService">
            <summary>
            Gets or sets the ClassOfService for the session.
            </summary>
            <value>The class of service.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.ClassOfService.HighlyAvailable"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception occurs when the specified class of service is not from the 
            <see cref="T:ININ.IceLib.Connection.ClassOfService"/> enumeration.
            </exception>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.DeviceType">
            <summary>
            Gets or sets the DeviceType for the session.
            </summary>
            <value>The device type.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.DeviceType.Win32"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified device type is not from the <see cref="T:ININ.IceLib.Connection.DeviceType"/> enumeration.
            </exception>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ReadyForInteractions">
            <summary>
            Gets or sets application's readiness to make or receive Interactions.
            </summary>
            <value>The application's readiness to make or receive Interactions.</value>
            <remarks>
            The default is <see cref="F:ININ.IceLib.Connection.ReadyForInteractionsType.AfterLogin"/> | 
            <see cref="F:ININ.IceLib.Connection.ReadyForInteractionsType.AfterChangeStation"/>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is not from the <see cref="T:ININ.IceLib.Connection.ReadyForInteractionsType"/> enumeration.
            </exception>
            <icversion>3.0 SU 1</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationTraceId">
            <summary>
            Gets or sets the Application Trace ID for this session.
            </summary>
            <value>The Application Trace ID.</value>
            <remarks>
            <para>This setting identifies the application that created this Session for unified tracing purposes.</para>
            <para>The value will show up in the Tracing section of Interaction Administrator.</para>
            <note>
            This setting is primarily used for internal Interactive Intelligence applications to associate themselves with the elevated trace levels configured in Interaction Administrator.
            </note>
            </remarks>
            <icversion>3.0 SU 11, 4.0 SU 2</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.License">
            <summary>
            Gets or sets the license for this session.
            </summary>
            <remarks>
            If the license specified is not available, the session will not connect.
            </remarks>
            <value>The license or <see langword="null"/> to indicate license is not set.</value>
            <icversion>4.0</icversion>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationHostComputerName">
            <summary>
            Gets the name of the computer that is hosting the Icelib application.
            </summary>
            <remarks>
            The application host computer name is the name of the computer that is hosting the Icelib application.
            This property applies specifically to the applications that host several client sessions.
            </remarks>
            <value>The Application host name.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationHostFileVersion">
            <summary>
            Gets the application host file version for the session.
            </summary>
            <remarks>
            The application host file version is the version of the executable that is hosting the Icelib application.
            </remarks>
            <value>The Application host file version.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.ApplicationHostDisplayVersion">
            <summary>
            Gets the application host display version for the session.
            </summary>
            <remarks>
            The application host display version is the user-friendly version of the executable that is hosting the Icelib application.
            </remarks>
            <value>The Application host file version.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.IcelibFileVersion">
            <summary>
            Gets the IceLib file version for the session.
            </summary>
            <remarks>
            The IceLib file version is the version of the ININ.Icelib.dll
            </remarks>
            <value>The IceLib file version.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.IcelibDisplayVersion">
            <summary>
            Gets the IceLib display version for the session.
            </summary>
            <remarks>
            The IceLib display version is the user-friendly file version of ININ.Icelib.dll.
            </remarks>
            <value>The IceLib display version.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.SessionSettings.CustomSettings">
            <summary>
            Gets a collection which can be used to set custom parameters for the Session.
            </summary>
            <value>The custom settings.</value>
        </member>
        <member name="T:ININ.IceLib.Connection.StationConnectionMode">
            <summary>
            Used to change the station login and logout behavior with respect to the IceLib <see cref="T:ININ.IceLib.Connection.Session">Session</see>.
            </summary>
            <remarks>
            The <c>StationConnectionMode</c> can be used to indicate how the system should manage the user's station session.  If <see cref="F:ININ.IceLib.Connection.StationConnectionMode.Default">StationConnectionMode.Default</see> is specified,
            the user will be logged into the specified station when the IceLib <see cref="T:ININ.IceLib.Connection.Session">Session</see> connects, and will be logged out of that station
            when the IceLib Session is disconnected.  If <see cref="F:ININ.IceLib.Connection.StationConnectionMode.IndependentOfSession"/> is specified, the user will be logged into the station while the
            IceLib <see cref="T:ININ.IceLib.Connection.Session">Session</see> connects and also after <see cref="T:ININ.IceLib.Connection.Session">Session</see> disconnects. When
            <see cref="F:ININ.IceLib.Connection.StationConnectionMode.IndependentConnectionsLogoutWithSession"/> is used, all station connections for the user that have the same application group ID
            as the current session will be disconnected when the IceLib Session is disconnected.
            </remarks>
            <seealso cref="M:ININ.IceLib.Connection.Session.SetStationConnectionMode(ININ.IceLib.Connection.StationConnectionMode,System.Int32)"/>
        </member>
        <member name="F:ININ.IceLib.Connection.StationConnectionMode.Default">
            <summary>
            The user should be logged out of the station when the IceLib Session is disconnected.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationConnectionMode.IndependentOfSession">
            <summary>
            The user should remain logged into the station when the IceLib Session is disconnected.
            </summary>
            <remarks>
            Setting this mode and disconnecting the IceLib <see cref="T:ININ.IceLib.Connection.Session"/> will mean that the user is still logged into the station.  To log these
            session out at a later time, set the mode to <see cref="F:ININ.IceLib.Connection.StationConnectionMode.IndependentConnectionsLogoutWithSession"/> and disconnect the session.
            </remarks>
            <note>
            This mode should not be used in combination with a Remote Number workstation (see <see cref="T:ININ.IceLib.Connection.RemoteNumberSettings"/>) at this time as Interaction Center
            does not support this mode.
            </note>
        </member>
        <member name="F:ININ.IceLib.Connection.StationConnectionMode.IndependentConnectionsLogoutWithSession">
            <summary>
            Indicates that this station login, as well as those created for with <see cref="F:ININ.IceLib.Connection.StationConnectionMode.IndependentOfSession"/> using the same
            application group ID should be logged out when this IceLib Session is disconnected.
            </summary>
            <remarks>
            This mode is used to disconnect a user from a station that they are connected to using <see cref="F:ININ.IceLib.Connection.StationConnectionMode.IndependentOfSession"/>.
            Disconnecting an IceLib <see cref="T:ININ.IceLib.Connection.Session"/> that has this mode set will log that specific user out of the station associated with that Session.
            In addition, the user's status will be shown as 'logged out' even if any .net clients are logged in.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.StationInfo">
            <summary>
            Describes a station.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationInfo"/> object contains information about the
            connected Station associated with a Session. You can get or set the station's extension, 
            ID, SIP address, user, and station type, and other properties.
            </para>
            <example>
            <code escaped="false" lang="C#">
            Session session = new Session();
            session.Connect(...);
            StationInfo stationInfo = session.GetStationInfo();
            if (stationInfo.StationType == StationType.Local)
            {
                string extension = stationInfo.Extension;
            }
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.#ctor(ININ.IceLib.Connection.StationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationInfo"/> class with another instance.
            </summary>
            <param name="stationInfo">The station info.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.Clone">
            <summary>
            Clones the station info object by making a deep copy of all member values.
            </summary>
            <returns>A new cloned object.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Id">
            <summary>
            Gets or sets the station ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Extension">
            <summary>
            Gets or sets the station Extension.
            </summary>
            <value>The extension.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.Type">
            <summary>
            Gets or sets the station type.
            </summary>
            <value>The station type.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified station type is not from the <see cref="T:ININ.IceLib.Connection.StationType"/> enumeration.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.CanBeDialed">
            <summary>
            Gets or sets whether the station can be dialed.
            </summary>
            <value>
            	<see langword="true"/> if this instance can be dialed; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.RingAlways">
            <summary>
            Gets or sets whether the station will always ring.
            </summary>
            <value><see langword="true"/> if should ring always; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipAddress">
            <summary>
            Gets or sets the station Sip address.
            </summary>
            <value>The SIP address.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipUser">
            <summary>
            Gets or sets the station Sip user.
            </summary>
            <value>The SIP user.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.SipPassword">
            <summary>
            Gets or sets the station Sip password.
            </summary>
            <value>The SIP password.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StationInfo.DNDStatusSyncAvailable">
            <summary>
            Gets a value indicating whether DND status synchronization is available on this station.
            </summary>
            <value>
            	<see langword="true"/> if DND status synchronization is available on this station; otherwise, <see langword="false"/>.
            </value>
            <remarks><note>This property was deprecated in 3.0 SU-3 and should no longer be used.</note></remarks>
            <icversion>3.0</icversion>
        </member>
        <member name="T:ININ.IceLib.Connection.StationlessSettings">
            <summary>
            Passed to a Session in order to specify a stationless connection.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> object is used to specify
            that no station should be associated with the Session.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StationlessSettings"/> class with proxy station for acquiring licenses.
            </summary>
            <icversion>3.0 SU-7</icversion>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.Clone">
            <summary>
            Returns an exact copy of this <b>StationlessSettings</b> object.
            </summary>
            <returns>A new StationlessSettings object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.StationlessSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationlessSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.StationlessSettings.ProxyStationForLicense">
            <summary>
            Gets or sets Proxy StationId that is used to acquire licenses.
            </summary>
            <value>The proxy station ID.</value>
            <icversion>3.0 SU-7</icversion>
        </member>
        <member name="T:ININ.IceLib.Connection.StationType">
            <summary>
            Specifies constants indicating a station's type.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Unknown">
            <summary>The station is of an unknown type.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Local">
            <summary>The station is a local workstation.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Remote">
            <summary>The station is a remote workstation.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Sip">
            <summary>The station is connected via Sip.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.StationType.Tapi">
            <summary>The station is connected via Tapi.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.StoredCredentials">
            <summary>
            A set of credentials that can be persisted, retrieved, and used to authenticate with 
            the server.
            </summary>
            <seealso cref="T:ININ.IceLib.Connection.CommonCredentials"/>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> class.
            </overloads>
            
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.#ctor(System.String,ININ.IceLib.Connection.Session,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> class from the information
            in the <see cref="T:ININ.IceLib.Connection.Session"/> and sets the updated time to the current time and date.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="session">The session containing the credentials to store.</param>
            <param name="persistPassword">if set to <see langword="true"/> the password is stored with these credentials.</param>
            <exception cref="T:System.ArgumentNullException">An argument was <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.#ctor(System.String,ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> class.
            </summary>
            <param name="applicationName">The unique name of the application that is saving these credentials.</param>
            <param name="sessionSettings">The session settings.</param>
            <param name="hostSettings">The host settings.</param>
            <param name="authSettings">The authentication settings.</param>
            <param name="stationSettings">The station settings.</param>
            <param name="persistPassword">If set to <see langword="true"/> the <see cref="P:ININ.IceLib.Connection.StoredCredentials.AuthSettings"/> password is stored, if applicable.</param>
            <exception cref="T:System.ArgumentNullException">An argument was <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.#ctor(System.String,ININ.IceLib.Connection.SessionSettings,ININ.IceLib.Connection.HostSettings,ININ.IceLib.Connection.AuthSettings,ININ.IceLib.Connection.StationSettings,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> class.
            </summary>
            <param name="applicationName">The unique name of the application that is saving these credentials.</param>
            <param name="sessionSettings">The session settings.</param>
            <param name="hostSettings">The host settings.</param>
            <param name="authSettings">The authentication settings.</param>
            <param name="stationSettings">The station settings.</param>
            <param name="persistPassword">If set to <see langword="true"/> the <see cref="P:ININ.IceLib.Connection.StoredCredentials.AuthSettings"/> password is stored, if applicable.</param>
            <param name="localCustomSettings">Additional settings to be stored with the credentials.</param>
            <exception cref="T:System.ArgumentNullException">An argument was <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.#ctor(System.Xml.XmlNode)">
            <exclude/><summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.StoredCredentials"/> class given
            a properly formed XML node containing values for the class members.
            </summary>
            <param name="xml">The storedcredentials XML node.</param>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.ToString">
            <summary>
            Override of ToString to write out the (unprotected) contents of this StoredCredential.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.AddXml(System.Xml.XmlElement@)">
            <exclude/><summary>
            Adds the XML for this StoredCredentials object as a child the parent element.
            </summary>
            <param name="parentElem">The parent element that should contain the XML.</param>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:ININ.IceLib.Connection.StoredCredentials.AddSettingsXml(System.Xml.XmlElement@,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <exclude/><summary>
            Helper method to add the XML for the various settings members to a stored credentials XML node.
            </summary>
            <param name="storedCredsElem">The XML node for the parent stored credentials.</param>
            <param name="settingsName">Name of the settings.</param>
            <param name="settingsType">Type of the settings.</param>
            <param name="parameters">The parameters list for the settings object.</param>
            <param name="additionalAttributes">The additional attributes list for the settings object.</param>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.SessionSettings">
            <summary>
            Gets or sets the session settings.
            </summary>
            <value>The session settings.</value>
            <exception cref="T:System.ArgumentNullException">Attempted to set the value to <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.HostSettings">
            <summary>
            Gets or sets the host settings.
            </summary>
            <value>The host settings.</value>
            <exception cref="T:System.ArgumentNullException">Attempted to set the value to <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.AuthSettings">
            <summary>
            Gets or sets the authentication settings.
            </summary>
            <value>The authentication settings.</value>
            <exception cref="T:System.ArgumentNullException">Attempted to set the value to <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.StationSettings">
            <summary>
            Gets or sets the station settings.
            </summary>
            <value>The station settings.</value>
            <exception cref="T:System.ArgumentNullException">Attempted to set the value to <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.ApplicationName">
            <summary>
            Gets or sets the name of the application storing the credentials.
            </summary>
            <value>The name of the application.</value>
            <exception cref="T:System.ArgumentNullException">Attempted to set the value to <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.Updated">
            <summary>
            Gets the date and time these credentials were saved.
            </summary>
            <value>The date and time.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.HasPersistedPassword">
            <summary>
            Gets or sets a value indicating whether this instance has a persisted password.
            </summary>
            <value>
            	<see langword="true"/> if this instance has a persisted password; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Connection.StoredCredentials.LocalCustomSettings">
            <summary>
            Gets a collection which can be used to get/set local custom credentials settings.
            </summary>
            <value>The custom settings.</value>
            <remarks>
            <para>
            This provides a facility for grouping custom settings with the <see cref="T:ININ.IceLib.Connection.CommonCredentials"/>. For 
            example, this can allow a custom application to store specialized <i>Login dialog</i> settings.
            </para>
            <para>
            Unlike <see cref="P:ININ.IceLib.Connection.SessionSettings.CustomSettings"/>, LocalCustomSettings do not get 
            sent to the server and are only intended to be a simple way to save connection-related settings, such as from
            an application's login dialog.
            </para>
            <para>
            <note><see cref="P:ININ.IceLib.Connection.StoredCredentials.LocalCustomSettings"/> should be limited to connection-related settings and not used as a 
            general application setting persistence scheme.</note>
            </para>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Connection.SupportedMedia">
            <summary>
            Specifies constants indicating what media types a station supports.
            </summary>
            <remarks>
            This enumeration is used by StationSettings to specify what media a station supports.
            </remarks>
            <example>
            The following example demonstrates creation of a StationSettings object.
            <code lang="C#">
            using ININ.IceLib.Connection;
            
            SupportedMedia supportedMedia = SupportedMedia.Call | SupportedMedia.Chat | SupportedMedia.Email;
            WorkstationSettings stationSettings = new WorkstationSettings("station1", supportedMedia);
            </code>
            </example>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.None">
            <summary>The station supports no media types.  Cannot be used with other flags.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Call">
            <summary>The station supports calls.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Chat">
            <summary>The station supports chats.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Email">
            <summary>The station supports emails.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Generic">
            <summary>The station supports generic objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.BrowserSync">
            <summary>The station supports browser sync objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.Callback">
            <summary>The station supports callbacks.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.DualForm">
            <summary>The station supports dual form objects.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.SmsMessage">
            <summary>The station supports SMS messages.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.SupportedMedia.WorkItem">
            <summary>The station supports work item interactions.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.WindowsAuthProtocols">
            <summary>
            Specifies constants indicating authentication protocols.
            </summary>
            <remarks>
            This enumeration is used by <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> to
            specify what protocols to attempt when connecting.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.None">
            <summary>No protocols.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.Ntlm">
            <summary>The NTLM protocol (also known as Lanmanager Protocol).</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.Kerberos">
            <summary>The Kerberos protocol.</summary>
        </member>
        <member name="F:ININ.IceLib.Connection.WindowsAuthProtocols.All">
            <summary>All known protocols.</summary>
        </member>
        <member name="T:ININ.IceLib.Connection.WindowsAuthSettings">
            <summary>
            Passed to a Session in order to authenticate a Windows user using data from the current
            environment.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> object is used to specify
            Windows user authentication settings.  This is used when Windows user credentials should
            be used to authenticate the user requesting a Session.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.#ctor(ININ.IceLib.Connection.WindowsAuthProtocols)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> class, designating
            which protocols should be used.
            </summary>
            <param name="protocolFlags">Flags to indicate which protocols should be used.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.WindowsAuthSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},ININ.IceLib.Connection.PasswordUsage)">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.SetParameters(ININ.IceLib.Connection.Session,System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WindowsAuthSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WindowsAuthSettings.UserName">
            <summary>
            Gets the Windows userName associated with this instance.
            </summary>
            <value>The windows username.</value>
        </member>
        <member name="P:ININ.IceLib.Connection.WindowsAuthSettings.ProtocolFlags">
            <summary>
            Gets or sets the protocol flags.
            </summary>
            <value>The protocol flags.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified protocols is not from the <see cref="T:ININ.IceLib.Connection.WindowsAuthProtocols"/> enumeration.</exception>
        </member>
        <member name="T:ININ.IceLib.Connection.WorkstationSettings">
            <summary>
            Passed to a Session in order to specify a workstation.
            </summary>
            <remarks>
            <para>
            The <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> object is used to specify
            local workstation settings. This establishes a Session directly on the specified station.
            The station name is set to the current machine name by default.
            </para>
            <ininStandardConnectionExample/>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.#ctor(System.String,ININ.IceLib.Connection.SupportedMedia)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> class with station settings.
            </summary>
            <param name="workstation">The workstation.</param>
            <param name="supportedMedia">The media types supported by this station.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified supported media is not from the <see cref="T:ININ.IceLib.Connection.SupportedMedia"/> enumeration.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <exception cref="T:System.ArgumentException">A required property was not found in <param name="parameters"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.Clone">
            <summary>
            Returns an exact copy of this <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> object.
            </summary>
            <returns>A new <see cref="T:ININ.IceLib.Connection.WorkstationSettings"/> object that is a copy of this instance.</returns>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.Connection.WorkstationSettings.SetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WorkstationSettings.StationId">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Connection.WorkstationSettings.Workstation">
            <summary>
            Gets or sets the Workstation.
            </summary>
            <value>The workstation.</value>
            <remarks>
            The default is the <see cref="P:System.Environment.MachineName"/>.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.AddMagnitudes(System.Int32[],System.Int32[])">
            return a = a + b - b preserved.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.CompareTo(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            unsigned comparison on two arrays - note the arrays may
            start with leading zeros.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Divide(System.Int32[],System.Int32[])">
            return z = x / y - done in place (z value preserved, x contains the
            remainder)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)">
            return whether or not a BigInteger is probably prime with a
            probability of 1 - (1/2)**certainty.
            <p>From Knuth Vol 2, pg 395.</p>
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ExtEuclid(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
             Calculate the numbers u1, u2, and u3 such that:
            
             u1 * a + u2 * b = u3
            
             where u3 is the greatest common divider of a and b.
             a and b using the extended Euclid algorithm (refer p. 323
             of The Art of Computer Programming vol 2, 2nd ed).
             This also seems to have the side effect of calculating
             some form of multiplicative inverse.
            
             @param a    First number to calculate gcd for
             @param b    Second number to calculate gcd for
             @param u1Out      the return object for the u1 value
             @param u2Out      the return object for the u2 value
             @return     The greatest common divisor of a and b
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Square(System.Int32[],System.Int32[])">
            return w with w = x * x - w is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Multiply(System.Int32[],System.Int32[],System.Int32[])">
            return x with x = y * z - x is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.GetMQuote">
            Calculate mQuote = -m^(-1) mod b with b = 2^32 (32 = word size)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.MultiplyMonty(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int64)">
            Montgomery multiplication: a = x * y * R^(-1) mod m
            <br/>
            Based algorithm 14.36 of Handbook of Applied Cryptography.
            <br/>
            <li> m, x, y should have length n </li>
            <li> a should have length (n + 1) </li>
            <li> b = 2^32, R = b^n </li>
            <br/>
            The result is put in x
            <br/>
            NOTE: the indices of x, y, m, a different in HAC and in Java
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Remainder(System.Int32[],System.Int32[])">
            return x = x % y - done in place (y value preserved)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32[],System.Int32)">
            do a left shift - this returns a new array.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightInPlace(System.Int32,System.Int32[],System.Int32)">
            do a right shift - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightOneInPlace(System.Int32,System.Int32[])">
            do a right shift by one - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Subtract(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            returns x = x - y - we assume x is >= y
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDigest">
            interface that a message digest conforms to.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.GetDigestSize">
             return the size, in bytes, of the digest produced by this message digest.
            
             @return the size, in bytes, of the digest produced by this message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.GetByteLength">
             return the size, in bytes, of the internal buffer used by this digest.
            
             @return the size, in bytes, of the internal buffer used by this digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)">
             update the message digest with a single byte.
            
             @param inByte the input byte to be entered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
             update the message digest with a block of bytes.
            
             @param input the byte array containing the data.
             @param inOff the offset into the byte array where the data starts.
             @param len the length of the data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)">
             Close the digest, producing the final digest value. The doFinal
             call leaves the digest reset.
            
             @param output the array the digest is to be copied into.
             @param outOff the offset into the out array the digest is to start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.Reset">
            reset the digest back to it's initial state.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDigest.AlgorithmName">
             return the algorithm name
            
             @return the algorithm name
        </member>
        <member name="M:Org.BouncyCastle.Security.SecureRandom.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)">
            <summary>Use the specified instance of IRandomGenerator as random source.</summary>
            <remarks>
            This constructor performs no seeding of either the <c>IRandomGenerator</c> or the
            constructed <c>SecureRandom</c>. It is the responsibility of the client to provide
            proper seed material as necessary/appropriate for the given <c>IRandomGenerator</c>
            implementation.
            </remarks>
            <param name="generator">The source to generate all random bytes from.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.IRandomGenerator">
            <remarks>Generic interface for objects generating random bytes.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.AddSeedMaterial(System.Byte[])">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A byte array to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.AddSeedMaterial(System.Int64)">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A long value to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.NextBytes(System.Byte[])">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to be filled.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to receive bytes.</param>
            <param name="start">Index to start filling at.</param>
            <param name="len">Length of segment to fill.</param>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.BigIntegers">
            BigInteger utilities.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray(Org.BouncyCastle.Math.BigInteger)">
             Return the passed in value as an unsigned byte array.
            
             @param value value to be converted.
             @return a byte array without a leading zero byte if present in the signed encoding.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.CreateRandomInRange(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom)">
            Return a random BigInteger not less than 'min' and not greater than 'max'
            
            @param min the least value that may be generated
            @param max the greatest value that may be generated
            @param random the source of randomness
            @return a random BigInteger value in the range [min,max]
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator">
            <remarks>
            Takes bytes generated by an underling RandomGenerator and reverses the order in
            each small window (of configurable size).
            <p>
            Access to internals is synchronized so a single one of these can be shared.
            </p>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.AddSeedMaterial(System.Byte[])">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A byte array to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.AddSeedMaterial(System.Int64)">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A long value to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.NextBytes(System.Byte[])">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to be filled.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to receive bytes.</param>
            <param name="start">Index to start filling at.</param>
            <param name="len">Length of segment to fill.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator">
            A thread based seed generator - one source of randomness.
            <p>
            Based on an idea from Marcus Lippert.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator.GenerateSeed(System.Int32,System.Boolean)">
            Generate seed bytes. Set fast to false for best quality.
            <p>
            If fast is set to true, the code should be round about 8 times faster when
            generating a long sequence of random bytes. 20 bytes of random values using
            the fast mode take less than half a second on a Nokia e70. If fast is set to false,
            it takes round about 2500 ms.
            </p>
            @param numBytes the number of bytes to generate
            @param fast true if fast mode should be used
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.DigestRandomGenerator">
            Random generation based on the digest with counter. Calling AddSeedMaterial will
            always increase the entropy of the hash.
            <p>
            Internal access to the digest is synchronized so a single one of these can be shared.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha1Digest">
             implementation of SHA-1 as outlined in "Handbook of Applied Cryptography", pages 346 - 349.
            
             It is interesting to ponder why the, apart from the extra IV, the other difference here from MD5
             is the "endienness" of the word processing!
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.GeneralDigest">
            base implementation of MD4 family style digest as outlined in
            "Handbook of Applied Cryptography", pages 344 - 347.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha1Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha1Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha1Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha256Digest">
             Draft FIPS 180-2 implementation of SHA-256. <b>Note:</b> As this is
             based on a draft this implementation is subject to change.
            
             <pre>
                     block  word  digest
             SHA-1   512    32    160
             SHA-256 512    32    256
             SHA-384 1024   64    384
             SHA-512 1024   64    512
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.Hex">
            <summary>
            Class to decode and encode Hex.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[])">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32)">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.Byte[])">
             decode the Hex encoded input data. It is assumed the input data is valid.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String)">
             decode the Hex encoded string data - whitespace will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.IEncoder">
            Encode and decode byte arrays (typically from binary to 7-bit ASCII
            encodings).
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             encode the input data producing a Hex output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             decode the Hex encoded byte data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:ININ.IceLib.DisplayableId">
            <summary>
            Represents a unique identifier for an object, along with its display name.
            </summary>
            <remarks>The <c>DisplayableId</c> class is used to represent a unique identifier for objects in the IC
            system, along with a <see cref="P:ININ.IceLib.DisplayableId.DisplayName"/> for that object, if one is defined.  If no display name exists for the object, 
            the class will return the <see cref="P:ININ.IceLib.DisplayableId.Id"/> for the object to be used as the display string.</remarks>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.#ctor(System.String)">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.DisplayableId"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.DisplayableId"/> class.
            </summary>
            <param name="id">The ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.DisplayableId"/> class.
            </summary>
            <param name="id">The ID.</param>
            <param name="displayName">The display name.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.Equals(System.Object)">
            <overloads>
            Determines whether two <c>DisplayableId</c> instances are equal.
            </overloads>
            
            <inheritdoc/>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.Equals(ININ.IceLib.DisplayableId)">
            <summary>
            Determines whether the specified <see cref="T:ININ.IceLib.DisplayableId"/> is equal to the current <see cref="T:ININ.IceLib.DisplayableId"/>.
            </summary>
            <param name="other">The <see cref="T:ININ.IceLib.DisplayableId"/> to compare with the current <see cref="T:ININ.IceLib.DisplayableId"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:ININ.IceLib.DisplayableId"/> is equal to the current <see cref="T:ININ.IceLib.DisplayableId"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.op_Equality(ININ.IceLib.DisplayableId,ININ.IceLib.DisplayableId)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="displayableId1">A displayable ID to compare.</param>
            <param name="displayableId2">A displayable ID to compare.</param>
            <returns>Returns <see langword="true"/> if the values of its operands are equal, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.op_Inequality(ININ.IceLib.DisplayableId,ININ.IceLib.DisplayableId)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="displayableId1">A displayable ID to compare.</param>
            <param name="displayableId2">A displayable ID to compare.</param>
            <returns>Returns <see langword="false"/> if the values of its operands are equal, <see langword="true"/> otherwise.</returns>
        </member>
        <member name="M:ININ.IceLib.DisplayableId.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.DisplayableId.None">
            <summary>
            Gets a <see cref="T:ININ.IceLib.DisplayableId"/> representing no value (i.e. String.Empty).
            </summary>
            <value>The <see cref="T:ININ.IceLib.DisplayableId"/>.</value>
        </member>
        <member name="P:ININ.IceLib.DisplayableId.Id">
            <summary>
            Gets the unique identifier used to reference this object.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:ININ.IceLib.DisplayableId.DisplayName">
            <summary>
            Gets the human-readable name that refers to this object.
            </summary>
            <value>The human-readable display name.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.EnvironmentUtilities">
            <summary>
            Additional properties similar to what System.Environment provides.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.EnvironmentUtilities.SessionComputerName">
            <summary>
            Gets the computer name to use based on the current Windows session.
            </summary>
            <value>The computer name to use based on the current Windows session.</value>
            <remarks>
            This computer name is sensitive to whether the application is running under Citrix,
            Terminal Services, Remote Desktop, or a direct connection.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.EnvironmentUtilities.SessionType">
            <summary>
            Determines whether the application is running at the Console, under Remote Desktop, or Terminal Services/Citrix.
            </summary>
            <value>The type of the session.</value>
        </member>
        <member name="F:ININ.IceLib.Internal.EnvironmentUtilities.TerminalServicesSessionType.Console">
            <summary>
            Directly connected to the machine.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Internal.EnvironmentUtilities.TerminalServicesSessionType.RemoteDesktop">
            <summary>
            Connected via a Remote Desktop connection.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Internal.EnvironmentUtilities.TerminalServicesSessionType.TerminalServices">
            <summary>
            Terminal services (or Citrix).
            </summary>
        </member>
        <member name="T:ININ.IceLib.IceLibExceptionTypes">
            <summary>
            This class is used by <see cref="T:ININ.IceLib.IceLibException"/> and all of its derived types to provide more information about the type of error.
            </summary>
            <icversion>4.0 SU 4</icversion>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.Unspecified">
            <summary>An unknown error occurred.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.Connection">
            <summary>See <see cref="T:ININ.IceLib.Connection.IceLibConnectionException"/> and <see cref="T:ININ.IceLib.Connection.IceLibConnectionExceptionTypes"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.RequestTimeout">
            <summary>See <see cref="T:ININ.IceLib.Connection.RequestTimeoutException"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.License">
            <summary>See <see cref="T:ININ.IceLib.IceLibLicenseException"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.PasswordPolicyViolation">
            <summary>See <see cref="T:ININ.IceLib.IceLibPasswordPolicyViolationException"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.ServerOperationNotSupported">
            <summary>See <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.RemoteCommunicationFailure">
            <summary>The communication format was not properly negotiated.  Your connection will be dropped.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.ResourceInUse">
            <summary>See <see cref="T:ININ.IceLib.ResourceInUseException"/> for more information.</summary>
        </member>
        <member name="F:ININ.IceLib.IceLibExceptionTypes.RateLimited">
            <summary>Requests to refresh a voicemail or fax are being sent too frequently.</summary>
        </member>
        <member name="T:ININ.IceLib.IceLibLicenseException">
            <summary>
            The exception that is thrown for IceLib when a required license is not available.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested operation requires
            a license that is not available.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibLicenseException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibLicenseException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibLicenseException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="exceptionDetail">The exception detail message.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.Globalization.CultureInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="exceptionDetail">The exception detail message.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="exceptionDetail">The exception detail message.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.Globalization.CultureInfo,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="exceptionDetail">The exception detail message.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.IceLibLicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.IceLibLicenseException.ExceptionDetail">
            <summary>
            Gets a detailed description of the missing license.
            </summary>
            <value>The exception detail message.</value>
        </member>
        <member name="P:ININ.IceLib.IceLibLicenseException.FailedLicenses">
            <summary>
            Gets or sets the list of license names that failed.
            </summary>
            <value>The failed license names.</value>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.IceLibPasswordPolicyViolationException">
            <summary>
            The exception that is thrown for IceLib when a password is attempted to be saved that violates the password policy.
            </summary>
            <remarks>
            <para>
            This exception is thrown when a password is attempted to be saved that violates the password policy.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <icversion>4.0</icversion>
        </member>
        <member name="M:ININ.IceLib.IceLibPasswordPolicyViolationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibPasswordPolicyViolationException"/> class.
            </summary>
            <param name="policyError">The policy error.</param>
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class.
            </overloads>
        </member>
        <member name="M:ININ.IceLib.IceLibPasswordPolicyViolationException.#ctor(System.Globalization.CultureInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibPasswordPolicyViolationException"/> class.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="policyError">The policy error.</param>
        </member>
        <member name="T:ININ.IceLib.InsufficientRightsException">
            <summary>
            The exception that is thrown for IceLib when a required right is not available.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested operation cannot
            be completed due to insufficient rights being available.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class with a specified cache value.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.InsufficientRightsException"/> class with a specified error message.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.InsufficientRightsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.AsyncCompletedEventArgs`1">
            <summary>
            Provides data for asynchronous operations.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="M:ININ.IceLib.AsyncCompletedEventArgs`1.#ctor(`0,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of this class with the specified values.
            </summary>
            <param name="result">The result.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:ININ.IceLib.AsyncCompletedEventArgs`1.Result">
            <summary>
            Gets the result associated with the event.
            </summary>
            <value>The result.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1">
            <exclude/>
            <summary>
            Tracks asynchronous tasks, ensuring that implementation callbacks are called on the proper thread.
            </summary>
            <typeparam name="TAsyncTaskState">A specialized asyncTaskState that tracks input, progress, and results for the async operation.</typeparam>
            <remarks>
            Please refer to the MSDN documentation on "Best Practices for Implementing the Event-based Asynchronous Pattern" for the required behavior of your implementation of this pattern.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with no callbacks.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Connection.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with no callbacks.
            </summary>
            <param name="session">The session for which this async task is being performed (for thread cultureInfo).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with some callbacks.
            </summary>
            <param name="performTaskCallback">The do work callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completion callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Connection.Session,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with some callbacks.
            </summary>
            <param name="session">The session for which this async task is being performed (for thread cultureInfo).</param>
            <param name="performTaskCallback">The do work callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completion callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with all callbacks.
            </summary>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <param name="progressChangedCallback">The progress changed callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.#ctor(ININ.IceLib.Connection.Session,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1"/> class, with all callbacks.
            </summary>
            <param name="session">The session for which this async task is being performed (for thread cultureInfo).</param>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <param name="progressChangedCallback">The progress changed callback (called on the UI thread).</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CreateTaskId">
            <summary>
            Creates an ID for use in identifying an async operation.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0)">
            <overloads>
            Performs a task.
            </overloads>
            <summary>
            Performs a task, with no callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>arbitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Performs a task, with all callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>arbitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.PerformTask(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Performs a task, with some callbacks.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <param name="performTaskCallback">The perform task callback (called on an arbitrary thread).</param>
            <param name="completedCallback">The completed callback (called on the UI thread).</param>
            <param name="progressChangedCallback">The progress changed callback (called on the UI thread).</param>
            <remarks>
            <para>This registers the task (by <c>asyncTaskState.TaskId</c>), initiates performance of the task on a
            separate thread, then returns.</para>
            <para>The <c>performTaskCallback</c> will be executed on an <b>arbitrary thread</b>.  If this throws an exception, it will be caught and placed into the <c>asyncTaskState</c> automatically.</para>
            <para>Once the operation completes, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b> (unless the task has been cancelled via a call to <see cref="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)"/>).</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.CancelTask(System.Int64)">
            <summary>
            Cancels a task.
            </summary>
            <param name="taskId">The task ID.</param>
            <remarks>
            <para>Once the operation is cancelled, the <c>completedCallback</c> will be executed automatically on the <b>UI thread</b>.  The <c>completedCallback</c> will not subsequently be called when the <c>performTaskCallback</c> completes.</para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.UpdateProgress(`0)">
            <summary>
            Updates the progress.
            </summary>
            <param name="asyncTaskState">State of the async operation.</param>
            <para>Causes the <c>progressChangedCallback</c> will be executed automatically on the <b>UI thread</b>.</para>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.IsTaskActive(System.Int64)">
            <summary>
            Determines whether a particular task is active.
            </summary>
            <param name="taskId">The task ID.</param>
            <returns>
            	<see langword="true"/> if the task is active; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.IsBusy">
            <summary>
            Gets a value indicating whether a task is active.
            </summary>
            <value><see langword="true"/> if this instance is busy; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTaskDelegate">
            <summary>
            Represents an implementation handling a particular stage of an asynchronous task.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask">
            <summary>
            Represents a tracked Async task.
            </summary>
            <remarks>This class is immutable.</remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0)">
            <overloads>Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class.</overloads>
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with no callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with some callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
            <param name="asyncPerformTaskCallback">The async perform task callback.</param>
            <param name="asyncCompletedCallback">The async completed callback.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.#ctor(`0,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate,ININ.IceLib.Internal.AsyncTaskTracker{`0}.AsyncTaskDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask"/> class, with all callbacks.
            </summary>
            <param name="asyncTaskState">State of the async task.</param>
            <param name="asyncPerformTaskCallback">The async perform task callback.</param>
            <param name="asyncCompletedCallback">The async completed callback.</param>
            <param name="asyncProgressChangedCallback">The async progress changed callback.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncTaskState">
            <summary>
            Gets the state of the async task.
            </summary>
            <value>The state of the async task.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>The task ID.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncOperation">
            <summary>
            Gets the async operation.
            </summary>
            <value>The async operation.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncPerformTaskCallback">
            <summary>
            Gets the async perform task callback.
            </summary>
            <value>The async perform task callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncCompletedCallback">
            <summary>
            Gets the async completed callback.
            </summary>
            <value>The async completed callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.AsyncTaskTracker`1.AsyncTask.AsyncProgressChangedCallback">
            <summary>
            Gets the async progress changed callback.
            </summary>
            <value>The async progress changed callback.</value>
            <remarks>
            These might not be set, depending on whether the use case is to have:<br />
            - a single set of callbacks for the whole tracker, or,<br />
            - a set of callbacks for each PerformTask invocation.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.CommonResourceStrings">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectAlreadyCached">
            <summary>An object is already being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectNotCached">
            <summary>An object is not being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectAlreadyWatched">
            <summary>An object is already being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectNotWatched">
            <summary>An object is not being watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ObjectCannotBeWatched">
            <summary>An object cannot be watched.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.InvalidArrayArgumentElement">
            <summary>An element of the array argument was invalid.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.ArrayArgumentMustNotBeEmpty">
            <summary>An array argument that requires at least one element was empty.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.CommonResourceStrings.InvalidEnumArgument">
            <summary>An enum argument was invalid.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.Conversions.ServerNullDateTime">
            <summary>
            This is the DateTime that corresponds to what we get from the server side when a <see langword="null"/> or invalid date/time
            has been sent.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.Conversions.ConvertToBoolean(System.String)">
            <summary>
            Converts a string value to a boolean type.
            </summary>
            <param name="value">The string value.  Will accept "Yes", "No", "0", "1", "True", "False".</param>
            <returns><see langword="true"/> if the value is convertible to <see langword="true"/>; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.EventHelper">
            <summary>
            Contains methods for safely raising events.
            </summary>
            <remarks>
            <para>
            The <c>EventHelper</c> class provides methods that can be used to raise events. It avoids the need for explicitly
            checking event sinks for <see langword="null"/> before raising the event. It also catches exceptions thrown by
            event sinks and traces the exception, without allowing it to prevent other event sinks
            to be invoked.
            </para>
            </remarks>
            <example>
            The following example shows how a non-generic event can be raised:
            <code>
            public event EventHandler Changed;
            
            protected void OnChanged()
            {
            	EventHelper.SafeRaise(Changed, this);
            }
            </code>
            </example>
            <example>
            The following example shows how a non-generic event can be raised where the event type requires a specific
            <c>EventArgs</c> subclass:
            <code>
            public event PropertyChangedEventHandler PropertyChanged;
            
            protected void OnPropertyChanged(PropertyChangedEventArgs e)
            {
            	EventHelper.SafeRaise(PropertyChanged, this, e);
            }
            </code>
            </example>
            <example>
            The following example shows how a generic event can be raised:
            <code>
            public event EventHandler&lt;EventArgs&gt; Changed;
            
            protected void OnChanged()
            {
            	EventHelper.SafeRaise(Changed, this, EventArgs.Empty);
            }
            </code>
            </example>
            <example>
            The following example shows how a generic event with custom event arguments can be raised:
            <code>
            public event EventHandler&lt;MyEventArgs&gt; MyEvent;
            
            protected void OnMyEvent(MyEventArgs e)
            {
            	EventHelper.SafeRaise(MyEvent, this, e);
            }
            </code>
            </example>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.EventHandler,System.Object,TopicTracer,System.Object[])">
            <summary>
            Safely raises a non-generic event with <c>EventArgs.Empty</c>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises the specified non-generic event and passes in <see cref="F:System.EventArgs.Empty"/> as the event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.EventHandler,System.Object,TopicTracer,ININ.IceLib.Internal.InstanceId,System.Object[])">
            <summary>
            Safely raises a non-generic event with <c>EventArgs.Empty</c>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="instanceId">The instance ID specified by the sender.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises the specified non-generic event and passes in <see cref="F:System.EventArgs.Empty"/> as the event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.EventHandler,System.Object,System.EventArgs,TopicTracer,ININ.IceLib.Internal.InstanceId,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <see cref="T:System.EventArgs"/>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="instanceId">The instance ID specified by the sender.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.EventHandler,System.Object,System.EventArgs,TopicTracer,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <see cref="T:System.EventArgs"/>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.ComponentModel.AsyncCompletedEventHandler,System.Object,System.ComponentModel.AsyncCompletedEventArgs,TopicTracer,ININ.IceLib.Internal.InstanceId,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="instanceId">The instance ID specified by the sender.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise(System.ComponentModel.AsyncCompletedEventHandler,System.Object,System.ComponentModel.AsyncCompletedEventArgs,TopicTracer,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise``1(System.EventHandler{``0},System.Object,``0,TopicTracer,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <typeparamref name="TEventArgs"/>.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The <typeparamref name="TEventArgs"/> event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <typeparamref name="TEventArgs"/> instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaise``1(System.EventHandler{``0},System.Object,``0,TopicTracer,ININ.IceLib.Internal.InstanceId,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <typeparamref name="TEventArgs"/>.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <typeparamref name="TEventArgs"/> instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <param name="instanceId">The instance ID specified by the sender.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaiseAsync``1(System.EventHandler{``0},System.Object,``0,TopicTracer,ININ.IceLib.Internal.InstanceId,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <typeparamref name="TEventArgs"/>, calling each event listener asynchronously.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <typeparamref name="TEventArgs"/> instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="instanceId">The instance ID specified by the sender.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.  Each delegate
            listener is called asynchronously.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaiseAsync``1(System.EventHandler{``0},System.Object,``0,TopicTracer,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <typeparamref name="TEventArgs"/>, calling each event listener asynchronously.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The <typeparamref name="TEventArgs"/> event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <typeparamref name="TEventArgs"/> instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.  Each delegate
            listener is called asynchronously.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaiseCancel``1(System.EventHandler{``0},System.Object,``0,TopicTracer,System.Object[])">
            <summary>
            Safely raises a generic event with an explicit <typeparamref name="TEventArgs"/>.
            </summary>
            <typeparam name="TEventArgs">The type of the event arguments.</typeparam>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <typeparamref name="TEventArgs"/> instance containing the event arguments.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <returns><see langword="true"/> if e.Cancel was set; otherwise, <see langword="false"/>.</returns>
            <remarks>
            This method raises a generic event, passing in the specified event arguments.  It also short-circuits if any
            delegate sets the e.Cancel property, rather than continuing to evaluate the other delegates.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.EventHelper.SafeRaiseOldStyle(System.Delegate,System.Object,System.EventArgs,TopicTracer,System.Object[])">
            <summary>
            Safely raises a non-generic event with explicit <see cref="T:System.EventArgs"/>.
            </summary>
            <param name="eventHandler">The event to be raised.</param>
            <param name="sender">The sender of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <param name="topicTracer">The topic tracer corresponding to the trace topic scope of the calling function.</param>
            <param name="scopingInformation">The scoping information.</param>
            <remarks>
            <para>This method has a separate name to help encourage use of type-safe constructs for events.</para>
            <para>It can be used to raise a non-generic event that needs a specific <see cref="T:System.EventArgs"/> subclass as its
            second parameter. This method assumes that <paramref name="eventHandler"/> points to a method that conforms to the
            standard .NET event signature. That is, it takes an <see cref="T:System.Object"/> as its first parameter and an
            <see cref="T:System.EventArgs"/> instance as its second.</para>
            <note>If the <c>EventArgs</c> is of an incorrect type for this event, or the event does
            not conform to the standard <c>object/EventArgs</c> pattern, then the event sinks will
            not be called!</note>
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.FileCompression">
            <summary>
            Contains helper methods for Zipping and Unzipping files.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.FileCompression.GetFileBytes(System.String,System.String)">
            <summary>
            Gets the bytes of a file contained in a zip file.
            </summary>
            <param name="zipFileName">The location of the zip file.</param>
            <param name="fileNameInZip">The name of the file inside the zip file.</param>
            <returns>A byte array of the contents of the file in the zip file.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.FileCompression.GetFileBytes(System.IO.FileStream,System.String)">
            <summary>
            Gets the bytes of a file contained in a zip file.
            </summary>
            <param name="fileStream">The zip file's file stream.</param>
            <param name="fileNameInZip">The name of the file inside the zip file.</param>
            <returns>A byte array of the contents of the file in the zip file.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.FileCompression.AddToZipFile(System.String,System.String,System.String)">
            <summary>
            Adds a file to a zip file.
            </summary>
            <remarks>If the zip file does not exist, it will be created.</remarks>
            <param name="zipFileName">The location of the zip file.</param>
            <param name="fileNameInZip">The name of the file inside the zip file.</param>
            <param name="fileContents">The contents of the file being added to the zip file.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.InstanceId">
            <summary>
            Support for TraceContext.InstanceId.
            </summary>
            <example>
            <code lang="C#">
            public class Foo
            {
                // To support InstanceId tracing.
                private readonly InstanceId _InstanceId = new InstanceId();
            
                public void Bar(int x, string y)
                {
                    TraceTopics.Interactions.error("InstanceId={} x={} y={}", _InstanceId, x, y);
                    ...
                }
            }
            </code>
            </example>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.InstanceId"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.op_Implicit(ININ.IceLib.Internal.InstanceId)~System.UInt64">
            <summary>
            Performs an implicit conversion from <see cref="T:ININ.IceLib.Internal.InstanceId"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="instanceId">The instance ID.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.InstanceId.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.InstanceId.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.IntermediateWaitState">
            <exclude/><summary>For internal use only.</summary>
            <remarks>
            Provides support for implementing asynchronous methods throughout IceLib.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="callback">An asynchronous callback, to be called when the operation is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous request from other requests.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.SignalCompletion">
            <Summary>
            Helper method to signal completion of an Asynchronous action.
            </Summary>
        </member>
        <member name="M:ININ.IceLib.Internal.IntermediateWaitState.WaitForCompletion">
            <Summary>
            Helper method to wait for completion of an Asynchronous action.
            </Summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.ExceptionToThrow">
            <summary>
            Gets or sets the exception to throw when .
            </summary>
            <value>The exception to throw.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.AsyncState">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.AsyncWaitHandle">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.CompletedSynchronously">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.IsCompleted">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.Callback">
            <summary>
            Gets the callback method to be called when the asynchronous operation is completed.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.State">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.Event">
            <summary>
            Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.IntermediateWaitState.IntermediateResult">
            <summary>
            Gets or sets an IAsyncResult for an intermediate operation.
            </summary>
            <remarks>
            This can be used to store the results from an asynchronous operation that is used to implement the main asynchronous operation in question.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.IWatchedObjectHelper`2.HelperMergeDiff(System.Object)">
            <summary>
            Do a difference of the two objects and merge any data.
            </summary>
            <param name="newObject">The new cache object we want to merge in.</param>
            <returns>An collection of changed properties. The colletion is empty if there were no changes.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.LocalizationCache">
            <summary>
            Helper class for caching localized string resources based on the resourceId.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizationCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.LocalizationCache"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizationCache.TryGetLocalizedValue(System.String,System.String)">
            <summary>
            Tries to get the localized value for the specificed resource ID and culture name.
            </summary>
            <param name="resourceId">The resource ID.</param>
            <param name="cultureName">Name of the culture.</param>
            <returns></returns>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizationCache.SetLocalizedValue(System.String,System.String,System.String)">
            <summary>
            Sets the localized value for the specified resource ID and culture name.
            </summary>
            <param name="resourceId">The resource ID.</param>
            <param name="cultureName">Name of the culture.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.LocalizedValue">
            <summary>
            Helper class for <see cref="T:ININ.IceLib.Internal.LocalizationCache"/> that contains the Culture Name/Localized Value pairs for a resourceId.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizedValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.LocalizedValue"/> class.
            </summary>
            <param name="cultureName">Name of the culture.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizedValue.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.LocalizedValue.ToString">
            <inheritdoc/>
        </member>
        <member name="P:ININ.IceLib.Internal.LocalizedValue.CultureName">
            <summary>
            Gets the culture name.
            </summary>
            <value>The name of the culture.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.LocalizedValue.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.ManagedWeakReferenceCache`2">
            <summary>
            A cached collection of keyed weak references to objects of type <typeparamref name="TCachedItem"/> that attempts to 
            keep a handle on how many dangling keyvalue pairs are left in the collection. Where a dangling keyvalue pair 
            is defined as a pair where the weak reference (the value) has been garbage collected. The collection cleans up
            dangling references when a <see cref="M:ININ.IceLib.Internal.ManagedWeakReferenceCache`2.GetOrCreate(`0,System.Func{`1},System.Boolean@)"/> operation fails to find a valid value, by removing the 
            first encountered dangling keyvalue pair before adding in the new pair. To consider a value valid requires 
            both the key to be present and for the weak reference to have not been garbage collected.
            </summary>
            <typeparam name="TCachedItemKey">The type of the cached item key.</typeparam>
            <typeparam name="TCachedItem">The type of the cached item.</typeparam>
            <remarks>
            Be aware of the usage of this cache and the mechanism used to keep a handle on the dangling keyvalue pairs. If 
            for example a large amount of items were injected into the cache, but very seldomly accessed then this class
            should be enhanced to handle that situation by cleaning more than one (possibly all dangling pairs) and/or 
            cleaning via a timed interval.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.ManagedWeakReferenceCache`2.GetOrCreate(`0,System.Func{`1},System.Boolean@)">
            <summary>
            Gets a strong reference to an object of type <typeparamref name="TCachedItem"/> for the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="createCachedItem">The function to use to create a new item if the <paramref name="key"/> 
            could not be found or a strong reference to an object of type <typeparamref name="TCachedItem"/> could not be 
            obtained (meaning the weak reference was cleaned up).</param>
            <param name="createdObject">If set to <see langword="true"/>, a weak reference could not be found and an 
            object needed to be created.</param>
            <returns>A strong reference to an object of type <typeparamref name="TCachedItem"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ManagedWeakReferenceCache`2.TryGetInLock(`0,`1@)">
            <summary>
            Tries to get a strong reference for the <paramref name="key"/> provided.
            </summary>
            <param name="key">The key.</param>
            <param name="strongReference">The strong reference.</param>
            <returns>
            <see langword="true" /> if the key was found and a valid strong reference to a 
            <typeparamref name="TCachedItem"/> was obtained, otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ManagedWeakReferenceCache`2.Clear">
            <summary>
            Clears all keys and weak references.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.MessageReceivedEventArgs">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.MessageReceivedEventArgs.#ctor(ININ.ThinBridge.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.MessageReceivedEventArgs"/> class with the specified message.
            </summary>
            <param name="message">The message associated with the event.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.MessageReceivedEventArgs.Message">
            <summary>
            Gets the message associated with the event.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.Error">
            <summary>
            Base message for all Error codes used in <see cref="T:ININ.IceLib.Internal.Messages.Response"/>s.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.Message">
            <summary>
            Base for all iMessages.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.Message.MessageVersion">
            <summary>
            Maximum version to simulate.
            </summary>
            <remarks>By default, all fields are set. If this property is set then some fields that
            are version dependent might not be sent.</remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.Message.IsMessageVersionSet">
            <summary>
            Determines if a message version is set.
            </summary>
            <remarks>If a message version is set then some fields that are version dependent might not 
            be sent.</remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.Error.Success">
            <summary>
            Indicates a non-error (successful) response.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.Event">
            <summary>
            All events from Session Manager inherit from this message.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.ThinBridgeCompatibleMessage.ThinBridgeMessageId">
            <summary>
            A message ID used by Thin Bridge (e.g. an event id).
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy">
            <summary>
            A proxy class to bridge client that is aware of iMessage messages.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy.BeginSendRequest``1(``0,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous send of <typeparamref name="TRequest"/>.
            </summary>
            <typeparam name="TRequest">The specific type of request to send.</typeparam>
            <param name="request">The actual request to send.</param>
            <param name="callback">A callback that will be called when the method completes.</param>
            <param name="state">Optional state to pass along with the request.</param>
            <returns>A result that can be used to the asynchronous operation.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy.EndSendRequest``1(System.IAsyncResult)">
            <summary>
            Completes an asynchronous send request.
            </summary>
            <typeparam name="TResponse">The expected response type.</typeparam>
            <param name="asyncResult">The asynchronous result that was created by <see cref="M:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy.BeginSendRequest``1(``0,System.AsyncCallback,System.Object)"/>.</param>
            <returns>An instance of <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy.SendRequest``2(``0)">
            <summary>
            Sends an iMessage <typeparamref name="TRequest"/> that expects a <typeparamref name="TResponse"/>.
            </summary>
            <typeparam name="TRequest">The specific type of request to send.</typeparam>
            <typeparam name="TResponse">The type of response that is expected.</typeparam>
            <param name="request">The actual request to send.</param>
            <returns>An instance of <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.PooledIPBridgeClientProxy.ParentSession">
            <summary>
            The <see cref="T:ININ.IceLib.Connection.Session"/> that is using this bridge.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.Request">
            <summary>
            All requests to Session Manager inherit from this message.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.Response">
            <summary>
            All responses from Session Manager inherit from this message.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.NativeMethods">
            <summary>
            Retrieves system information to support tracing.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.NativeMethods.WTSQuerySessionInformation(System.IntPtr,System.Int32,ININ.IceLib.Internal.NativeMethods.WTS_INFO_CLASS,System.IntPtr@,System.UInt32@)">
            <summary>
            The WTSQuerySessionInformation function retrieves session information for the specified
            session on the specified terminal server.
            It can be used to query session information on local and remote terminal servers.
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/termserv/termserv/wtsquerysessioninformation.asp
            </summary>
            <param name="hServer">Handle to a terminal server. Specify a handle opened by the WTSOpenServer function,
            or specify <see cref="F:ININ.IceLib.Internal.NativeMethods.WTS_CURRENT_SERVER_HANDLE"/> to indicate the terminal server on which your application is running.</param>
            <param name="sessionId">A Terminal Services session identifier. To indicate the session in which the calling application is running
            (or the current session) specify <see cref="F:ININ.IceLib.Internal.NativeMethods.WTS_CURRENT_SESSION"/>. Only specify <see cref="F:ININ.IceLib.Internal.NativeMethods.WTS_CURRENT_SESSION"/> when obtaining session information on the
            local server. If it is specified when querying session information on a remote server, the returned session
            information will be inconsistent. Do not use the returned data in this situation.</param>
            <param name="wtsInfoClass">Specifies the type of information to retrieve. This parameter can be one of the values from the <see cref="T:ININ.IceLib.Internal.NativeMethods.WTS_INFO_CLASS"/> enumeration type.</param>
            <param name="ppBuffer">Pointer to a variable that receives a pointer to the requested information. The format and contents of the data depend on the information class specified in the <see cref="T:ININ.IceLib.Internal.NativeMethods.WTS_INFO_CLASS"/> parameter.
            To free the returned buffer, call the <see cref="M:ININ.IceLib.Internal.NativeMethods.WTSFreeMemory(System.IntPtr)"/> function.</param>
            <param name="pBytesReturned">Pointer to a variable that receives the size, in bytes, of the data returned in ppBuffer.</param>
            <returns>If the function succeeds, the return value is a nonzero value.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.NativeMethods.WTSFreeMemory(System.IntPtr)">
            <summary>
            The WTSFreeMemory function frees memory allocated by a Terminal Services function.
            </summary>
            <param name="memory">Pointer to the memory to free.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.NativeMethods.SystemMetric">
            <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
             
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
        </member>
        <member name="F:ININ.IceLib.Internal.NativeMethods.SystemMetric.SM_REMOTESESSION">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services client session, the return value is nonzero. If the calling process is associated with the Terminal Server console session, the return value is zero. The console session is not necessarily the physical console - see WTSGetActiveConsoleSessionId for more information.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.ObjectListHelper">
            <summary>
            Class to help with deserializing objects from a string.
            For example, this can be used to deserialize the following string:
                FirstName|LastName,FirstName2|LastName2
            Into the following multi-dimensional array:
                [0][0] = "FirstName";
                [0][1] = "LastName";
                [1][0] = "FirstName2";
                [1][1] = "LastName2";
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.ObjectListHelper.Deserialize(System.String)">
            <summary>
            Deserializes the specified value using the default deliminators for the object (",") and its properties ("|").
            </summary>
            <param name="value">The value.</param>
            <returns>A multi-dimensional string array of objects and its properties.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Internal.PathUtilities">
            <exclude />
            <summary>
            Utilities to assist with paths.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PathUtilities.TryGetSafeTempPath(System.String@)">
            <exclude />
            <summary>
            Gets the first temporary path that physically exists.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PathUtilities.TryGetSafeTempFileName(System.String@)">
            <exclude />
            <summary>
            Creates a uniquely named, zero-byte temporary file 
            on disk and returns the full path of that file in the fileName parameter.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PathUtilities.GetEnvironmentVariable(System.String)">
            <summary>
            Gets the specified environment variable, expanding any embedded environment variables.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PathUtilities.SanatizeFolderName(System.String)">
            <summary>
            Create a valid folder name out of a given folder name.
            </summary>
            <param name="dir">The folder name to sanitize.</param>
            <returns>The sanitized folder name.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.PlainTextRenderer">
            <summary>
            A support class for rendering HTML into plain text.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PlainTextRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.PlainTextRenderer"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.PlainTextRenderer.Render(System.String)">
            <summary>
            Renders the specified HTML encoded text.
            </summary>
            <param name="htmlEncodedText">The HTML encoded text.</param>
            <returns>The rendered text.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.PlainTextRenderer.MaxLineWidth">
            <summary>
            Gets or sets the maximum line width.
            </summary>
            <value>The maximum line width.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.PlainTextRenderer.Newline">
            <summary>
            Gets or sets the newline value.
            </summary>
            <value>The newline.</value>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.PlainTextRenderer.LinePrefix">
            <summary>
            Gets or sets the line prefix.
            </summary>
            <value>The line prefix.</value>
            <exception cref="T:System.ArgumentNullException">A parameter was <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.PlainTextRenderer.WrapLines">
            <summary>
            Gets or sets a value indicating whether wrap lines in the output.
            </summary>
            <value><see langword="true"/> if should wrap lines; otherwise, <see langword="false"/>.</value>
            <remarks><note>This setting only affects lines with <see cref="T:ININ.IceLib.Internal.PlainTextRenderer.LineAlignment"/>.Left.</note></remarks>
        </member>
        <member name="P:ININ.IceLib.Internal.PlainTextRenderer.RemoveTrailingNewlines">
            <summary>
            Gets or sets a value indicating whether to remove trailing newlines.
            </summary>
            <value>
            	<see langword="true"/> if remove trailing newlines; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:ININ.IceLib.Internal.ReadOnlyDictionary`2">
            <summary>
            Represents a read only wrapper around a generic <see cref="T:System.Collections.IDictionary"/>. The design pattern
            mirrors <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>, and follows the apparent pattern that write operations
            do not throw an exception, but simply make no change to the underlying collection.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:ININ.IceLib.Internal.ReadOnlyDictionary`2._ContainedDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="F:ININ.IceLib.Internal.ReadOnlyDictionary`2._ContainedIDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.ReadOnlyDictionary`2"/> class.
            </summary>
            <param name="dictionaryToWrap">The dictionary to wrap.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.AsReadOnly(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Returns a read only dictionary.
            </summary>
            <param name="dictionaryToWrap">The dictionary to wrap.</param>
            <returns>The read only dictionary.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Add(`0,`1)">
            <summary>
            Add does not change a read only Dictionary.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Remove(`0)">
            <summary>
            Remove does not change a read only Dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns><see langword="true"/> if successful; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Add does not change a read only Dictionary.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Clear">
            <summary>
            Clear does not change a read only Dictionary.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Remove does not change a read only Dictionary.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Add(System.Object,System.Object)">
            <summary>
            Add does not change a read only Dictionary.
            </summary>
            <param name="key">The <see cref="T:System.Object"></see> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"></see> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary"></see> object.</exception>
            <exception cref="T:System.ArgumentNullException">key is <see langword="null"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"></see> is read-only.-or- The <see cref="T:System.Collections.IDictionary"></see> has a fixed size.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"></see> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"></see> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"></see> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"></see> object for the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"></see> object for the <see cref="T:System.Collections.IDictionary"></see> object.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.Remove(System.Object)">
            <summary>
            Remove does not affect a read only Dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"></see> object is read-only.-or- The <see cref="T:System.Collections.IDictionary"></see> has a fixed size.</exception>
            <exception cref="T:System.ArgumentNullException">key is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array.</exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyDictionary`2.ThrowNotSupportedExceptionForChangeToReadOnlyCollection">
            <summary>
            Throws a <see cref="T:System.NotSupportedException"/> for an attempted change to the read-only collection.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.Keys">
            <summary>
            Gets a read only <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            Gets the <typeparamref name="TValue"/> with the specified key. Set
            does not change a read only Dictionary.
            </summary>
            <value>The requested value.</value>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value><see langword="true"/> if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size.
            </summary>
            <value><see langword="true"/> if the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.System#Collections#IDictionary#Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.Item(System.Object)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified key. Set
            does not affect a <see cref="T:ININ.IceLib.Internal.ReadOnlyDictionary`2"/>.
            </summary>
            <value>The requested item.</value>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value><see langword="true"/> if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyDictionary`2.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.ReadOnlyICollection`1">
            <summary>
            Wraps an existing <see cref="T:System.Collections.ICollection"/> as read only, following the pattern of 
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> to simply no-op modifying functions instead of throwing
            Exceptions.
            </summary>
            <typeparam name="T">The type of object contained in the collection.</typeparam>
        </member>
        <member name="F:ININ.IceLib.Internal.ReadOnlyICollection`1._ContainedCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.ReadOnlyICollection`1"/> class.
            </summary>
            <param name="collectionToWrap">The collection to wrap.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.AsReadOnly(System.Collections.Generic.ICollection{`0})">
            <summary>
            Returns a read only wrapper around the <paramref name="collectionToWrap"/>.
            </summary>
            <param name="collectionToWrap">The collection to wrap.</param>
            <returns>The read only collection.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.Add(`0)">
            <summary>
            Add does not change a <see cref="T:ININ.IceLib.Internal.ReadOnlyICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.Clear">
            <summary>
            Clear does not change a <see cref="T:ININ.IceLib.Internal.ReadOnlyICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            <see langword="true"/> if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, <see langword="fakse"/>.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.Remove(`0)">
            <summary>
            Remove does not change a <see cref="T:ININ.IceLib.Internal.ReadOnlyICollection`1"/>
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ReadOnlyICollection`1.ThrowNotSupportedExceptionForChangeToReadOnlyCollection">
            <summary>
            Throws a <see cref="T:System.NotSupportedException"/> for an attempted change to the read-only collection.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyICollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.ReadOnlyICollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value><see langword="true"/> if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="M:ININ.IceLib.Internal.SessionWeakReferenceCache`1.#ctor(ININ.IceLib.Internal.SessionWeakReferenceCache{`0}.CreateNewSessionCachedItem)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.SessionWeakReferenceCache`1"/> class.
            </summary>
            <param name="createNewSessionCachedItem">The create new session cached item.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="createNewSessionCachedItem"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.SessionWeakReferenceCache`1.GetInstance(ININ.IceLib.Connection.Session)">
            <summary>
            Gets the object instance associated with the session.
            </summary>
            <param name="session">The session.</param>
            <returns>The TCacheObject.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="session"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Internal.ShortGuidGenerator">
            <summary>
            This class generates 22 character guid Ids, or "short GUIDs.  These Ids are standard for the
            I3DBTran/Tracker/Recorder systems.  It's also used to create unique identifiers for 
            objects such as new Prompts.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamDateTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.Read(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierReader,System.Boolean)">
            <summary>
            Read a <see cref="T:System.DateTime"/> from a message, adjusting for clock skew and AdditionalUtcOffset.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="reader">The message payload reader.</param>
            <param name="applyClockSkew">if set to <see langword="true"/> apply the clock skew.</param>
            <returns>The <see cref="T:System.DateTime"/> that was read.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.ReadRaw(ININ.ThinBridge.NotifierReader)">
            <summary>
            Read a <see cref="T:System.DateTime"/> from a message, NOT adjusting for clock skew or AdditionalUtcOffset.
            </summary>
            <param name="reader">The message payload reader.</param>
            <returns>The <see cref="T:System.DateTime"/> that was read.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>Really, only the Session itself should need to do this! (To compute the skew.)</remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.Write(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierWriter,System.DateTime,System.Boolean)">
            <summary>
            Write a <see cref="T:System.DateTime"/> to a message, adjusting for clock skew and AdditionalUtcOffset.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="writer">The message payload writer.</param>
            <param name="dateTime">The <see cref="T:System.DateTime"/> to write.</param>
            <param name="applyClockSkew">if set to <see langword="true"/> apply the clock skew.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.WriteEmptyDateTime(ININ.IceLib.Connection.Session,ININ.ThinBridge.NotifierWriter)">
            <summary>
            Write an empty <see cref="T:System.DateTime"/> to a message, with no skew or UTC adjustment.
            </summary>
            <param name="session">The session used for time offsets.</param>
            <param name="writer">The message payload writer.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamDateTime.EmptyDateTime">
            <summary>
            Returns a <see cref="T:System.DateTime"/> representing an empty value.
            </summary>
            <returns>The empty <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamErrorInformation">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadListAndThrowIfError(ININ.ThinBridge.NotifierReader)">
            <overloads>
            Helper method that reads an error description list from a NotifierReader, throwing if errors are found.
            </overloads>
            
            <summary>
            Helper method that reads an error description list from a NotifierReader, throwing if errors are found.
            </summary>
            <param name="reader">The NotifierReader from which to read the error list.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadListAndThrowIfError(System.Globalization.CultureInfo,ININ.ThinBridge.NotifierReader)">
            <summary>
            Helper method that reads an error description list from a NotifierReader, throwing if errors are found.
            </summary>
            <param name="cultureInfo">The culture info for which to load resources, if required.</param>
            <param name="reader">The NotifierReader from which to read the error list.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadAndThrowIfError(ININ.ThinBridge.NotifierReader)">
            <overloads>
            Helper method that reads an error description from a NotifierReader, throwing any errors that are found.
            </overloads>
            
            <summary>
            Helper method that reads an error description from a NotifierReader, throwing any errors that are found.
            </summary>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadAndThrowIfError(System.Globalization.CultureInfo,ININ.ThinBridge.NotifierReader)">
            <summary>
            Helper method that reads an error description from a NotifierReader, throwing any errors that are found.
            </summary>
            <param name="cultureInfo">The culture info for which to load resources, if required.</param>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadBinaryAndThrowIfError(System.Globalization.CultureInfo,ININ.Ion.Serialization.BinaryReader)">
            <summary>
            Helper method that reads an error description from a BinaryReader, throwing any errors that are found.
            </summary>
            <param name="cultureInfo">The culture info for which to load resources, if required.</param>
            <param name="reader">The BinaryReader from which to read the error.</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ThrowIfError(System.Int32,System.String,System.String[])">
            <overloads>
            Helper method that throws an IceLibException if the code represents an error.
            </overloads>
            
            <summary>
            Helper method that throws an IceLibException if the code represents an error.
            </summary>
            <param name="lastError">The error code.</param>
            <param name="lastErrorText">The error description text.</param>
            <param name="extraData">Additional data related to the error. (For a license error this should be a list of failed licenses.)</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ThrowIfError(System.Globalization.CultureInfo,System.Int32,System.String,System.String[])">
            <summary>
            Helper method that throws an IceLibException if the code represents an error.
            </summary>
            <param name="cultureInfo">The culture info for which to load resources, if required.</param>
            <param name="lastError">The error code.</param>
            <param name="lastErrorText">The error description text.</param>
            <param name="extraData">Additional data related to the error. (For a license error this should be a list of failed licenses.)</param>
            <exception cref="T:ININ.IceLib.IceLibException">The error that was found.</exception>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadLastError(ININ.ThinBridge.NotifierReader,System.Int32@,System.String@,System.Boolean,System.String[]@)">
            <summary>
            Reads a single error description from a NotifierReader.
            </summary>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <param name="lastError">The error code that was read.</param>
            <param name="lastErrorText">The error description text that was read.</param>
            <param name="alwaysReadErrorText"><see langword="true"/> if the error text should be read when the code isn't an error.</param>
            <returns><see langword="false"/> if the code represents an error.</returns>
            <param name="extraData">Additional data related to the error. (For a license error this will be a list of required but unavailable licenses.)</param>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadLastError(ININ.Ion.Serialization.BinaryReader,System.Int32@,System.String@,System.Boolean,System.String[]@)">
            <summary>
            Reads a single error description from a BinaryReader.
            </summary>
            <param name="reader">The BinaryReader from which to read the error.</param>
            <param name="lastError">The error code that was read.</param>
            <param name="lastErrorText">The error description text that was read.</param>
            <param name="alwaysReadErrorText"><see langword="true"/> if the error text should be read when the code isn't an error.</param>
            <returns><see langword="false"/> if the code represents an error.</returns>
            <param name="extraData">Additional data related to the error. (For a license error this will be a list of required but unavailable licenses.)</param>
        </member>
        <member name="M:ININ.IceLib.Internal.StreamErrorInformation.ReadLastError(ININ.ThinBridge.NotifierReader,System.Int32@,System.String@,System.Boolean)">
            <summary>
            Reads a single error description from a NotifierReader.
            </summary>
            <param name="reader">The NotifierReader from which to read the error.</param>
            <param name="lastError">The error code that was read.</param>
            <param name="lastErrorText">The error description text that was read.</param>
            <param name="alwaysReadErrorText"><see langword="true"/> if the error text should be read when the code isn't an error.</param>
            <returns><see langword="false"/> if the code represents an error.</returns>
        </member>
        <member name="T:ININ.IceLib.Internal.StreamHelpers">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.StringCompression">
            <summary>
            Contains helper methods for Zipping and Base64-encoding strings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.StringCompression.Compress(System.String)">
            <summary>
            Compresses the specified string value.
            </summary>
            <param name="value">The string value to compress.</param>
            <returns>A Base64 encoded string of the compressed value.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.StringCompression.Uncompress(System.String)">
            <summary>
            Uncompresses the specified string value.
            </summary>
            <param name="value">The string value to uncompress.  This must be a Base64 encoded string value.</param>
            <returns>The uncompressed final string value.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.StringCompression.StringToMemoryStream(System.String)">
            <summary>
            Converts a string to memory stream.
            </summary>
            <param name="value">The string value to create the memory stream from.</param>
            <returns>A <see cref="T:System.IO.MemoryStream"/> that contains the specified value bytes.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.StringCompression.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the source stream to the destination stream.
            </summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:ININ.IceLib.Internal.SystemInfo">
            <summary>
            Retrieves system information to support tracing.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Internal.SystemInfo.DISK_SYSTEM_DRIVE">
            <exclude/>
        </member>
        <member name="F:ININ.IceLib.Internal.SystemInfo.DISK_CURRENT_DRIVE">
            <exclude/>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceAllInfo">
            <summary>
            Traces all system info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceCoreInfo">
            <summary>
            Traces core info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceLoadedFileInfo">
            <summary>
            Traces loaded file info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceOSInfo">
            <summary>
            Traces OS Info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceAssemblyInfo">
            <summary>
            Traces Assembly Info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceModuleInfo">
            <summary>
            Traces Module Info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.TraceMiscInfo">
            <summary>
            Traces Misc Info.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryOSInfo">
            <summary>
            Queries the OS info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryUserInfo">
            <summary>
            Queries the user info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryMachineInfo">
            <summary>
            Queries the machine info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryVersionInfo(System.Reflection.Assembly)">
            <summary>
            Queries the version info.
            </summary>
            <param name="p_Assembly">The assembly.</param>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryLoadedAssembliesInfo">
            <summary>
            Queries the loaded assemblies info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryLoadedModulesInfo">
            <summary>
            Queries the loaded modules info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryScreenInfo">
            <summary>
            Queries the screen info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryNetworkInfo">
            <summary>
            Queries the network info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryDiskInfo(System.Char)">
            <summary>
            Queries the disk info.
            </summary>
            <param name="p_DriveLetter">The drive letter.</param>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryEnvironmentVars">
            <summary>
            Queries the environment vars.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.SystemInfo.QueryTimeZoneInfo">
            <summary>
            Queries the time zone info.
            </summary>
            <returns>A trace fragment.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.ThreadingHelpers.SafeAddIfNotContainsKey``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Threading.ReaderWriterLock)">
            <summary>
            Sets a value in the <paramref name="dictionary"/> inside a writer lock if there is no current value for the <paramref name="key"/>.
            </summary>
            <typeparam name="TKey">The type of the dictionary <paramref name="key"/>.</typeparam>
            <typeparam name="TValue">The type of the <paramref name="value"/> to be stored.</typeparam>
            <param name="dictionary">The <c>Dictionary</c> that <paramref name="value"/> will be added to.</param>
            <param name="key">The dictionary key for <paramref name="value"/>.</param>
            <param name="value">The value to be inserted into the <paramref name="dictionary"/>.</param>
            <param name="readerWriterLock">The <see cref="T:System.Threading.ReaderWriterLock"/> used to protect the <paramref name="dictionary"/>.</param>
            <remarks>This method gets a write lock on the <see cref="T:System.Threading.ReaderWriterLock"/> that protects <paramref name="dictionary"/>, 
            checks that <paramref name="dictionary"/> still does not contain an entry for the <paramref name="key"/> passed in, and then creates an entry
            using that key.  This protects against race conditions where the entry would be overwritten because two or more threads entered the queue to get
            a write-lock on <paramref name="readerWriterLock"/> before any thread created the entry.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.UniqueId">
            <exclude/>
            <summary>
            Helper class to create a unique positive ID, with thread safety.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.UniqueId.Next">
            <summary>
            Creates an ID for use in identifying an async operation.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.WatchedObjectsCache`3">
            <exclude/><summary>
            Internal caching of a group of like objects.
            </summary>
            <remarks>Borrowed and modified from <c>People.PeopleWatchedObjectsCache</c>.
            <c>TObjectEntry</c> is the type of objects stored. <c>TObjectHelper</c> is the type of object that
            can merge objects stored in the cache (usually <c>TObjectEntry</c> objects have a member of type <c>TObjectHelper</c>.
            <c>TPropertyEnum</c> is an enumeration that lists the properties of the cached object that can change.  This is used
            for granular change notifications, etc.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.#ctor(ININ.IceLib.Connection.Session,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Internal.WatchedObjectsCache`3"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="watchingAllObjectsHint">if set to <see langword="true"/> if watching all objects.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.IsWatching(System.Object)">
            <summary>
            Determines whether the specified watcher is watching.
            </summary>
            <param name="watcher">The watcher.</param>
            <returns><see langword="true"/> if the specified watcher is watching; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.IsWatchingAllObjects">
            <summary>
            Determines whether all objects are being cached.
            </summary>
            <returns><see langword="true"/> if all objects being watched; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.StartWatching(System.Object,System.String[])">
            <summary>
            Starts a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="objectNames">List of object names to watch. If <see langword="null"/>, all objects will be watched
            <c><see langword="null"/> should only be used if the object set is small</c>.</param>
            <ConnectionExceptions />
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.ChangeWatchedObjects(System.Object,System.String[],System.String[],System.Boolean)">
            <summary>
            Change the watched objects, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
            <param name="objectNamesToAdd">The object names to add.</param>
            <param name="objectNamesToRemove">The object names to remove.</param>
            <param name="replaceExisting">if set to <see langword="true"/>, replace the existing list.</param>
            <ConnectionExceptions />
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.StopWatching(System.Object)">
            <summary>
            Stops a watcher, potentially resulting in a round trip to the server.
            </summary>
            <param name="watcher">The watcher.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.StartWatchingImpl(System.String[])">
            <summary>
            Start watching implementation for inheriting classes.
            </summary>
            <param name="objectNames">The attribute names to begin the watch on.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.ChangeWatchingImpl(System.String[],System.String[])">
            <summary>
            A change in watched objects has occured.
            </summary>
            <param name="newWatchedObjects">Objects added or new to the watch.</param>
            <param name="oldWatchedObjects">Objects that were removed from the watch.</param>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.StopWatchingImpl">
            <summary>
            Stop watching implementation for inheriting class.
            This means that there are no more objects to watch.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Internal.WatchedObjectsCache`3.NotifyObjectsUpdatedImpl(System.Object,System.Collections.Generic.List{System.String})">
            <summary>
            Change notification implementation for inheriting classes.
            </summary>
            <param name="watcher">The watcher to notify.</param>
            <param name="objectNames">The names of the updated objects.</param>
        </member>
        <member name="P:ININ.IceLib.Internal.WatchedObjectsCache`3.WatchCount">
            <summary>
            Gets the number of watchers.
            </summary>
            <value>The watch count.</value>
        </member>
        <member name="P:ININ.IceLib.Internal.WatchedObjectsCache`3.Watchers">
            <summary>
            Gets the watchers.
            </summary>
            <value>The watchers.</value>
            <remarks>
            Be sure to lock while accessing the watcher list.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Internal.XmlPasswordPolicy">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.CurrentAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxNagPeriod">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MinAge">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MinLength">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.UniquenessConstraint">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AllSequentialDigitsAllowed">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.LastPasswordSetTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MaxLoginAttempts">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AccountLockoutDuration">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.AccountLockoutResetTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.LastLockoutTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MustChangePassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.MustSetPasswordTime">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.Result">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="F:ININ.IceLib.Internal.XmlPasswordPolicy.ResultString">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.FileCache.CleanupFileCache">
            <summary>
            Go through our file cache and performs an age-based
            cleanup to get the total cache size under a meg limit.
            </summary>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.DownloadSharedFile(ININ.IceLib.FileTransferSettings)">
            <summary>
            Download and cache a file, or retrieve the file 
            from the cache if the file hasn't been updated.
            </summary>
            <param name="settings">Retrieval settings.</param>
            <returns>
            The data stream, or <see langword="null"/> if the file
            is not available.
            </returns>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.DownloadFileToLocation(ININ.IceLib.FileTransferSettings,System.String)">
            <summary>
            Download a file for to a given location, or retrieve the 
            file from the cache if the file hasn't been updated.
            </summary>
            <param name="settings">Retrieval settings.</param>
            <param name="filePath">Location to download to.</param>
            <returns>
            The data stream, or <see langword="null"/> if the file
            is not available.
            </returns>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.DownloadPrivateFile(ININ.IceLib.FileTransferSettings)">
            <summary>
            Download a file with out caching it.
            </summary>
            <param name="settings">Retrieval settings.</param>
            <returns>
            The data stream, or <see langword="null"/> if the file
            is not available.
            </returns>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.FileModifiedSinceDownload(System.DateTime,System.DateTime)">
            <summary>
            Checks to see if the eTag value from the download URI response matches the dateTimeCreated of the file.
            </summary>
            <remarks>Both values should be in UTC.</remarks>
            <param name="dateTimeCreated">The date time the file was created, in UTC.</param>
            <param name="eTag">The eTag supplied from the server.</param>
            <returns><c>true</c> if the file was modified since it was last downloaded; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:ININ.IceLib.FileTransfer.UploadResults">
            <summary>
            Contains information about a file upload.
            </summary>
        </member>
        <member name="F:ININ.IceLib.FileTransfer.UploadResults.FailedResults">
            <summary>
            Gets an object that represents a failed upload.
            </summary>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.UploadResults.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.FileTransfer.UploadResults"/> class.
            </summary>
            <param name="fileDateTimeLastModified">
            The file date time last modified.  This is the eTag that the file should be marked with.
            </param>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.UploadResults.SetServerFilePath(ININ.IceLib.FileTransfer.ServerFilePath)">
            <summary>
            Sets the server file path.
            </summary>
            <param name="serverFilePath">The server file path.</param>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.UploadResults.Successful">
            <summary>
            Gets a value indicating whether this <see cref="T:ININ.IceLib.FileTransfer.UploadResults"/> is successful.
            </summary>
            <value>
            <see langword="true"/> if successful; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.UploadResults.ServerFilePath">
            <summary>
            Gets the server file path.
            </summary>
            <value>
            The server file path.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.UploadResults.FileDateTimeLastModified">
            <summary>
            Gets the file date time last modified.
            </summary>
            <value>
            The file date time last modified.
            </value>
        </member>
        <member name="T:ININ.IceLib.FileTransfer.ServerFilePath">
            <summary>
            Used to get the download and upload paths for Https and RemoteFileHelper.
            </summary>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.ServerFilePath.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.FileTransfer.ServerFilePath"/> class.
            </summary>
            <param name="serverUrl">The server URL.</param>
            <param name="serverFileName">Name of the server file.</param>
        </member>
        <member name="M:ININ.IceLib.FileTransfer.ServerFilePath.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.FileTransfer.ServerFilePath"/> class.
            </summary>
            <param name="serverUrl">The server URL.</param>
            <param name="serverFileName">Name of the server file.</param>
            <param name="eTag">The eTag, in UTC.</param>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.ServerFilePath.ServerUrl">
            <summary>
            The path to download/upload a file via Https.
            </summary>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.ServerFilePath.ServerFileName">
            <summary>
            The path to download/upload a file via RemoteFileHelper.
            </summary>
        </member>
        <member name="P:ININ.IceLib.FileTransfer.ServerFilePath.ETag">
            <summary>
            Gets the eTag for a download request.
            </summary>
            <value>
            The eTag, in UTC.
            </value>
        </member>
        <member name="T:ININ.IceLib.FileTransferProgressEventArgs">
            <summary>
            Event arguments for <see cref="M:ININ.IceLib.FileTransfer.DownloadSharedFile(ININ.IceLib.FileTransferSettings)"/> and
            <see cref="M:ININ.IceLib.FileTransfer.DownloadFileToLocation(ININ.IceLib.FileTransferSettings,System.String)"/>.
            </summary>
        </member>
        <member name="T:ININ.IceLib.FileTransferSettings">
            <summary>
            Controls how and what to transfer on a file transfer.
            </summary>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.FilePath">
            <summary>
            Gets or sets the file path of the local file.
            </summary>
            <remarks>
            For a download request, this is the base filename 
            where the file will be downloaded to.  For an upload 
            request, this is the full path to the local file 
            that will be uploaded.
            </remarks>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.Progress">
            <summary>
            Gets or sets the progress.
            </summary>
            <value>
            The progress.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.TransferComplete">
            <summary>
            Gets or sets the transfer complete.
            </summary>
            <value>
            The transfer complete.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <remarks>
            For a download request, this value is used to lock other file transfer requests, 
            to avoid contention for multiple threads trying to download the same file.  For 
            an upload request, this is used as the base filename that the uploaded file should be 
            named on the server.  If this is not set for an upload request, then the base name 
            will be retrieved from the the <see cref="P:ININ.IceLib.FileTransferSettings.FilePath"/>.
            </remarks>
            <value>
            The key.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.FileType">
            <summary>
            Gets or sets the type of the file.
            </summary>
            <value>
            The type of the file.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.AllowStaleData">
            <summary>
            Gets or sets a value indicating whether to allow stale data.
            </summary>
            <remarks>
            If stale data is allowed, then in cases where the file could not be downloaded, 
            the cached file contents will be returned, even if it is not up to date.
            </remarks>
            <value>
            <see langword="true" /> if stale data is allowed; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.CacheFileType">
            <summary>
            Gets or sets the cache file type to be handled.
            </summary>
            <remarks>
            For file downloads, this value is used to determine the location of the file in IceLib's file cache.
            For file uploads, setting this value to other than <see cref="F:ININ.IceLib.FileCacheHelper.CacheFileType.None"/>, 
            will cause the uploaded file to be copied to the local IceLib cache, and the file's eTag updated 
            to the appropriate value (as received from the HttpPluginHost).
            </remarks>
            <value>
            The cache file type to handle after a successful upload.
            </value>
        </member>
        <member name="P:ININ.IceLib.FileTransferSettings.ETag">
            <summary>
            Gets or sets the eTag for a download request.
            </summary>
            <remarks>
            After calling <see cref="M:ININ.IceLib.FileTransfer.GetDownloadFilePath(System.String,ININ.IceLib.Connection.ServerFileType)"/> or 
            <see cref="M:ININ.IceLib.FileTransfer.GetDownloadFilePath(ININ.IceLib.FileTransferSettings)"/>,
            this value will be the <see cref="P:ININ.IceLib.FileTransfer.ServerFilePath.ETag"/> value.  This value 
            is expressed as UTC.
            </remarks>
            <value>
            The eTag.
            </value>
        </member>
        <member name="T:ININ.IceLib.KeyedObjectsChangedEventArgs`2">
            <summary>
            Provides data for the watched objects changed event for a watched object. The key for the object can be any type.
            </summary>
            <typeparam name="TKeyType">The type used for the keys of the objects that changed.</typeparam>
            <typeparam name="TPropertyEnum">Type parameter to indicate the type of property values that have changed.</typeparam>
            <remarks>This class extends EventArgs, the base class for classes containing event data.  It is similar to 
            <see cref="T:ININ.IceLib.ObjectsChangedEventArgs`1"/> but allows the use of keys with types other than <c>string</c>.</remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.KeyedObjectsChangedEventArgs`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.ObjectModel.ReadOnlyCollection{`1}},System.Collections.ObjectModel.ReadOnlyCollection{`0},System.Collections.ObjectModel.ReadOnlyCollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ObjectsChangedEventArgs`1"/> class with the specified values.
            </summary>
        </member>
        <member name="P:ININ.IceLib.KeyedObjectsChangedEventArgs`2.Changed">
            <summary>
            Get the existing objects that changed. This is a map with
            the object identifier as the key and a <see cref="T:System.Collections.Generic.List`1"/> of integers
            indicating which properties have changed.
            </summary>
            <value>The changed objects.</value>
        </member>
        <member name="P:ININ.IceLib.KeyedObjectsChangedEventArgs`2.Added">
            <summary>
            Get the existing object identifiers that were added.
            </summary>
            <value>The added objects.</value>
        </member>
        <member name="P:ININ.IceLib.KeyedObjectsChangedEventArgs`2.Removed">
            <summary>
            Get the existing object identifiers that were removed.
            </summary>
            <value>The removed objects.</value>
        </member>
        <member name="T:ININ.IceLib.Localization">
            <summary>
            Helper class for accessing string from resource files.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)">
            <summary>
            Loads a string resource, localized according to the cultureInfo associated with <paramref name="session"/>.
            </summary>
            <param name="session">The session for which to load the resource.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
            <seealso cref="T:ININ.IceLib.Connection.Session"/>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage"/>
        </member>
        <member name="M:ININ.IceLib.Localization.LoadString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Loads a string resource, localized according to <paramref name="cultureInfo"/>.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="M:ININ.IceLib.Localization.LoadStringWithThreadCulture(System.String)">
            <summary>
            Don't use this if <see cref="M:ININ.IceLib.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)"/> can be used instead!
            </summary>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="T:ININ.IceLib.NamespaceDoc">
            <summary>
            <para>The <b>ININ.IceLib</b> namespace contains fundamental classes and base classes for 
            creating Interaction Center based applications.  These include commonly-used value and reference 
            data types, events and event handlers, interfaces, attributes, and processing exceptions.</para>
            <para>
            <b>Exceptions.</b> There are a number of exceptions that can be thrown throughout IceLib.  These are
            intended to allow custom applications to receive information about specific error conditions and be 
            able to handle the condition accordingly.  All such exceptions inherit from <see cref="T:ININ.IceLib.IceLibException"/>.
            Examples of Interaction classes are:
            <see cref="T:ININ.IceLib.NotCachedException"/>,
            <see cref="T:ININ.IceLib.ResourceInUseException"/>,
            and <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/>.
            </para>
            <para>
            <b>Tracing.</b> The <see cref="T:ININ.IceLib.Tracing"/> object offers support for simple tracing.
            These trace statements will be written into the Interactive Intelligence trace log for the running
            application instance.  All such trace statements will be written to the "IceLib_Custom" trace topic.
            </para>
            </summary>
            <doccompleted/>
        </member>
        <member name="T:ININ.IceLib.NotCachedException">
            <summary>
            The exception that is thrown for IceLib when a required value is not cached.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested watched value has
            not yet been cached.  This is usually due to not having a watch for that value, but can
            also happen if an asynchronous watch is requested and the value is queried before the
            asynchronous watch operation completes.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="cacheValueName">The name of the cache value.</param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.Globalization.CultureInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified cache value.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="cacheValueName">The name of the cache value.</param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="cacheValueName">The name of the cache value.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a 
            <b>catch</b> block that handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.Globalization.CultureInfo,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="cacheValueName">The name of the cache value.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a 
            <b>catch</b> block that handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.NotCachedException"/> class with a specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.NotCachedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.NotCachedException.CacheValueName">
            <summary>
            Gets the name of the cache value.
            </summary>
            <value>The name of the cache value.</value>
        </member>
        <member name="T:ININ.IceLib.ObjectsChangedEventArgs`1">
            <summary>
            Provides data for the watched objects changed event for a watched object.
            </summary>
            <typeparam name="TPropertyEnum">Type parameter to indicate the type of property values that have changed.</typeparam>
            <remarks>This class extends <see cref="T:System.EventArgs"/>, the base class for classes containing event data.</remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.ObjectsChangedEventArgs`1.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{`0}},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ObjectsChangedEventArgs`1"/> class with the specified values.
            </summary>
        </member>
        <member name="P:ININ.IceLib.ObjectsChangedEventArgs`1.Changed">
            <summary>
            Get the existing objects that changed. This is a map with
            the object identifier as the key and a <see cref="T:System.Collections.Generic.List`1"/> of integers
            indicating which properties have changed.
            </summary>
            <value>The changed objects.</value>
        </member>
        <member name="P:ININ.IceLib.ObjectsChangedEventArgs`1.Added">
            <summary>
            Get the existing object identifiers that were added.
            </summary>
            <value>The added objects.</value>
        </member>
        <member name="P:ININ.IceLib.ObjectsChangedEventArgs`1.Removed">
            <summary>
            Get the existing object identifiers that were removed.
            </summary>
            <value>The removed objects.</value>
        </member>
        <member name="T:ININ.IceLib.ResourceInUseException">
            <summary>
            The exception that is thrown for IceLib when a required resource is already in use.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested resource is already
            in use.  This can happen if a call is attempted to be parked on an Orbit queue that already
            has a call on it.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified cache value.
            </summary>
            <param name="resourceName">The name of the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.Globalization.CultureInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified cache value.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="resourceName">The name of the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified error message.
            </summary>
            <param name="resourceName">The name of the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.Globalization.CultureInfo,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="resourceName">The name of the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResourceInUseException"/> class with a specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.ResourceInUseException.ResourceName">
            <summary>
            Gets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="T:ININ.IceLib.ResultLimitExceededException">
            <summary>
            The exception that is thrown for IceLib when returned results exceed the maximum allowable amount.
            </summary>
            <remarks>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <icversion>4.0 SU 2</icversion>
        </member>
        <member name="M:ININ.IceLib.ResultLimitExceededException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResultLimitExceededException"/> class.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ResultLimitExceededException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ResultLimitExceededException"/> class.
            </summary>
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.IceLibException"/> class.
            </overloads>
        </member>
        <member name="T:ININ.IceLib.ServerOperationNotSupportedException">
            <summary>
            The exception that is thrown for IceLib when the server does not support a requested operation.
            </summary>
            <remarks>
            <para>
            This exception is thrown by various IceLib objects when a requested operation is not supported
            by the server. This can happen if the operation is implemented in a newer release of IceLib
            than the release of the server with which a Session was established.
            </para>
            <para>Like all IceLib-specific exceptions, this object derives from <see cref="T:ININ.IceLib.IceLibException"/>,
            allowing consistent exception handling for all such exceptions.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class.
            </overloads>
            
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with default settings.
            </summary>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with default settings.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with a specified error message.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with a 
            specified error message.
            </summary>
            <param name="cultureInfo">The culture info for which to load the resource.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/> 
            parameter is not <see langword="null"/>, the current exception is raised in a <b>catch</b> block that 
            handles the inner exception.
            </param>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.ServerOperationNotSupportedException"/> class with a 
            specified error message.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data 
            about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information 
            about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.ServerOperationNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="T:ININ.IceLib.Internal.SystemMetrics">
            <summary>
            Wrapper class for Win32 system metrics.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.SystemMetrics.IsRemoteSession">
            <summary>
            Gets a value indicating whether this instance is a remote session.
            </summary>
            <value>
            	<see langword="true"/> if this instance is remote session; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            Note that "remote" can be confusing given fast user switching, remote desktop, and terminal services.
            For clarity, use <see cref="P:ININ.IceLib.Internal.EnvironmentUtilities.SessionType"/>.
            </remarks>
        </member>
        <member name="T:ININ.IceLib.Tracing">
            <summary>
            Contains support for tracing into the Interactive Intelligence log file.
            </summary>
            <remarks>
            All entries logged with this mechanism will be under the topic "Icelib_Custom" in the log file
            associated with the running application that is using IceLib.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceError(System.String)">
            <summary>
            Traces an error level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceWarning(System.String)">
            <summary>
            Traces a warning level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceStatus(System.String)">
            <summary>
            Traces a status level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceNote(System.String)">
            <summary>
            Traces a note level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceVerbose(System.String)">
            <summary>
            Traces a verbose level message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceAlways(System.String)">
            <summary>
            Traces a message always, regardless of the trace level.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ININ.IceLib.Tracing.TraceException(System.Exception,System.String)">
            <summary>
            Traces an exception and message.
            </summary>
            <param name="exception">The exception.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:ININ.IceLib.TransferProgressChangedEventArgs">
            <summary>
            Members of this class provide data for TransferProgressChanged events.
            </summary>
            <remarks>
            <para>
            This object provides extended information for upload/download transfer events.  It not
            only provides a percent completion (from <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/>),
            but also includes the bytes transferred and the total used to calculate the percentage.<br/><br/>
            </para>
            <example>
            <code escaped="false" lang="C#">
            // This assumes a pre-existing session and local file.
            RemoteFileHelper remoteFileHelper = new RemoteFileHelper(session);
            string remoteFileName = remoteFileHelper.NewRemoteFileName(ServerFileType.Other);
            remoteFileHelper.UploadProgressChanged += UploadChanged;
            remoteFileHelper.UploadFile(localFileName, remoteFileName);
            ...
            private void UploadChanged(object sender, TransferProgressChangedEventArgs e)
            {
            }
            </code>
            </example>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
            <param name="bytesTransferred">The bytes transferred.</param>
            <param name="totalBytesToTransfer">The total bytes to transfer.</param>
        </member>
        <member name="M:ININ.IceLib.TransferProgressChangedEventArgs.#ctor(System.Int64,System.Int64,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.TransferProgressChangedEventArgs"/> class.
            </summary>
            <param name="bytesTransferred">The bytes transferred.</param>
            <param name="totalBytesToTransfer">The total bytes to transfer.</param>
            <param name="userState">An object that contains state information for this request.</param>
        </member>
        <member name="P:ININ.IceLib.TransferProgressChangedEventArgs.BytesTransferred">
            <summary>
            Gets the number of bytes transferred.
            </summary>
            <value>The number of bytes transferred.</value>
        </member>
        <member name="P:ININ.IceLib.TransferProgressChangedEventArgs.TotalBytesToTransfer">
            <summary>
            Gets the total number of bytes to transfer.
            </summary>
            <value>The total bytes to transfer.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.StationInfo">
            <summary>
            NOTE: Declaring this early to prevent forward-declaration issues
            TODO: Fix the C++ generator to avoid requiring this?
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.ParameterizedRequest">
            <summary>
            A base message for requests that have parameterized lists.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Internal.Messages.AuthContinueError.ChallengeNtlm">
            <summary>
            When we get an auth-continue error, the data that follows is the challenge and the temporary session id.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Internal.Messages.PrepareFileTransferURLResponse">
            <summary>
            PrepareFileTransferURLResponse
            Params:
            ServerUrl - URI to download/upload the file through the HttpPluginHost
            ServerFileName - Relative server filename that can be used by eThinManagerReq_GetUserFile/PutUserFile if the HttpPluginHost is down
            </summary>
        </member>
    </members>
</doc>
