<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ININ.IceLib.Tracker</name>
    </assembly>
    <members>
        <member name="T:ININ.IceLib.Tracker.ActiveType">
            <summary>
            This enum is used to distinguish between active entities and inactive
            entities.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.ActiveType.Inactive">
            <summary>Inactive entities.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.ActiveType.Active">
            <summary>Active entities.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.ActiveType.Both">
            <summary>Both active and Inactive entities.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.AddressType">
            <summary>Represents an address type within Tracker.</summary>
            <remarks>AddressTypes are used to classify addresses within Tracker.  The most important
            property of an AddressType is the <see cref="P:ININ.IceLib.Tracker.AddressType.Name"/> property.  This
            property is what is usually displayed to users in applications.  Typical AddressType names
            are: <b>billing</b>, <b>business</b>, <b>home</b>, and <b>shipping</b>.  Each <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>,
            <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>, and <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> contains an AddressType
            member that is used to hold the type of address that it represents.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.AddressType.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddressType.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddressType.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddressType.InsertionOrder">
            <summary>
            Gets or sets the insertion order. (Can be <see langword="null"/>.)
            </summary>
            <value>The insertion order, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddressType.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddressType.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.AddUpdateCompletedEventArgs">
            <summary>
            Provides data for asynchronously completed events of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.AddUpdateCompletedEventArgs.#ctor(System.Boolean,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.AddUpdateCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="wasAdded">A value indicating whether an item was added.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.AddUpdateCompletedEventArgs.WasAdded">
            <summary>
            Gets a value indicating whether an item was added.
            </summary>
            <value><see langword="true"/> if was added; otherwise, <see langword="false"/>.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.AdminType">
            <summary>
            This enumeration is used to distinguish between tracker 
            admin users and non tracker admin users.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AdminType.NonTrackerAdmin">
            <summary>A non-Tracker Admin.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AdminType.TrackerAdmin">
            <summary>A Tracker Admin.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.Annotation">
            <summary>Represents an annotation within Tracker.</summary>
            <remarks>
            A Tracker annotation is simply a string of text that can be associated 
            interactions and <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.  Use the <see cref="P:ININ.IceLib.Tracker.Annotation.Text"/>
            property to set the text
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Annotation.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.InteractionId">
            <summary>
            Gets or sets the interaction ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.Text">
            <summary>
            Gets or sets the text. (Can be <see langword="null"/>.)
            </summary>
            <value>The text, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Annotation.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.AnnotationView">
            <summary>Represents an annotation view within Tracker.</summary>
            <remarks>
            The AnnotationView class is used by methods that return information
            about <see cref="T:ININ.IceLib.Tracker.Annotation">Annotations</see>.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.AnnotationView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.AnnotationId">
            <summary>
            Gets or sets the annotation ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The annotation ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.Text">
            <summary>
            Gets or sets the text. (Can be <see langword="null"/>.)
            </summary>
            <value>The text, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.ICUserId">
            <summary>
            Gets or sets the IC user ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The IC user ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.AnnotationView.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.AppliesToTypes">
            <summary>
            This enum consists of a set of Tracker types that certain methods use to limit their
            result set.  For instance, the method <see cref="M:ININ.IceLib.Tracker.TrackerAdmin.GetTrackerAttributeTypes(ININ.IceLib.Tracker.AppliesToTypes)"/> uses
            this enum to determine which TrackerAttributeTypes to fetch.  An input value of <b>AppliesToTypes.Individuals</b>
            would cause the Tracker subsystem to return only TrackerAttributeTypes that are used for 
            <see cref="F:ININ.IceLib.Tracker.AppliesToTypes.Individuals"/>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AppliesToTypes.All">
            <summary>This action applies to Interactions, Individuals, Locations and Organizations.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AppliesToTypes.Interactions">
            <summary>This action only applies to Interactions.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AppliesToTypes.Individuals">
            <summary>This action only applies to Individuals.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AppliesToTypes.Locations">
            <summary>This action only applies to Locations.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.AppliesToTypes.Organizations">
            <summary>This action only applies to Organizations.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.CanViewInteractionCompletedEventArgs">
            <summary>
            Provides data for the CanViewInteractionCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.CanViewInteractionCompletedEventArgs.#ctor(System.Boolean,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.CanViewInteractionCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="canView">If set to <see langword="true"/> can view.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.CanViewInteractionCompletedEventArgs.CanView">
            <summary>
            Gets a value indicating whether an Interaction can be viewed.
            </summary>
            <value><see langword="true"/> if this instance can view an Interaction; otherwise, <see langword="false"/>.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.DirectionType">
            <summary>
            The direction types that an interaction can have.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.DirectionType.Unknown">
            <summary>
            The direction is unknown.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.DirectionType.Inbound">
            <summary>
            The direction is inbound.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.DirectionType.Outbound">
            <summary>
            The direction is outbound.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.DirectionType.Intercom">
            <summary>
            The interaction is an intercom interaction.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetCurrentSegmentOrganizationIndividualCompletedEventArgs">
            <summary>
            Provides data for the GetCurrentSegmentOrganizationIndividualCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetCurrentSegmentOrganizationIndividualCompletedEventArgs.#ctor(ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="segmentOrganizationIndividualDetails">The <see cref="P:ININ.IceLib.Tracker.GetCurrentSegmentOrganizationIndividualCompletedEventArgs.SegmentOrganizationIndividualDetails"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetCurrentSegmentOrganizationIndividualCompletedEventArgs.SegmentOrganizationIndividualDetails">
            <summary>
            Gets the segment organization individual details.
            </summary>
            <value>The segment organization individual details.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetICUserIndividualInformationCompletedEventArgs">
            <summary>
            Provides data for the GetICUserIndividualInformation event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetICUserIndividualInformationCompletedEventArgs.#ctor(ININ.IceLib.Tracker.ICUserIndividualInformation,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="icUserIndividualInformation">The <see cref="P:ININ.IceLib.Tracker.GetICUserIndividualInformationCompletedEventArgs.ICUserIndividualInformation"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetICUserIndividualInformationCompletedEventArgs.ICUserIndividualInformation">
            <summary>
            Gets the individual IC User information.
            </summary>
            <value>These details include the individual ID, organization ID and location ID  
            of the individual as well as a security checksum.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs">
            <summary>
            Provides data for the GetIndividualDetailsCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs.#ctor(ININ.IceLib.Tracker.IndividualDetails,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="individualDetails">The <see cref="P:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs.IndividualDetails"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs.IndividualDetails">
            <summary>
            Gets the individual details.
            </summary>
            <value>These details include the individual, address, interaction address, Tracker attribute views, 
            location and organization.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs">
            <summary>
            Provides data for the GetInteractionDetailsCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs.#ctor(ININ.IceLib.Tracker.InteractionDetails,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="interactionDetails">The <see cref="P:ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs.InteractionDetails"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs.InteractionDetails">
            <summary>
            Gets the interaction details.
            </summary>
            <value>The interaction details.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs">
            <summary>
            Provides data for the GetLocationDetailsCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs.#ctor(ININ.IceLib.Tracker.LocationDetails,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="locationDetails">The <see cref="P:ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs.LocationDetails"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs.LocationDetails">
            <summary>
            Gets the location details.
            </summary>
            <value>These location details provide the location, LocationAddresses, LocationInteractionAddresses, 
            interaction addresses, location Tracker attribute view, and name of the organization.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs">
            <summary>
            Provides data for the GetOrganizationDetailsCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs.#ctor(ININ.IceLib.Tracker.OrganizationDetails,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="organizationDetails">The <see cref="P:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs.OrganizationDetails"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs.OrganizationDetails">
            <summary>
            Gets the organization details.
            </summary>
            <value>The organization details include the location views, Organization, organization addresses, 
            interaction addresses, and the organization Tracker attribute views.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.GetPossibleDuplicateIndividualCompletedEventArgs">
            <summary>
            Provides data for the GetPossibleDuplicateIndividualCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.GetPossibleDuplicateIndividualCompletedEventArgs.#ctor(System.String,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.GetPossibleDuplicateIndividualCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.GetPossibleDuplicateIndividualCompletedEventArgs.IndividualId">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.Individual"/> ID associated with the event.
            </summary>
            <value>The <see cref="T:ININ.IceLib.Tracker.Individual"/> ID.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.HowEnded">
            <summary>
            This enum consists of a set of Tracker types that describe a given Segment.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.NotEnded">
            <summary>The segment has not ended.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Disconnect">
            <summary>The segment was disconnected.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.LocalDisconnect">
            <summary>The segment was locally disconnected.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.RemoteDisconnect">
            <summary>The segment was remotely disconnected.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Transfer">
            <summary>The segment was transferred.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.LocalTransfer">
            <summary>The segment was locally transferred.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.RemoteTransfer">
            <summary>The segment was remotely transferred.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Conference">
            <summary>The segment was conferenced.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.System">
            <summary>The segment was sent to the system.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Connect">
            <summary>The segment was connected.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Messaging">
            <summary>The segment was messaging.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Alert">
            <summary>The segment was alerted.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Hold">
            <summary>The segment was held.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Retrieve">
            <summary>The segment was retrieved.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Park">
            <summary>The segment was parked.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.ConsultTransfer">
            <summary>The segment was consult transferred.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.HowEnded.Grabbed">
            <summary>The segment was grabbed.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.ICUserId">
            <summary>Represents an IC user ID within Tracker.</summary>
            <remarks>Provides a mapping of IC user IDs to Tracker <see cref="P:ININ.IceLib.Tracker.Individual.IndividualId">IndividualIds</see>.</remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.ICUserId.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserId.UserId">
            <summary>
            Gets or sets the user ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The user ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserId.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ICUserIndividualInformation">
            <summary>
            Helper class to contain the results of the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetICUserIndividualInformation(System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.ICUserIndividualInformation.#ctor(System.String,System.String,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.ICUserIndividualInformation"/> class.
            </summary>
            <param name="individualId">The Individual ID.</param>
            <param name="organizationId">The Organization ID.</param>
            <param name="locationId">The Location  ID.</param>
            <param name="securityChecksum">The security checksum.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserIndividualInformation.IndividualId">
            <summary>
            Gets the Individual ID.
            </summary>
            <value>The Individual ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserIndividualInformation.OrganizationId">
            <summary>
            Gets the Organization ID.
            </summary>
            <value>The Organization ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserIndividualInformation.LocationId">
            <summary>
            Gets the Location ID.
            </summary>
            <value>The Location ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ICUserIndividualInformation.SecurityChecksum">
            <summary>
            Gets the security checksum.
            </summary>
            <value>The security checksum.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.Individual">
            <summary>Represents an individual within Tracker.</summary>
            <remarks>Information about Tracker Contacts is stored in the Individuals table
            of the Tracker database.  The IceLib Individual class provides a means for 
            accessing and updating this information.  For example, the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualDetails(System.String)"/>
            method returns an Individual.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Individual.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IndividualTypeId">
            <summary>
            Gets or sets the individual type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.TitleId">
            <summary>
            Gets or sets the title ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The title ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.MiddleName">
            <summary>
            Gets or sets the middle name. (Can be <see langword="null"/>.)
            </summary>
            <value>The middle name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.Department">
            <summary>
            Gets or sets the department. (Can be <see langword="null"/>.)
            </summary>
            <value>The department, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.Company">
            <summary>
            Gets or sets the company. (Can be <see langword="null"/>.)
            </summary>
            <value>The company, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.JobTitle">
            <summary>
            Gets or sets the job title. (Can be <see langword="null"/>.)
            </summary>
            <value>The job title, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.AssistantName">
            <summary>
            Gets or sets the name of the assistant. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the assistant, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IndividualImage">
            <summary>
            Gets or sets the individual image. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual image, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IndividualUrl">
            <summary>
            Gets or sets the individual URL. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual URL, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.WebLogin">
            <summary>
            Gets or sets the web login. (Can be <see langword="null"/>.)
            </summary>
            <value>The web login, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.WebPassword">
            <summary>
            Gets or sets the web password. (Can be <see langword="null"/>.)
            </summary>
            <value>The web password, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.ModifyDateTime">
            <summary>
            Gets or sets the modify date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The modify date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if this instance is active; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.ICUserId">
            <summary>
            Gets or sets the IC user ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The IC user ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.OwnerId">
            <summary>
            Gets or sets the owner ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The owner ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.ExternalId">
            <summary>
            Gets or sets the external ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The external ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.ExternalSource">
            <summary>
            Gets or sets the external source. (Can be <see langword="null"/>.)
            </summary>
            <value>The external source, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.ApplicationIndividualId">
            <summary>
            Gets or sets the application individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Individual.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.IndividualAddress">
            <summary>Represents an individual address within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker addresses to <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IndividualAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.AddressInstanceId">
            <summary>
            Gets or sets the address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.AddressTypeId">
            <summary>
            Gets or sets the address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.StreetAddress">
            <summary>
            Gets or sets the street address. (Can be <see langword="null"/>.)
            </summary>
            <value>The street address, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.Zip">
            <summary>
            Gets or sets the zip. (Can be <see langword="null"/>.)
            </summary>
            <value>The zip, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.IndividualDetails">
            <summary>
            Helper class to contain the results of the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualDetails(System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IndividualDetails.#ctor(ININ.IceLib.Tracker.Individual,System.String,System.String,System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.IndividualAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.IndividualInteractionAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.TrackerAttributeView})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.IndividualDetails"/> class.
            </summary>
            <param name="individual">The individual.</param>
            <param name="organizationName">Name of the organization.</param>
            <param name="locationName">Name of the location.</param>
            <param name="individualAddresses">The individual addresses.</param>
            <param name="individualInteractionAddresses">The individual interaction addresses.</param>
            <param name="individualTrackerAttributeViews">The individual Tracker attribute views.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.Individual">
            <summary>
            Gets the individual.
            </summary>
            <value>The individual.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.OrganizationName">
            <summary>
            Gets the name of the organization.
            </summary>
            <value>The name of the organization.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.LocationName">
            <summary>
            Gets the name of the location.
            </summary>
            <value>The name of the location.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.IndividualAddresses">
            <summary>
            Gets the individual addresses.
            </summary>
            <value>The individual addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.IndividualInteractionAddresses">
            <summary>
            Gets the individual interaction addresses.
            </summary>
            <value>The individual interaction addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualDetails.IndividualTrackerAttributeViews">
            <summary>
            Gets the individual Tracker attribute views.
            </summary>
            <value>The individual Tracker attribute views.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.IndividualInteractionAddress">
            <summary>Represents an individual interaction address within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker interaction addresses to <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IndividualInteractionAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.InteractionAddressInstanceId">
            <summary>
            Gets or sets the interaction address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.InteractionAddressTypeId">
            <summary>
            Gets or sets the interaction address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.InteractionAddressSubtypeId">
            <summary>
            Gets or sets the interaction address subtype ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address subtype ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value">
            <summary>
            Gets or sets the value. (Can be <see langword="null"/>.)
            </summary>
            <value>The value (e.g. JohnDoe@mycompany.com, 555-1212, etc.), or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.IndividualType">
            <summary>Represents an individual type within Tracker.</summary>
            <remarks>IndividualTypes are used to classify <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> within Tracker.  The most important
            property of an IndividualType is the <see cref="P:ININ.IceLib.Tracker.IndividualType.Name"/> property.  This
            property is what is usually displayed to users in applications.  Typical IndividualType names
            are: <b>Customer</b>, <b>External</b>, <b>IC User</b>, and <b>Partner</b>.  Each 
            <see cref="T:ININ.IceLib.Tracker.Individual"/> contains an IndividualType member that is used to hold the type of the 
            <see cref="T:ININ.IceLib.Tracker.Individual"/> that it represents.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IndividualType.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualType.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualType.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualType.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualType.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.IndividualView">
            <summary>Represents an individual view within Tracker.</summary>
            <remarks>
            The IndividualView class is used by methods that return information
            about <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchIndividuals(ININ.IceLib.Tracker.SearchIndividualsFilter)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IndividualView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.InteractionAddressInstanceId">
            <summary>
            Gets or sets the interaction address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.InteractionAddressTypeId">
            <summary>
            Gets or sets the interaction address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.InteractionAddressValue">
            <summary>
            Gets or sets the InteractionAddress value. (Can be <see langword="null"/>.)
            </summary>
            <value>The InteractionAddress value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.Type">
            <summary>
            Gets or sets the type. (Can be <see langword="null"/>.)
            </summary>
            <value>The type, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.OrganizationName">
            <summary>
            Gets or sets the name of the organization. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the organization, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.IndividualView.LocationName">
            <summary>
            Gets or sets the name of the location. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the location, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionAddressSubtype">
            <summary>Represents an interaction address subtype within Tracker.</summary>
            <remarks>InteractionAddressSubtypes are used to further classify <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">InteractionAddressTypes</see>
            within Tracker.  The most important property of an InteractionAddressSubtype is the
            <see cref="P:ININ.IceLib.Tracker.InteractionAddressSubtype.Name"/> property.  This property is what
            is usually displayed to users in applications.  Typical InteractionAddressSubtype names
            are: <b>Assistant</b>, <b>Business2</b>, <b>Home2</b>.  Each <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>,
            <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>, and <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> contains an 
            InteractionAddressSubtype member that is used to hold the address subtype that it represents.
            A typical <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> may contain an 
            interaction address type of <b>Phone</b>
            and an interaction address subtype of <b>Assistant</b>. 
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionAddressSubtype.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressSubtype.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressSubtype.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressSubtype.InsertionOrder">
            <summary>
            Gets or sets the insertion order. (Can be <see langword="null"/>.)
            </summary>
            <value>The insertion order, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressSubtype.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressSubtype.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionAddressType">
            <summary>Represents an interaction address type within Tracker.</summary>
            <remarks>InteractionAddressTypes are used to classify interaction addresses
            within Tracker.  The most important property of an InteractionAddressType is the
            <see cref="P:ININ.IceLib.Tracker.InteractionAddressType.Name"/> property.  This property is what
            is usually displayed to users in applications.  Typical InteractionAddressType names
            are: <b>Chat</b>, <b>Email</b>, <b>Fax</b>, and <b>Pager</b>.  Each <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>,
            <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>, and <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> contains an 
            InteractionAddressType member that is used to hold the address type that it represents.
            A typical <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> may contain an 
            interaction address type of <b>Phone</b>
            and an interaction address subtype of <b>Assistant</b>. 
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionAddressType.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressType.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressType.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressType.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionAddressType.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionDetails">
            <summary>
            Helper class to contain the results from the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionDetails.#ctor(ININ.IceLib.Tracker.InteractionSegment,System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.InteractionParticipantView},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.AnnotationView},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.TrackerAttributeView})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.InteractionDetails"/> class.
            </summary>
            <param name="interactionSegment">The interaction segment.</param>
            <param name="participantViews">The participant views.</param>
            <param name="annotationViews">The annotation views.</param>
            <param name="trackerAttributeViews">The Tracker attribute views.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionDetails.InteractionSegment">
            <summary>
            Gets the interaction segment.
            </summary>
            <value>The interaction segment.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionDetails.ParticipantViews">
            <summary>
            Gets the participant views.
            </summary>
            <value>The participant views.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionDetails.AnnotationViews">
            <summary>
            Gets the annotation views.
            </summary>
            <value>The annoation views.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionDetails.TrackerAttributeViews">
            <summary>
            Gets the Tracker attribute views.
            </summary>
            <value>The Tracker attribute views.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionParticipantView">
            <summary>Represents an interaction participant view within Tracker.</summary>
            <remarks>
            The InteractionParticipantView class is used by methods that return information
            about Participants.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionParticipantView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.MiddleName">
            <summary>
            Gets or sets the middle name. (Can be <see langword="null"/>.)
            </summary>
            <value>The middle name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.OrganizationName">
            <summary>
            Gets or sets the name of the organization. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the organization, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.InteractionParticipantId">
            <summary>
            Gets or sets the interaction participant ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction participant ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.Role">
            <summary>
            Gets or sets the role. (Can be <see langword="null"/>.)
            </summary>
            <value>The role, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.StartDateTime">
            <summary>
            Gets or sets the start date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The start date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.Duration">
            <summary>
            Gets or sets the duration. (Can be <see langword="null"/>.)
            </summary>
            <value>The duration, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.CallIdKey">
            <summary>
            Gets or sets the call ID key. (Can be <see langword="null"/>.)
            </summary>
            <value>The call ID key, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.IsRecorded">
            <summary>
            Gets or sets a value indicating whether this instance is recorded. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is recorded; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.RecordingStartOffset">
            <summary>
            Gets or sets the recording start offset. (Can be <see langword="null"/>.)
            </summary>
            <value>The recording start offset, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.RecordingStopOffset">
            <summary>
            Gets or sets the recording stop offset. (Can be <see langword="null"/>.)
            </summary>
            <value>The recording stop offset, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.InteractionAddressValue">
            <summary>
            Gets or sets the InteractionAddress value. (Can be <see langword="null"/>.)
            </summary>
            <value>The InteractionAddress value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.DisplayName">
            <summary>
            Gets or sets the display name. (Can be <see langword="null"/>.)
            </summary>
            <value>The display name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.StationName">
            <summary>
            Gets or sets the name of the station. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the station, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.DateOffset">
            <summary>
            Gets or sets the date offset. (Can be <see langword="null"/>.)
            </summary>
            <value>The date offset, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.HowEnded">
            <summary>
            Gets or sets how the interaction ended. (Can be <see langword="null"/>.)
            </summary>
            <value>How the interaction ended.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionParticipantView.WrapUpCode">
            <summary>
            Gets or sets the wrap up code. (Can be <see langword="null"/>.)
            </summary>
            <value>The wrap up code, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionSegment">
            <summary>Represents an interaction segment within Tracker.</summary>
            <remarks>
            As interactions progress through an xIC system, they can be divided into segments.
            Segmentation occurs, for example, when a call is transfered from one party to another.
            The InteractionSegment class is used to store information about such segments.
            <para>The <see cref="T:ININ.IceLib.Tracker.TrackerUser"/> <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)"/> method can be used to retrieve
            segment information.</para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionSegment.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.TypeId">
            <summary>
            Gets or sets the type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.PreviousInteractionId">
            <summary>
            Gets or sets the previous interaction ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The previous interaction ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.NextInteractionId">
            <summary>
            Gets or sets the next interaction ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The next interaction ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.ConferenceId">
            <summary>
            Gets or sets the conference ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The conference ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.SegmentLog">
            <summary>
            Gets or sets the segment log. (Can be <see langword="null"/>.)
            </summary>
            <value>The segment log, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.SegmentTypes">
            <summary>
            Gets or sets the segment type. (Can be <see langword="null"/>.)
            </summary>
            <value>The segment type, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.InteractionInstantiatedDateTime">
            <summary>
            Gets or sets the interaction instantiated date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction instantiated date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.StartDateTime">
            <summary>
            Gets or sets the start date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The start date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.Duration">
            <summary>
            Gets or sets the duration. (Can be <see langword="null"/>.)
            </summary>
            <value>The duration, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.Direction">
            <summary>
            Gets or sets the direction. (Can be <see langword="null"/>.)
            </summary>
            <value>The direction, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.Workgroup">
            <summary>
            Gets or sets the workgroup. (Can be <see langword="null"/>.)
            </summary>
            <value>The workgroup, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.EmailSubject">
            <summary>
            Gets or sets the email subject. (Can be <see langword="null"/>.)
            </summary>
            <value>The email subject, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.EmailPriority">
            <summary>
            Gets or sets the email priority. (Can be <see langword="null"/>.)
            </summary>
            <value>The email priority, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.EmailCc">
            <summary>
            Gets or sets the email CC. (Can be <see langword="null"/>.)
            </summary>
            <value>The email CC, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.AccountCode">
            <summary>
            Gets or sets the account code. (Can be <see langword="null"/>.)
            </summary>
            <value>The account code, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.DateOffset">
            <summary>
            Gets or sets the date offset. (Can be <see langword="null"/>.)
            </summary>
            <value>The date offset, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.ApplicationIncidentId">
            <summary>
            Gets or sets the application incident ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application incident ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.ModifyDateTime">
            <summary>
            Gets or sets the modify date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The modify date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionSegment.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionType">
            <summary>
            Represents the various interaction types within Interaction Center.
            </summary>
            <remarks>Use this enum wherever an interaction type is required.
            The <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> method <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchForResolutionCandidates(System.String,ININ.IceLib.Tracker.InteractionType,System.String,System.String,System.String,System.String,System.String,System.String)"/> uses
            InteractionType.
            </remarks>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.Unknown">
            <summary>The type of interaction is unknown.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.Call">
            <summary>The interaction is a call.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.Chat">
            <summary>The interaction is a chat.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.Email">
            <summary>The interaction is an email.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.Fax">
            <summary>The interaction is a fax.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.WebCollaboration">
            <summary>The interaction is a web collaboration.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.InstantQuestion">
            <summary>The interaction is an instant question.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.GenericObject">
            <summary>The interaction is a generic object.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InteractionType.WorkflowItem">
            <summary>The interaction is a workflow item.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.InteractionView">
            <summary>Represents an interaction view within Tracker.</summary>
            <remarks>
            The InteractionView class is used by methods that return information
            about interactions.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchInteractions(ININ.IceLib.Tracker.SearchInteractionsFilter)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.InteractionView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.ConferenceId">
            <summary>
            Gets or sets the conference ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The conference ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.TypeId">
            <summary>
            Gets or sets the type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.Type">
            <summary>
            Gets or sets the type. (Can be <see langword="null"/>.)
            </summary>
            <value>The type, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.SegmentTypes">
            <summary>
            Gets or sets the segment type. (Can be <see langword="null"/>.)
            </summary>
            <value>The segment type, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.StartDateTime">
            <summary>
            Gets or sets the start date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The start date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.Duration">
            <summary>
            Gets or sets the duration. (Can be <see langword="null"/>.)
            </summary>
            <value>The duration, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.DateOffset">
            <summary>
            Gets or sets the date offset. (Can be <see langword="null"/>.)
            </summary>
            <value>The date offset, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.LastName1">
            <summary>
            Gets or sets the last name1. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.FirstName1">
            <summary>
            Gets or sets the first name1. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.ICUserId1">
            <summary>
            Gets or sets the IC user ID1. (Can be <see langword="null"/>.)
            </summary>
            <value>The IC user ID1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.StationName1">
            <summary>
            Gets or sets the station name1. (Can be <see langword="null"/>.)
            </summary>
            <value>The station name1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.OrganizationName1">
            <summary>
            Gets or sets the organization name1. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization name1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.DisplayName1">
            <summary>
            Gets or sets the display name1. (Can be <see langword="null"/>.)
            </summary>
            <value>The display name1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.InteractionAddressValue1">
            <summary>
            Gets or sets the InteractionAddress value1. (Can be <see langword="null"/>.)
            </summary>
            <value>The InteractionAddress value1, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.LastName2">
            <summary>
            Gets or sets the last name2. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.FirstName2">
            <summary>
            Gets or sets the first name2. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.ICUserId2">
            <summary>
            Gets or sets the IC user ID2. (Can be <see langword="null"/>.)
            </summary>
            <value>The IC user ID2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.StationName2">
            <summary>
            Gets or sets the station name2. (Can be <see langword="null"/>.)
            </summary>
            <value>The station name2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.OrganizationName2">
            <summary>
            Gets or sets the organization name2. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization name2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.DisplayName2">
            <summary>
            Gets or sets the display name2. (Can be <see langword="null"/>.)
            </summary>
            <value>The display name2, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.InteractionView.InteractionAddressValue2">
            <summary>
            Gets or sets the InteractionAddress value2. (Can be <see langword="null"/>.)
            </summary>
            <value>The InteractionAddress value2, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.InternalActiveType">
            <summary>
            For internal use only.  This enum is used to distinguish between active interactions and inactive
            interactions.  Use the converter methods in <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> to go back and forth
            between the public enum and the private enum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalActiveType.Inactive">
            <summary>Inactive entities.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalActiveType.Active">
            <summary>Active entities.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalActiveType.Both">
            <summary>Both active and Inactive entities.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.InternalAdminType">
            <summary>
            This enumeration is used to distinguish between tracker 
            admin users and non tracker admin users.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalAdminType.NonTrackerAdmin">
            <summary>A non-Tracker Admin.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalAdminType.TrackerAdmin">
            <summary>A Tracker Admin.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.InternalInteractionType">
            <summary>
            For internal use only.  Represents the various interaction types within Interaction Center.
            Use the converter functions in the TrackerSearch class to go back and forth between the
            public and internal versions of the enums.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.Unknown">
            <summary>The type of interaction is unknown.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.Call">
            <summary>The interaction is a call.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.Chat">
            <summary>The interaction is a chat.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.Email">
            <summary>The interaction is an email.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.Fax">
            <summary>The interaction is a fax.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.WebCollaboration">
            <summary>The interaction is a web collaboration.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.InstantQuestion">
            <summary>The interaction is an instant question.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.GenericObject">
            <summary>The interaction is a generic object.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalInteractionType.WorkflowItem">
            <summary>The interaction is a workflow item.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.InternalPrivateType">
            <summary>
            For internal use only.  This enum is used to distinguish between public interactions and private
            interactions.  Use the converter methods in <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> to go back and forth
            between the public enum and the private enum.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalPrivateType.Public">
            <summary>Public interactions.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalPrivateType.Private">
            <summary>Private interactions.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.InternalPrivateType.PublicAndPrivate">
            <summary>Both public and private interactions.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs">
            <summary>
            Provides data for the IsUnknownOrSystemIndividualCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs.#ctor(System.Boolean,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="isUnknownOrSystemIndividual">If set to <see langword="true"/> is unknown or system <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs.IsUnknownOrSystemIndividual">
            <summary>
            Gets a value indicating whether an Individual is recognized.
            </summary>
            <value>
            	<see langword="true"/> if this instance is unknown or system <see cref="T:ININ.IceLib.Tracker.Individual"/>; otherwise, <see langword="false"/>.
            </value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.Localization">
            <summary>
            Helper class for accessing string from resource files.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Tracker.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)">
            <summary>
            Loads a string resource, localized according to the cultureInfo associated with <paramref name="session"/>.
            </summary>
            <param name="session">The session for which to load the resource.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
            <seealso cref="T:ININ.IceLib.Connection.Session"/>
            <seealso cref="P:ININ.IceLib.Connection.SessionSettings.IsoLanguage"/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Localization.LoadString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Loads a string resource, localized according to <paramref name="cultureInfo"/>.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="M:ININ.IceLib.Tracker.Localization.LoadStringWithThreadCulture(System.String)">
            <summary>
            Don't use this if <see cref="M:ININ.IceLib.Tracker.Localization.LoadString(ININ.IceLib.Connection.Session,System.String)"/> can be used instead!
            </summary>
            <param name="resourceId">The resource ID.</param>
            <returns>The localized string resource.</returns>
        </member>
        <member name="T:ININ.IceLib.Tracker.Location">
            <summary>Represents a location within Tracker.</summary>
            <remarks>
            Tracker Locations represent physical locations of <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see>.
            An <see cref="T:ININ.IceLib.Tracker.Organization"/> can have any number of locations.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Location.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if this instance is active; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.OwnerId">
            <summary>
            Gets or sets the owner ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The owner ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.ExternalId">
            <summary>
            Gets or sets the external ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The external ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.ExternalSource">
            <summary>
            Gets or sets the external source. (Can be <see langword="null"/>.)
            </summary>
            <value>The external source, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.ApplicationLocationId">
            <summary>
            Gets or sets the application location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.UnknownIndividualId">
            <summary>
            Gets or sets the unknown individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The unknown individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.ModifyDateTime">
            <summary>
            Gets or sets the modify date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The modify date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Location.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.LocationAddress">
            <summary>Represents a location address within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker addresses to <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.LocationAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.AddressInstanceId">
            <summary>
            Gets or sets the address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.AddressTypeId">
            <summary>
            Gets or sets the address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.StreetAddress">
            <summary>
            Gets or sets the street address. (Can be <see langword="null"/>.)
            </summary>
            <value>The street address, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.Zip">
            <summary>
            Gets or sets the zip. (Can be <see langword="null"/>.)
            </summary>
            <value>The zip, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.IsDefaultAddressForIndividual">
            <summary>
            Gets or sets a value indicating whether this instance is default address for individual. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default address for individual; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.LocationDetails">
            <summary>
            Helper class to contain the return parameters for the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetLocationDetails(System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.LocationDetails.#ctor(ININ.IceLib.Tracker.Location,System.String,System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.LocationAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.LocationInteractionAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.TrackerAttributeView})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.LocationDetails"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="organizationName">Name of the organization.</param>
            <param name="locationAddresses">The location addresses.</param>
            <param name="locationInteractionAddresses">The location interaction addresses.</param>
            <param name="locationTrackerAttibuteViews">The location Tracker attibute views.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationDetails.OrganizationName">
            <summary>
            Gets the name of the organization.
            </summary>
            <value>The name of the organization.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationDetails.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationDetails.LocationAddresses">
            <summary>
            Gets the location addresses.
            </summary>
            <value>The location addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationDetails.LocationInteractionAddresses">
            <summary>
            Gets the location interaction addresses.
            </summary>
            <value>The location interaction addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationDetails.LocationTrackerAttributeViews">
            <summary>
            Gets the location Tracker attribute views.
            </summary>
            <value>The location Tracker attribute views.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.LocationInteractionAddress">
            <summary>Represents a location InteractionAddress within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker interaction addresses to <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.LocationInteractionAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.InteractionAddressInstanceId">
            <summary>
            Gets or sets the interaction address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.InteractionAddressTypeId">
            <summary>
            Gets or sets the interaction address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.InteractionAddressSubtypeId">
            <summary>
            Gets or sets the interaction address subtype ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address subtype ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.Value">
            <summary>
            Gets or sets the value. (Can be <see langword="null"/>.)
            </summary>
            <value>The value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.IsDefaultAddressForIndividual">
            <summary>
            Gets or sets a value indicating whether this instance is default address for individual. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default address for individual; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationInteractionAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.LocationName">
            <summary>Represents a location name within Tracker.</summary>
            <remarks>
            Provides a mapping between <see cref="T:ININ.IceLib.Tracker.Location">Locations</see> and names.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.LocationName.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationName.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationName.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.LocationView">
            <summary>Represents a location view within Tracker.</summary>
            <remarks>
            The LocationView class is used by methods that return information
            about <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchLocations(ININ.IceLib.Tracker.SearchLocationsFilter)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.LocationView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationView.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationView.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationView.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationView.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.LocationView.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.MultipartAccountCode">
            <summary>Represents a multipart account code within Tracker.</summary>
            <remarks>
            Multipart account codes can be assigned to Interactions.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.MultipartAccountCode.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.WorkItemId">
            <summary>
            Gets or sets the WorkItemId. (Can be <see langword="null"/>.)
            </summary>
            <value>The WorkItemId, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.AccountCode">
            <summary>
            Gets or sets the AccountCode. (Can be <see langword="null"/>.)
            </summary>
            <value>The AccountCode, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.DispositionDescription">
            <summary>
            Gets or sets the DispositionDescription. (Can be <see langword="null"/>.)
            </summary>
            <value>The DispositionDescription, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.ExternalIndividualFirstName">
            <summary>
            Gets or sets the first name of the external Individual. (Can be <see langword="null"/>.)
            </summary>
            <value>The ExternalIndividualFirstName, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.ExternalIndividualLastName">
            <summary>
            Gets or sets the last name of the external Individual. (Can be <see langword="null"/>.)
            </summary>
            <value>The ExternalIndividualLastName, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCode.ExternalIndividualOrganizationName">
            <summary>
            Gets or sets the ExternalIndividualOrganizationName. (Can be <see langword="null"/>.)
            </summary>
            <value>The ExternalIndividualOrganizationName, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.MultipartAccountCodeExtended">
            <summary>Represents an extended multipart account code within Tracker.</summary>
            <remarks>
            Multipart account codes can be assigned to Interactions.
            </remarks>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.AccountCode">
            <summary>
            Gets or sets the account code.
            </summary>
            <value>The account code.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.UserCode1">
            <summary>
            Gets or sets user code 1.
            </summary>
            <value>The user code 1.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.UserCode2">
            <summary>
            Gets or sets user code 2.
            </summary>
            <value>The user code 2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.UserCode3">
            <summary>
            Gets or sets user code 3.
            </summary>
            <value>The user code 3.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.Description1">
            <summary>
            Gets or sets description 1.
            </summary>
            <value>The description 1.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.Description2">
            <summary>
            Gets or sets description 2.
            </summary>
            <value>The description 2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.Description3">
            <summary>
            Gets or sets description 3.
            </summary>
            <value>The description 3.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.DispositionCode">
            <summary>
            Gets or sets the disposition code.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.DispositionDescription">
            <summary>
            Gets or sets the Disposition description.
            </summary>
            <value>The disposition description.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.WorkItemCodeId">
            <summary>
            Gets or sets the WorkItem code ID.
            </summary>
            <value>The work item code ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.WorkItemCodeDescription">
            <summary>
            Gets or sets the WorkItem code description.
            </summary>
            <value>The work item code description.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualId">
            <summary>
            Gets or sets the Individual ID of the internal Individual.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualFirstName">
            <summary>
            Gets or sets the internal Individual first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualMiddleName">
            <summary>
            Gets or sets the internal Individual middle name.
            </summary>
            <value>The middle name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualLastName">
            <summary>
            Gets or sets the internal Individual last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualStreetAddress">
            <summary>
            Gets or sets the internal Individual street address.
            </summary>
            <value>The street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualCity">
            <summary>
            Gets or sets the internal Individual City.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualState">
            <summary>
            Gets or sets the internal Individual State.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualZip">
            <summary>
            Gets or sets the internal Individual Zip code.
            </summary>
            <value>The zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualCountry">
            <summary>
            Gets or sets the internal Individual Country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationName">
            <summary>
            Gets or sets the internal Individual Organization name.
            </summary>
            <value>The Organization name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationStreetAddress">
            <summary>
            Gets or sets the internal Individual Organization street address.
            </summary>
            <value>The street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationCity">
            <summary>
            Gets or sets the internal Individual Organization City.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationState">
            <summary>
            Gets or sets the internal Individual Organization State.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationZip">
            <summary>
            Gets or sets the internal Individual Organization Zip code.
            </summary>
            <value>The zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationCountry">
            <summary>
            Gets or sets the internal Individual Organization Country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.InternalIndividualOrganizationDefaultInteractionAddress">
            <summary>
            Gets or sets the default InteractionAddress for the internal Individual's Organization.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualId">
            <summary>
            Gets or sets the Individual ID of the external Individual.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualFirstName">
            <summary>
            Gets or sets the external Individual first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualMiddleName">
            <summary>
            Gets or sets the external Individual middle name.
            </summary>
            <value>The middle name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualLastName">
            <summary>
            Gets or sets the external Individual last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualStreetAddress">
            <summary>
            Gets or sets the external Individual street address.
            </summary>
            <value>The street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualCity">
            <summary>
            Gets or sets the external Individual City.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualState">
            <summary>
            Gets or sets the external Individual State.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualZip">
            <summary>
            Gets or sets the external Individual Zip code.
            </summary>
            <value>The zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualCountry">
            <summary>
            Gets or sets the external Individual Country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationName">
            <summary>
            Gets or sets the external Individual Organization name.
            </summary>
            <value>The individual organization name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationStreetAddress">
            <summary>
            Gets or sets the external Individual Organization street address.
            </summary>
            <value>The street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationCity">
            <summary>
            Gets or sets the external Individual Organization City.
            </summary>
            <value>The city.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationState">
            <summary>
            Gets or sets the external Individual Organization State.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationZip">
            <summary>
            Gets or sets the external Individual Organization Zip code.
            </summary>
            <value>The zip code.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationCountry">
            <summary>
            Gets or sets the external Individual Organization Country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.MultipartAccountCodeExtended.ExternalIndividualOrganizationDefaultInteractionAddress">
            <summary>
            Gets or sets the default InteractionAddress for the external Individual's Organization.
            </summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.NamespaceDoc">
            <summary>
            <para>The <B>ININ.IceLib.Tracker</B> namespace contains classes for 
            manipulating and managing Interaction Tracker data.  The Interaction Tracker system
            consists of many entities such as Interactions, Organizations, Individuals, AddressTypes,
            and InteractionAddressTypes. Together, these entities provide Interaction Center
            users with a robust means of managing contact information, tracking interactions,
            and retrieving information pertaining to these different entities from the
            Tracker database.  A valid Tracker Access license is required for any user running
            an application that makes use of the Tracker classes.
            </para>
            <para>The three main classes in the <b>ININ.IceLib.Tracker</b> namespace are:
            </para>
            	<list type="bullet">
            	<item><see cref="T:ININ.IceLib.Tracker.TrackerAdmin"/><description> - Contains methods that perform administrative tasks.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.TrackerUser"/> - <description>Contains methods that perform typical user tasks.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> - <description>Contains methods that perform search operations.</description></item>
            	</list>
            <para>
            Each of the above classes takes a <see cref="T:ININ.IceLib.Connection.Session"/> type as an input paramater to
            its constructor.  Thus, a session must already be established before instantiating any of the above types.  Each of
            the above classes contains a <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient"/> type.  This is accesable via
            the public getter, and can be used to modify settings used during the communication with the underlying TransactionBuilder
            system.  (In most cases you will not need to modify any of these settings.)  For more information, please see the
            documentation for <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient"/> 
            and <see cref="N:ININ.IceLib.Data.TransactionBuilder"/>.
            </para>
            <para>If a user is not licensed for Tracker, eny attempt to call any methods in these classes will result
            in an <see cref="T:ININ.IceLib.IceLibLicenseException"/> being thrown.
            </para>
            <para>There are also a number of classes within the <b>ININ.IceLib.Tracker</b> namespace that provide support to the 
            classes mentioned in the preceding summary. Examples of the supporting classes are enumerations, event argument
            classes, and delegates used by events within classes.
            </para>
            <B><FONT size="+1">TrackerAdmin</FONT></B>
            <para>
            The <see cref="T:ININ.IceLib.Tracker.TrackerAdmin"/> class consists of a set of methods that allow you 
            to add, delete, update and retrieve Tracker types.  The Tracker types are:
            	<list type="bullet">
            	<item><see cref="T:ININ.IceLib.Tracker.AddressType"/><description> - Used to classify addresses within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> - <description>Used to classify interaction addresses within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> - <description>Used to further classify interaction addresses within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.IndividualType"/> - <description>Used to classify <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.OrganizationType"/> - <description>Used to classify <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> - <description>Used to classify <see cref="T:ININ.IceLib.Tracker.TrackerAttribute">Attributes</see> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.Title"/> - <description>Represent titles that can be assigned to individuals (Mr., Miss, Dr., etc.)</description></item>
            	</list>
            You will be familiar with these types if you have ever performed a Tracker administrative task in
            Interaction Administrator.  The Tracker node in Interaction Administrator allows admins to add, delete, and
            update AddressTypes, IndividualTypes, OrganizationTypes, etc.  If you want to create a .Net application
            that provides administrative capabilites for Tracker, you would use the TrackerAdmin class.
            </para>
            <example>
            The following example retrieves the list of AddressTypes from Tracker.
            The returned <b>Collection</b> of <see cref="T:ININ.IceLib.Tracker.AddressType">AddressTypes</see> is iterated over
            while each <see cref="T:ININ.IceLib.Tracker.AddressType"/> is added to a <see cref="T:System.Windows.Forms.ListView"/>.
            <code lang="C#">
            ...
            if (_TrackerAdmin != null)
            {
               // Get the address types from Tracker.
               Collection&lt;AddressType&gt; addressTypes = _TrackerAdmin.GetAddressTypes();
               foreach (AddressType addressType in addressTypes)
                {
                    ListViewItem item = new ListViewItem(addressType.Name);
                    item.ImageIndex = GetSelectedTreeNodeImageUnselected();
                    item.Tag = addressType;
                    _MainListView.Items.Add(item);
                }
            }
            </code>
            </example>
            <B><FONT size="+1">TrackerUser</FONT></B>
            <para>
            The <see cref="T:ININ.IceLib.Tracker.TrackerUser"/> class consists of a set of methods that allow you 
            to add, delete, update and retrieve Tracker data that relates to <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>,
             <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see>, and <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>.
            The main classes used here are:
            	<list type="bullet">
            	<item><see cref="T:ININ.IceLib.Tracker.Individual"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.Individual"/> within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.Organization"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.Organization"/> within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.Location"/> - <description>Represents a <see cref="T:ININ.IceLib.Tracker.Location"/> within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.Annotation"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.Annotation"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.AddressType">address</see> for an <see cref="T:ININ.IceLib.Tracker.Individual"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">interaction address</see> for an <see cref="T:ININ.IceLib.Tracker.Individual"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.AddressType">address</see> for an <see cref="T:ININ.IceLib.Tracker.Organization"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">interaction address</see> for an <see cref="T:ININ.IceLib.Tracker.Organization"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.LocationAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.AddressType">address</see> for a <see cref="T:ININ.IceLib.Tracker.Location"/> within Tracker.</description></item>
                <item><see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/> - <description>Represents an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">interaction address</see> for a <see cref="T:ININ.IceLib.Tracker.Location"/> within Tracker.</description></item>
            	</list>
            You will be familiar with these Tracker entities if you have ever used the Win32 TrackerClient application.
            The TrackerClient allows you to manage Tracker Contacts.  You can add an address for an <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            You can associate an <see cref="T:ININ.IceLib.Tracker.Individual"/> with a particular <see cref="T:ININ.IceLib.Tracker.Organization"/>.  You can
            add a new <see cref="T:ININ.IceLib.Tracker.Organization"/> or <see cref="T:ININ.IceLib.Tracker.Location"/>.  If you want to create a .Net application
            that provides these user level capabilites for Tracker, you would use the TrackerUser class.
            </para>
            <example>
            The following example creates a new <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            <code lang="C#">
            ...
            if (_TrackerUser != null)
            {
               // Instantiate the Organization.
               Organization organization = new Organization();
               annotation.Name = "My Company";
               string newID = _TrackerUser.AddOrganization(organization);
            }
            </code>
            </example>
            <B><FONT size="+1">TrackerSearch</FONT></B>
            <para>
            The <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> class consists of a set of methods that allow you 
            to search the Tracker database for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>,
            <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see>, <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>,
            and <b>Interactions</b>.
            The main classes used here are:
            	<list type="bullet">
            	<item><see cref="T:ININ.IceLib.Tracker.IndividualView"/> - <description>Contains information about an <see cref="T:ININ.IceLib.Tracker.Individual"/> within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.Organization"/> - <description>Contains information about an <see cref="T:ININ.IceLib.Tracker.Organization"/> within Tracker.</description></item>
            	<item><see cref="T:ININ.IceLib.Tracker.LocationView"/> - <description>Contains information about a <see cref="T:ININ.IceLib.Tracker.Location"/> within Tracker.</description></item>   
                <item><see cref="T:ININ.IceLib.Tracker.InteractionView"/> - <description>Contains information about an <b>Interaction</b> within Tracker.</description></item>
            	</list>
            The above classes are designed to contain a subset of information that lies within their associated
            non-view classes (e.g. <see cref="T:ININ.IceLib.Tracker.Individual"/> vs. <see cref="T:ININ.IceLib.Tracker.IndividualView"/>).
            <b>Note:</b>  There is no <b>Interaction</b> class.  Interactions are stored as
            <see cref="T:ININ.IceLib.Tracker.InteractionSegment">InteractionSegments</see> in Tracker.
            The above "View" classes are used to hold the search results when searching for about Tracker entities.
            If you want to create a .Net application that provides search capabilities, you would use the
            TrackerSearch class.
            </para>
            <example>
            The following example searches for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> with
            a last name of "Smith."  The results are then displayed in a ListView.
            <code lang="C#">
            ...
            if (_TrackerSearch != null)
            {
               // Create the input filter..
            
               SearchIndividualsFilter filter = new SearchIndividualsFilter();
               filter.FirstName = "Joe";
               filter.LastName = "Smith";
               // Create an IndividualView to hold the result..
               Collection&lt;IndividualView&gt; individualViewResults;
               // Perform the search..
               individualViewResults = _TrackerSearch.SearchIndividuals(filter);
               // Display the results of the search in a ListView..
               foreach (IndividualView individualView in individualViewResults)
                {
                    ListViewItem item = new ListViewItem(individualView.FirstName + individualView.LastName);
                    item.Tag = individualView;
                    _MainListView.Items.Add(item);
                }
            }
            </code>
            </example>
            </summary>
            <icversion>3.0</icversion>
        </member>
        <member name="T:ININ.IceLib.Tracker.NewIdCompletedEventArgs`1">
            <summary>
            Provides data for asynchronous completed events of a <see cref="T:ININ.IceLib.Tracker.TrackerUser"/>.
            </summary>
            <typeparam name="TId">The ID.</typeparam>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.NewIdCompletedEventArgs`1.#ctor(`0,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.NewIdCompletedEventArgs`1"/> class with the specified values.
            </summary>
            <param name="id">The ID.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.NewIdCompletedEventArgs`1.Id">
            <summary>
            Gets the ID associated with the event.
            </summary>
            <value>The ID.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.Organization">
            <summary>Represents an organization within Tracker.</summary>
            <remarks>An Organization represents a business entity within Tracker.
            <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> can belong to Organizations.  Organizations can
            have multiple <see cref="T:ININ.IceLib.Tracker.Location">Locations</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Organization.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.OrganizationTypeId">
            <summary>
            Gets or sets the organization type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if this instance is active; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.OwnerId">
            <summary>
            Gets or sets the owner ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The owner ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.ExternalId">
            <summary>
            Gets or sets the external ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The external ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.ExternalSource">
            <summary>
            Gets or sets the external source. (Can be <see langword="null"/>.)
            </summary>
            <value>The external source, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.ApplicationOrganizationId">
            <summary>
            Gets or sets the application organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.UnknownIndividualId">
            <summary>
            Gets or sets the unknown individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The unknown individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.ModifyDateTime">
            <summary>
            Gets or sets the modify date time. (Can be <see langword="null"/>.)
            </summary>
            <value>The modify date time, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Organization.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationAddress">
            <summary>Represents an organization address within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker addresses to <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.AddressInstanceId">
            <summary>
            Gets or sets the address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.AddressTypeId">
            <summary>
            Gets or sets the address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.StreetAddress">
            <summary>
            Gets or sets the street address. (Can be <see langword="null"/>.)
            </summary>
            <value>The street address, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.Zip">
            <summary>
            Gets or sets the zip. (Can be <see langword="null"/>.)
            </summary>
            <value>The zip, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.IsDefaultAddressForLocation">
            <summary>
            Gets or sets a value indicating whether this instance is default address for location. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default address for location; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.IsDefaultAddressForIndividual">
            <summary>
            Gets or sets a value indicating whether this instance is default address for individual. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default address for individual; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationDetails">
            <summary>
            Helper class to contain the return parameters for the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationDetails(System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationDetails.#ctor(ININ.IceLib.Tracker.Organization,System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.LocationView},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.OrganizationAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.OrganizationInteractionAddress},System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.TrackerAttributeView})">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.OrganizationDetails"/> class.
            </summary>
            <param name="organization">The organization.</param>
            <param name="locationViews">The location views.</param>
            <param name="organizationAddresses">The organization addresses.</param>
            <param name="organizationInteractionAddresses">The organization interaction addresses.</param>
            <param name="organizationTrackerAttributeViews">The organization attribute views.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationDetails.Organization">
            <summary>
            Gets the organization.
            </summary>
            <value>The organization.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationDetails.LocationViews">
            <summary>
            Gets the location views.
            </summary>
            <value>The location views.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationDetails.OrganizationAddresses">
            <summary>
            Gets the organization addresses.
            </summary>
            <value>The organization addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationDetails.OrganizationInteractionAddresses">
            <summary>
            Gets the organization interaction addresses.
            </summary>
            <value>The organization interaction addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationDetails.OrganizationTrackerAttributeViews">
            <summary>
            Gets the organization Tracker attribute views.
            </summary>
            <value>The organization Tracker attribute views.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationInteractionAddress">
            <summary>Represents an organization InteractionAddress within Tracker.</summary>
            <remarks>
            Provides a way to assign Tracker interaction addresses to <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationInteractionAddress.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.InteractionAddressInstanceId">
            <summary>
            Gets or sets the interaction address instance ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address instance ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.InteractionAddressTypeId">
            <summary>
            Gets or sets the interaction address type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.InteractionAddressSubtypeId">
            <summary>
            Gets or sets the interaction address subtype ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction address subtype ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.Value">
            <summary>
            Gets or sets the value. (Can be <see langword="null"/>.)
            </summary>
            <value>The value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.IsDefaultInteractionAddressForLocation">
            <summary>
            Gets or sets a value indicating whether this instance is the default InteractionAddress for location. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default InteractionAddress for location; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.IsDefaultInteractionAddressForIndividual">
            <summary>
            Gets or sets a value indicating whether this instance is default InteractionAddress for individual. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is default InteractionAddress for individual; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.SystemInsertDate">
            <summary>
            Gets or sets the system insert date. (Can be <see langword="null"/>.)
            </summary>
            <value>The system insert date, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationName">
            <summary>Represents an organization name within Tracker.</summary>
            <remarks>
            Provides a mapping between <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see> and names.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationName.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationName.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationName.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationType">
            <summary>Represents an organization type within Tracker.</summary>
            <remarks>OrganizationTypes are used to classify <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see> within Tracker.
            The most important property of an OrganizationType is the <see cref="P:ININ.IceLib.Tracker.OrganizationType.Name"/> property.
            This property is what is usually displayed to users in applications.  Typical OrganizationType names
            are: <b>Customer</b>, <b>Vendor</b>, <b>External</b>, and <b>Partner</b>.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationType.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationType.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationType.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationType.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationType.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.OrganizationView">
            <summary>Represents an organization view within Tracker.</summary>
            <remarks>
            The OrganizationView class is used by methods that return information
            about <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see>.  One such method is the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchOrganizations(ININ.IceLib.Tracker.SearchOrganizationsFilter)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.OrganizationView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.Type">
            <summary>
            Gets or sets the type. (Can be <see langword="null"/>.)
            </summary>
            <value>The type, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.OrganizationView.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.PrivateType">
            <summary>
            This enum is used to distinguish between public interactions and private
            interactions.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.PrivateType.Public">
            <summary>Public interactions.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.PrivateType.Private">
            <summary>Private interactions.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.PrivateType.PublicAndPrivate">
            <summary>Both public and private interactions.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs`1">
            <summary>
            Provides a collection of data for asynchronously completed events of a <see cref="T:ININ.IceLib.Tracker.TrackerAdmin"/>.
            </summary>
            <typeparam name="TResult">The result.</typeparam>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs`1.#ctor(System.Collections.ObjectModel.Collection{`0},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs`1"/> class with the specified values.
            </summary>
            <param name="result">The <see cref="T:System.Collections.ObjectModel.Collection`1"/> of results.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">if set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs`1.Result">
            <summary>
            Gets the result associated with the event.
            </summary>
            <value>The result.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.QueryResultCompletedEventArgs`1">
            <summary>
            Provides data for asynchronously completed events of a <see cref="T:ININ.IceLib.Tracker.TrackerAdmin"/>.
            </summary>
            <typeparam name="TResult">The result.</typeparam>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.QueryResultCompletedEventArgs`1.#ctor(`0,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.QueryResultCompletedEventArgs`1"/> class with the specified values.
            </summary>
            <param name="result">The result.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.QueryResultCompletedEventArgs`1.Result">
            <summary>
            Gets the result associated with the event.
            </summary>
            <value>The result.</value>
            <ininAsyncCompletedParamException/>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation">
            <summary>Represents reverse InteractionAddress lookup information within Tracker.</summary>
            <remarks>
            The <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> method <see cref="M:ININ.IceLib.Tracker.TrackerSearch.ReverseInteractionAddressLookup(System.String,ININ.IceLib.Tracker.InteractionType,System.String)"/> uses
            the ReverseInteractionAddressLookupInformation class to return the results of the lookup.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.IndividualId">
            <summary>
            Gets or sets the individual ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.MiddleName">
            <summary>
            Gets or sets the middle name. (Can be <see langword="null"/>.)
            </summary>
            <value>The middle name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.ICUserId">
            <summary>
            Gets or sets the IC user ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The IC user ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Department">
            <summary>
            Gets or sets the department. (Can be <see langword="null"/>.)
            </summary>
            <value>The department, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Company">
            <summary>
            Gets or sets the company. (Can be <see langword="null"/>.)
            </summary>
            <value>The company, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private. (Can be <see langword="null"/>.)
            </summary>
            <value>
            	<see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.LocationId">
            <summary>
            Gets or sets the location ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.LocationName">
            <summary>
            Gets or sets the name of the location. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the location, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.OrganizationId">
            <summary>
            Gets or sets the organization ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.OrganizationName">
            <summary>
            Gets or sets the name of the organization. (Can be <see langword="null"/>.)
            </summary>
            <value>The name of the organization, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.StreetAddress">
            <summary>
            Gets or sets the street address. (Can be <see langword="null"/>.)
            </summary>
            <value>The street address, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.State">
            <summary>
            Gets or sets the state. (Can be <see langword="null"/>.)
            </summary>
            <value>The state, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Zip">
            <summary>
            Gets or sets the zip. (Can be <see langword="null"/>.)
            </summary>
            <value>The zip, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Phone">
            <summary>
            Gets or sets the phone. (Can be <see langword="null"/>.)
            </summary>
            <value>The phone, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Fax">
            <summary>
            Gets or sets the fax. (Can be <see langword="null"/>.)
            </summary>
            <value>The fax, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Email">
            <summary>
            Gets or sets the email. (Can be <see langword="null"/>.)
            </summary>
            <value>The email, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation.Web">
            <summary>
            Gets or sets the web. (Can be <see langword="null"/>.)
            </summary>
            <value>The web, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesCommonInfo">
            <summary>
            Holds common information used during reverse whitepage operations.
            </summary>
            <remarks>Use this class to hold common reverse whitepage information.</remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesCommonInfo.ExternalId">
            <summary>
            Gets or sets the external ID.
            </summary>
            <value>The external ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesCommonInfo.ExternalSource">
            <summary>
            Gets or sets the external source.
            </summary>
            <value>The external source.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesCommonInfo.Remarks">
            <summary>
            Gets or sets the remarks.
            </summary>
            <value>The remarks.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo">
            <summary>
            Holds general information used during reverse whitepage operations.
            </summary>
            <remarks>Use this class to hold general reverse whitepage information.</remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.InteractionAddress">
            <summary>
            Gets or sets the interaction address.
            </summary>
            <value>The interaction Address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.InteractionType">
            <summary>
            Gets or sets the interaction type.
            </summary>
            <value>The interaction type.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.IsPrivate">
            <summary>
            Gets or sets a value indicating whether this instance is private.
            </summary>
            <value><see langword="true"/> if this instance is private; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.Replicate">
            <summary>
            This will be <see langword="true"/> if this contact should be replicated.
            </summary>
            <value><see langword="true"/> if this contact should be replicated; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.IsDefinitiveResult">
            <summary>
            Will be <see langword="true"/> if this result is definitive.
            </summary>
            <value><see langword="true"/> if this result is definitive; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.IsStopSource">
            <summary>
            Will be <see langword="true"/> if this is the stop source.
            </summary>
            <value><see langword="true"/> if this is the stop source; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.ICInteractionAttribute">
            <summary>
            Gets or sets the IC Interaction Attribute.
            </summary>
            <value>The IC Interaction Attribute.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.ContactSummary">
            <summary>
            Gets or sets the contact summary.
            </summary>
            <value>The contact summary.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.Origin">
            <summary>
            Gets or sets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.InteractionDirection">
            <summary>
            Gets or sets the interaction direction.
            </summary>
            <value>The interaction direction.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesGeneralInfo.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo">
            <summary>
            Holds information about an individual that is used during reverse whitepage operations.
            </summary>
            <remarks>Use this class to hold reverse whitepage information about an individual.</remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessStreetAddress">
            <summary>
            Gets or sets the business street address.
            </summary>
            <value>The business street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessCity">
            <summary>
            Gets or sets the business City.
            </summary>
            <value>The business City.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessState">
            <summary>
            Gets or sets the business State.
            </summary>
            <value>The business State.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessZip">
            <summary>
            Gets or sets the business Zip.
            </summary>
            <value>The business Zip.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessCountry">
            <summary>
            Gets or sets the business Country.
            </summary>
            <value>The business Country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeStreetAddress">
            <summary>
            Gets or sets the home street address.
            </summary>
            <value>The home street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeCity">
            <summary>
            Gets or sets the home City.
            </summary>
            <value>The home City.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeState">
            <summary>
            Gets or sets the home State.
            </summary>
            <value>The home State.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeZip">
            <summary>
            Gets or sets the home Zip.
            </summary>
            <value>The home Zip.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeCountry">
            <summary>
            Gets or sets the home Country.
            </summary>
            <value>The home Country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessEmail">
            <summary>
            Gets or sets the business email address.
            </summary>
            <value>The business email address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessPhone">
            <summary>
            Gets or sets the business phone.
            </summary>
            <value>The business phone.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessPhone2">
            <summary>
            Gets or sets the business phone2.
            </summary>
            <value>The business phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessMobile">
            <summary>
            Gets or sets the business mobile.
            </summary>
            <value>The business mobile.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessFax">
            <summary>
            Gets or sets the business fax.
            </summary>
            <value>The business fax.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessPager">
            <summary>
            Gets or sets the business pager.
            </summary>
            <value>The business pager.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessChat">
            <summary>
            Gets or sets the business chat URL.
            </summary>
            <value>The business chat URL.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.BusinessUrl">
            <summary>
            Gets or sets the business Url (homepage).
            </summary>
            <value>The business URL.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.AssistantPhone">
            <summary>
            Gets or sets the assistant phone.
            </summary>
            <value>The assistant phone.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomePhone">
            <summary>
            Gets or sets the home phone.
            </summary>
            <value>The home phone.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeEmail">
            <summary>
            Gets or sets the home email.
            </summary>
            <value>The home email.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomePhone2">
            <summary>
            Gets or sets the home phone2.
            </summary>
            <value>The home phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeMobile">
            <summary>
            Gets or sets the home mobile.
            </summary>
            <value>The home mobile.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeFax">
            <summary>
            Gets or sets the home fax.
            </summary>
            <value>The home fax.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomePager">
            <summary>
            Gets or sets the home pager.
            </summary>
            <value>The home pager.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeChat">
            <summary>
            Gets or sets the home chat.
            </summary>
            <value>The home chat.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.HomeUrl">
            <summary>
            Gets or sets the home URL (homepage).
            </summary>
            <value>The home URL.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.IndividualId">
            <summary>
            Gets or sets the individual ID.
            </summary>
            <value>The individual ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.ICUserId">
            <summary>
            Gets or sets the IC User ID.
            </summary>
            <value>The IC User ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.StationName">
            <summary>
            Gets or sets the station name.
            </summary>
            <value>The station name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.MiddleName">
            <summary>
            Gets or sets the middle name.
            </summary>
            <value>The middle name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The individual last name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>The job title.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>The company.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.Department">
            <summary>
            Gets or sets the department.
            </summary>
            <value>The department.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.AssistantName">
            <summary>
            Gets or sets the assistant name.
            </summary>
            <value>The assistant name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.ImageFile">
            <summary>
            Gets or sets the image file.
            </summary>
            <value>The image file.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.WebLogin">
            <summary>
            Gets or sets the web login.
            </summary>
            <value>The web login.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.WebPassword">
            <summary>
            Gets or sets the web password.
            </summary>
            <value>The web password.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.ApplicationId">
            <summary>
            Gets or sets the application ID.
            </summary>
            <value>The individual application ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.ExternalId">
            <summary>
            Gets or sets the external ID.
            </summary>
            <value>The external ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.ExternalSource">
            <summary>
            Gets or sets the external source.
            </summary>
            <value>The external source.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.Remarks">
            <summary>
            Gets or sets the remarks.
            </summary>
            <value>The remarks.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.IndividualTypeId">
            <summary>
            Gets or sets the individual type ID.
            </summary>
            <value>The individual type ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesIndividualInfo.TitleId">
            <summary>
            Gets or sets the title ID.
            </summary>
            <value>The title ID.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesInfo">
            <summary>
            Holds reverse whitepages lookup information that Tracker Server sends or receives.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.ReverseWhitepagesInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.ReverseWhitepagesInfo"/> class.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesInfo.IndividualInfo">
            <summary>
            Gets or sets the individual info.
            </summary>
            <value>The individual info.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesInfo.OrganizationInfo">
            <summary>
            Gets or sets the organization info.
            </summary>
            <value>The organization info.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesInfo.LocationInfo">
            <summary>
            Gets or sets the location info.
            </summary>
            <value>The location info.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesInfo.GeneralInfo">
            <summary>
            Gets or sets the general info.
            </summary>
            <value>The general info.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesInfo.CommonInfo">
            <summary>
            Gets or sets the common info.
            </summary>
            <value>The common info.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo">
            <summary>
            Holds information about a location that is used during reverse whitepage operations.
            </summary>
            <remarks>Use this class to hold reverse whitepage information about a location.</remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.Name">
            <summary>
            Gets or sets the location name.
            </summary>
            <value>The location name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.LocationId">
            <summary>
            Gets or sets the location ID.
            </summary>
            <value>The location ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.ApplicationId">
            <summary>
            Gets or sets the application ID.
            </summary>
            <value>The application ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.ExternalId">
            <summary>
            Gets or sets the external ID.
            </summary>
            <value>The external ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.ExternalSource">
            <summary>
            Gets or sets the external source.
            </summary>
            <value>The external source.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.Remarks">
            <summary>
            Gets or sets remarks.
            </summary>
            <value>The remarks.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessStreetAddress">
            <summary>
            Gets or sets the business street address.
            </summary>
            <value>The business street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessCity">
            <summary>
            Gets or sets the business City.
            </summary>
            <value>The business City.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessState">
            <summary>
            Gets or sets the business State.
            </summary>
            <value>The business State.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessZip">
            <summary>
            Gets or sets the business Zip.
            </summary>
            <value>The business Zip.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessCountry">
            <summary>
            Gets or sets the business Country.
            </summary>
            <value>The business Country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessEmail">
            <summary>
            Gets or sets the business email.
            </summary>
            <value>The business email.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessPhone">
            <summary>
            Gets or sets the business phone.
            </summary>
            <value>The business phone.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessPhone2">
            <summary>
            Gets or sets the business phone2.
            </summary>
            <value>The business phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessMobile">
            <summary>
            Gets or sets the business mobile.
            </summary>
            <value>The business mobile.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessFax">
            <summary>
            Gets or sets the business Fax.
            </summary>
            <value>The business Fax.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessPager">
            <summary>
            Gets or sets the business pager.
            </summary>
            <value>The business pager.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessChat">
            <summary>
            Gets or sets the business chat.
            </summary>
            <value>The business chat.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesLocationInfo.BusinessUrl">
            <summary>
            Gets or sets the business URL.
            </summary>
            <value>The business URL.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo">
            <summary>
            Holds information about an organization that is used during reverse whitepage operations.
            </summary>
            <remarks>Use this class to hold reverse whitepage information about an organization.</remarks>
            <doccompleted/>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.Name">
            <summary>
            Gets or sets the name for this organization.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.OrganizationId">
            <summary>
            Gets or sets the organization ID.
            </summary>
            <value>The organization ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.OrganizationTypeId">
            <summary>
            Gets or sets the organization type ID.
            </summary>
            <value>The organization type ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.ApplicationId">
            <summary>
            Gets or sets the application ID.
            </summary>
            <value>The application ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.ExternalId">
            <summary>
            Gets or sets external ID for this contact.
            </summary>
            <value>The external ID for this contact.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.ExternalSource">
            <summary>
            Gets or sets the external source for this contact.
            </summary>
            <value>The external source.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.Remarks">
            <summary>
            Gets or sets the remarks.
            </summary>
            <value>The remarks.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessStreetAddress">
            <summary>
            Gets or sets the business street address.
            </summary>
            <value>The business street address.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessCity">
            <summary>
            Gets or sets the business City.
            </summary>
            <value>The business City.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessState">
            <summary>
            Gets or sets the business State.
            </summary>
            <value>The business State.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessZip">
            <summary>
            Gets or sets the business Zip.
            </summary>
            <value>The business Zip.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessCountry">
            <summary>
            Gets or sets the business Country.
            </summary>
            <value>The business Country.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessEmail">
            <summary>
            Gets or sets the business email.
            </summary>
            <value>The business email.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessPhone">
            <summary>
            Gets or sets the business phone.
            </summary>
            <value>The business phone.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessPhone2">
            <summary>
            Gets or sets the business phone2.
            </summary>
            <value>The business phone2.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessMobile">
            <summary>
            Gets or sets the business mobile.
            </summary>
            <value>The business mobile.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessFax">
            <summary>
            Gets or sets the business fax.
            </summary>
            <value>The business fax.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessPager">
            <summary>
            Gets or sets the business pager.
            </summary>
            <value>The business pager.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessChat">
            <summary>
            Gets or sets the business chat (URL).
            </summary>
            <value>The business chat.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.ReverseWhitepagesOrganizationInfo.BusinessUrl">
            <summary>
            Gets or sets the business URL (homepage).
            </summary>
            <value>The business URL.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.RoleType">
            <summary>This enum consists of a set of Tracker types that describe the various roles
            that an <see cref="T:ININ.IceLib.Tracker.Individual"/> can play in an interaction.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.RoleType.Unknown">
            <summary>The role of the Individual not known.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.RoleType.Initiator">
            <summary>The Individual initiated the interaction.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.RoleType.Respondent">
            <summary>The Individual responded to (e.g answered) the interaction.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.RoleType.Participant">
            <summary>The Individual was a participant in the interaction (in a conference call, for instance).</summary>
        </member>
        <member name="T:ININ.IceLib.Internal.RWPResultSet">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultSet.Results">
            <summary>
            Gets or sets the result rows.
            </summary>
            <value>The result rows.</value>
        </member>
        <member name="T:ININ.IceLib.Internal.RWPResultXML">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="M:ININ.IceLib.Internal.RWPResultXML.ToString">
            <summary>
            Returns a string representation of RWPResultXML.
            </summary>
            <returns>The RWPResultXML properties in string form.</returns>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.SpecialICInteractionId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessStreetAddress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessCity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessZip">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessCountry">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeStreetAddress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeCity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeZip">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeCountry">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessPhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessPhone2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessMobile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessFax">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessPager">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivBusinessUrl">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivAssistantPhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomePhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomePhone2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeMobile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeFax">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomePager">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivHomeUrl">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivIndividualId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivICUserId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivStationName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivFirstName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivMiddleName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivLastName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivJobTitle">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivCompany">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivDepartment">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivAssistantName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivImageFile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivUrl">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivWebLogin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivWebPassword">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivApplicationId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivGender">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivIndividualExternalId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivIndividualExternalSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivIndividualRemarks">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivIndividualTypeId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.IndivTitleId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgOrganizationId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgOrganizationTypeId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgApplicationId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgExternalId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgExternalSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgRemarks">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessStreetAddress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessCity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessZip">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessCountry">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessPhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessPhone2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessMobile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessFax">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessPager">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.OrgBusinessUrl">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocLocationId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocApplicationId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocExternalId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocExternalSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocRemarks">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessStreetAddress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessCity">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessState">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessZip">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessCountry">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessEmail">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessPhone">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessPhone2">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessMobile">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessFax">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessPager">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessChat">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.LocBusinessUrl">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralInteractionAddress">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralInteractionType">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralIsPrivate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralReplicate">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralIsDefinitiveResult">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralIsStopSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralICInteractionAttribute">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralDisplayName">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralContactSummary">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralOrigin">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralInteractionDirection">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.GeneralOwner">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.CommonExternalId">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.ExternalSource">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="P:ININ.IceLib.Internal.RWPResultXML.CommonRemarks">
            <exclude/><summary>For internal use only.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.SearchForResolutionCandidatesCompletedEventArgs">
            <summary>
            Provides data for the SearchForResolutionCandidatesCompleted event of a <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/>.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchForResolutionCandidatesCompletedEventArgs.#ctor(System.Collections.ObjectModel.Collection{ININ.IceLib.Tracker.ReverseWhitepagesInfo},System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SearchForResolutionCandidatesCompletedEventArgs"/> class with the specified values.
            </summary>
            <param name="reverseWhitepagesInfos">The collection of reverse whitepages information.</param>
            <param name="error">The error, if one occurred.</param>
            <param name="cancelled">If set to <see langword="true"/> the operation was cancelled.</param>
            <param name="userState">An object that contains state information for this request.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchForResolutionCandidatesCompletedEventArgs.ReverseWhitepagesInfos">
            <summary>
            Gets the result rows associated with the event.
            </summary>
            <value>The result rows.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.SearchIndividualsFilter">
            <summary>
            This class represents a filter that is used to search <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.
            </summary>
            <remarks>Use an instance of this class as an input to the <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/>
            <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchIndividuals(ININ.IceLib.Tracker.SearchIndividualsFilter)"/> method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchIndividualsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SearchIndividualsFilter"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchIndividualsFilter.ToString">
            <summary>
            Converts the SearchIndividualsFilter object into a string that is formatted properly for
            the SearchIndividuals method.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:ININ.IceLib.Tracker.SearchIndividualsFilter"></see>.
            </returns>
            <remarks>Can also be useful for tracing out the search filter.</remarks>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.MiddleName">
            <summary>
            Gets or sets the middle names. (Can be <see langword="null"/>.)
            </summary>
            <value>The middle name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Address">
            <summary>
            Gets or sets the address. (Can be <see langword="null"/>.)
            </summary>
            <value>The address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.StateOrProvince">
            <summary>
            Gets or sets the state (or province). (Can be <see langword="null"/>.)
            </summary>
            <value>The state (or province), or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.PostalCode">
            <summary>
            Gets or sets the postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.InteractionAddress">
            <summary>
            Gets or sets the interaction address for the individual. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.OrganizationName">
            <summary>
            Gets or sets the organization name. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.LocationName">
            <summary>
            Gets or sets the location name. (Can be <see langword="null"/>.)
            </summary>
            <value>The location name, or <see langword="null"/>.</value>        
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Department">
            <summary>
            Gets or sets the department. (Can be <see langword="null"/>.)
            </summary>
            <value>The department, or <see langword="null"/>.</value>        
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.TrackerAttributeName">
            <summary>
            Gets or sets the Tracker attribute name. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.TrackerAttributeValue">
            <summary>
            Gets or sets the Tracker attribute value. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.IndividualTypeId">
            <summary>
            Gets or sets the Individual type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Individual type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Active">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.ActiveType"/>. (Can be <see langword="null"/>.)
            </summary>
            <value>The <see cref="T:ININ.IceLib.Tracker.ActiveType"/>, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.ICUser">
            <summary>
            Gets or sets the ICUser. (Can be <see langword="null"/>.)
            </summary>
            <value>The ICUser, or <see langword="null"/>.</value>        
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.ApplicationId">
            <summary>
            Gets or sets the application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application ID, or <see langword="null"/>.</value>  
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.OwnerId">
            <summary>
            Gets or sets the owner ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The owner ID, or <see langword="null"/>.</value>        
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Private">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.PrivateType"/>. (Can be <see langword="null"/>.)
            </summary>
            <value>The <see cref="T:ININ.IceLib.Tracker.PrivateType"/>, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchIndividualsFilter.Admin">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.AdminType"/>. (Can be <see langword="null"/>.)
            </summary>
            <value>The <see cref="T:ININ.IceLib.Tracker.AdminType"/>, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.SearchInteractionsFilter">
            <summary>
            This class represents a filter that is used to search Interactions.
            </summary>
            <remarks>Use an instance of this class as an input to the <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/>
            <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchInteractions(ININ.IceLib.Tracker.SearchInteractionsFilter)"/> method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchInteractionsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SearchInteractionsFilter"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchInteractionsFilter.ToString">
            <summary>
            Converts the SearchInteractionsFilter object into a string that is formatted properly for
            the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchInteractions(ININ.IceLib.Tracker.SearchInteractionsFilter)">SearchInteractions</see> method.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:ININ.IceLib.Tracker.SearchInteractionsFilter"></see>.
            </returns>
            <remarks>Can also be useful for tracing out the search filter.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"> is thrown if the
            StartDateTime is not earlier then the EndDateTime, or if MinimumDuration
            is greater than MaximumDuration.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.IndividualId">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.Individual"/> ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Individual ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationId">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.Organization"/> ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Organization ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationId">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.Location"/> ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Location ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.FirstName">
            <summary>
            Gets or sets the first name. (Can be <see langword="null"/>.)
            </summary>
            <value>The first name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.MiddleName">
            <summary>
            Gets or sets the middle name. (Can be <see langword="null"/>.)
            </summary>
            <value>The middle name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LastName">
            <summary>
            Gets or sets the last name. (Can be <see langword="null"/>.)
            </summary>
            <value>The last name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.Address">
            <summary>
            Gets or sets the address. (Can be <see langword="null"/>.)
            </summary>
            <value>The address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.City">
            <summary>
            Gets or sets the city. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.StateOrProvince">
            <summary>
            Gets or sets the state or province. (Can be <see langword="null"/>.)
            </summary>
            <value>The state or province, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.PostalCode">
            <summary>
            Gets or sets the postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.Country">
            <summary>
            Gets or sets the country. (Can be <see langword="null"/>.)
            </summary>
            <value>The country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.InteractionAddress">
            <summary>
            Gets or sets the interaction address. (Can be <see langword="null"/>.)
            </summary>
            <value>The <see cref="P:ININ.IceLib.Tracker.SearchInteractionsFilter.InteractionAddress"/>, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationName">
            <summary>
            Gets or sets the organization name. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationAddress">
            <summary>
            Gets or sets the organization address. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationCity">
            <summary>
            Gets or sets the organization city. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationStateOrProvince">
            <summary>
            Gets or sets the organization state or province. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization state or province, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationPostalCode">
            <summary>
            Gets or sets the organization postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationCountry">
            <summary>
            Gets or sets the organization country. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationTypeId">
            <summary>
            Gets or sets the organization type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization type ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationApplicationId">
            <summary>
            Gets or sets the organization application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.OrganizationInteractionAddress">
            <summary>
            Gets or sets the organization interaction address. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization interaction address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationName">
            <summary>
            Gets or sets the location name. (Can be <see langword="null"/>.)
            </summary>
            <value>The location name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationAddress">
            <summary>
            Gets or sets the location address. (Can be <see langword="null"/>.)
            </summary>
            <value>The location address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationCity">
            <summary>
            Gets or sets the location city. (Can be <see langword="null"/>.)
            </summary>
            <value>The location city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationStateOrProvince">
            <summary>
            Gets or sets the location state or province. (Can be <see langword="null"/>.)
            </summary>
            <value>The location state or province, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationPostalCode">
            <summary>
            Gets or sets the location postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The location postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationCountry">
            <summary>
            Gets or sets the location country. (Can be <see langword="null"/>.)
            </summary>
            <value>The location country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationApplicationId">
            <summary>
            Gets or sets the location application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The location application ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.LocationInteractionAddress">
            <summary>
            Gets or sets the location interaction address. (Can be <see langword="null"/>.)
            </summary>
            <value>The location interaction address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.TrackerAttributeName">
            <summary>
            Gets or sets the Tracker attribute name. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.TrackerAttributeValue">
            <summary>
            Gets or sets the Tracker attribute value. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute value, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.IndividualTypeId">
            <summary>
            Gets or sets the individual type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The individual type ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.ApplicationId">
            <summary>
            Gets or sets the application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The application ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.StationName">
            <summary>
            Gets or sets the station name. (Can be <see langword="null"/>.)
            </summary>
            <value>The station name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.WrapupCode">
            <summary>
            Gets or sets the wrap up code. (Can be <see langword="null"/>.)
            </summary>
            <value>The wrap up code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.DisplayName">
            <summary>
            Gets or sets the display name. (Can be <see langword="null"/>.)
            </summary>
            <value>The display name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.Role">
            <summary>
            Gets or sets the role. (Can be <see langword="null"/>.)
            </summary>
            <value>The role, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.Workgroup">
            <summary>
            Gets or sets the workgroup. (Can be <see langword="null"/>.)
            </summary>
            <value>The workgroup, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.InteractionType">
            <summary>
            Gets or sets the interaction type. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction type, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.SegmentTypes">
            <summary>
            Gets or sets the segment type. (Can be <see langword="null"/>.)
            </summary>
            <value>The segment type, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.InteractionIdKey">
            <summary>
            Gets or sets the interaction ID key. (Can be <see langword="null"/>.)
            </summary>
            <value>The interaction ID key, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.IncidentId">
            <summary>
            Gets or sets the incident ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The incident ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.AccountCode">
            <summary>
            Gets or sets the account code. (Can be <see langword="null"/>.)
            </summary>
            <value>The account code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.SiteId">
            <summary>
            Gets or sets the site ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The site ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.StartDateTime">
            <summary>
            Gets or sets the start datetime. (Can be <see langword="null"/>.)
            The StartDateTime must be earlier than the EndDateTime.
            </summary>
            <value>The start datetime, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.EndDateTime">
            <summary>
            Gets or sets the end datetime. (Can be <see langword="null"/>.)
            The EndDateTime must be later than the StartDateTime.
            </summary>
            <value>The end datetime, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.MinimumDuration">
            <summary>
            Gets or sets the minimum duration. (Can be <see langword="null"/>.)
            </summary>
            <value>The minimum duration, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchInteractionsFilter.MaximumDuration">
            <summary>
            Gets or sets the maximum duration. (Can be <see langword="null"/>.)
            </summary>
            <value>The maximum duration, or <see langword="null"/>.</value> 
        </member>
        <member name="T:ININ.IceLib.Tracker.SearchLocationsFilter">
            <summary>
            This class represents a filter that is used to search Locations.
            </summary>
            <remarks>Use an instance of this class as an input to the <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/>
            <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchLocations(ININ.IceLib.Tracker.SearchLocationsFilter)"/> method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchLocationsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SearchOrganizationsFilter"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchLocationsFilter.ToString">
            <summary>
            Converts the SearchLocationsFilter object into a string that is formatted properly for
            the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchLocations(ININ.IceLib.Tracker.SearchLocationsFilter)">SearchLocations</see> method.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:ININ.IceLib.Tracker.SearchLocationsFilter"></see>.
            </returns>
            <remarks>Can also be useful for tracing out the search filter.</remarks>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.Name">
            <summary>
            Gets or sets the location name. (Can be <see langword="null"/>.)
            </summary>
            <value>The location name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.Address">
            <summary>
            Gets or sets the location address. (Can be <see langword="null"/>.)
            </summary>
            <value>The location address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.City">
            <summary>
            Gets or sets the location city. (Can be <see langword="null"/>.)
            </summary>
            <value>The location city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.StateOrProvince">
            <summary>
            Gets or sets the location state or province. (Can be <see langword="null"/>.)
            </summary>
            <value>The location state or province, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.PostalCode">
            <summary>
            Gets or sets the location postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The location postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.Country">
            <summary>
            Gets or sets the location country. (Can be <see langword="null"/>.)
            </summary>
            <value>The location country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.InteractionAddress">
            <summary>
            Gets or sets the location interaction address. (Can be <see langword="null"/>.)
            </summary>
            <value>The location interaction address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchLocationsFilter.ApplicationId">
            <summary>
            Gets or sets the location application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value> 
        </member>
        <member name="T:ININ.IceLib.Tracker.SearchOrganizationsFilter">
            <summary>
            This class represents a filter that is used to search Organizations.
            </summary>
            <remarks>Use an instance of this class as an input to the <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/>
            <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchOrganizations(ININ.IceLib.Tracker.SearchOrganizationsFilter)"/> method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchOrganizationsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SearchOrganizationsFilter"/> class.
            </summary>
        </member>
        <member name="M:ININ.IceLib.Tracker.SearchOrganizationsFilter.ToString">
            <summary>
            Converts the SearchOrganizationsFilter object into a string that is formatted properly for
            the <see cref="M:ININ.IceLib.Tracker.TrackerSearch.SearchOrganizations(ININ.IceLib.Tracker.SearchOrganizationsFilter)">SearchOrganizations</see> method.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:ININ.IceLib.Tracker.SearchOrganizationsFilter"></see>.
            </returns>
            <remarks>Can also be useful for tracing out the search filter.</remarks>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.Name">
            <summary>
            Gets or sets the organization name. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.Address">
            <summary>
            Gets or sets the organization address. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.City">
            <summary>
            Gets or sets the organization city. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.StateOrProvince">
            <summary>
            Gets or sets the organization state or province. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization state or province, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.PostalCode">
            <summary>
            Gets or sets the organization postal code. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization postal code, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.Country">
            <summary>
            Gets or sets the organization country. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization country, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.OrganizationTypeId">
            <summary>
            Gets or sets the organization type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization type ID, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.ApplicationId">
            <summary>
            Gets or sets the organization application ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The city, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.OwnerId">
            <summary>
            Gets or sets the owner ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The owner ID, or <see langword="null"/>.</value>        
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.InteractionAddress">
            <summary>
            Gets or sets the organization interaction address. (Can be <see langword="null"/>.)
            </summary>
            <value>The organization interaction address, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.Active">
            <summary>
            Gets or sets the <see cref="T:ININ.IceLib.Tracker.ActiveType"/>. (Can be <see langword="null"/>.)
            </summary>
            <value>The <see cref="T:ININ.IceLib.Tracker.ActiveType"/>, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.TrackerAttributeName">
            <summary>
            Gets or sets the Tracker attribute name. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute name, or <see langword="null"/>.</value> 
        </member>
        <member name="P:ININ.IceLib.Tracker.SearchOrganizationsFilter.TrackerAttributeValue">
            <summary>
            Gets or sets the Tracker attribute value. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute value, or <see langword="null"/>.</value> 
        </member>
        <member name="T:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails">
            <summary>
            Helper class to contain the return values for the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetCurrentSegmentOrganizationIndividual(System.String,System.String)"/> methods.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails"/> class.
            </summary>
            <param name="segmentId">The segment ID.</param>
            <param name="organizationId">The organization ID.</param>
            <param name="individualId">The individual ID.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails.SegmentId">
            <summary>
            Gets the segment ID.
            </summary>
            <value>The segment ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails.OrganizationId">
            <summary>
            Gets the organization ID.
            </summary>
            <value>The organization ID.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails.IndividualId">
            <summary>
            Gets the individual ID.
            </summary>
            <value>The individual ID.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.SegmentTypes">
            <summary>
            This enum consists of a set of Tracker types that describe a given Segment.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.Alert">
            <summary>The segment included an alert.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.System">
            <summary>The segment included a system operation.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.WorkgroupQueue">
            <summary>The segment included a workgroup queue.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.Hold">
            <summary>The segment was held.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.Messaging">
            <summary>The segment included a messaging operation.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.Interaction">
            <summary>The segment included an interaction.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.Conference">
            <summary>The segment included a conference.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.ConsultCall">
            <summary>The segment included a consult call.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.NotAnswered">
            <summary>The segment was not answered.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.SecurityChange">
            <summary>The segment included a security change.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.SegmentTypes.All">
            <summary>All known segment types.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.Title">
            <summary>Represents a title within Tracker.</summary>
            <remarks>
            Titles can be associated with <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.  Some examples of
            titles are <b>Dr.</b>, <b>Mr.</b>, <b>Mrs.</b>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.Title.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.Title.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Title.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Title.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.Title.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerAdmin">
            <summary>Contains methods necessary to perform typical Tracker admin related operations.</summary>
            <remarks>
            The <b>TrackerAdmin</b> type is instantiated like the two other main Tracker types (<b>TrackerUser</b>
            and <b>TrackerSearch</b>), by passing in a valid <see cref="T:ININ.IceLib.Connection.Session"/> object.  Use the <b>TrackerAdmin</b>
            type when you want to perform Tracker administrative tasks such as adding a new <see cref="T:ININ.IceLib.Tracker.Organization"/> 
            type, deleting an address type, adding a new title, updating an attribute type, etc.
            <para>The current user must have a valid Tracker Access license or an
            <see cref="T:ININ.IceLib.IceLibLicenseException"/> will be thrown when any methods of this class are called.
            </para>
            </remarks>    
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.#ctor(ININ.IceLib.Connection.Session)">
             <summary>
             Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.TrackerAdmin"/> class.
            </summary>
             <param name="session">The session.</param>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddAddressType(ININ.IceLib.Tracker.AddressType)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Tracker.AddressType"/> to the Tracker database.
            </summary>
            <param name="addressType">The <see cref="T:ININ.IceLib.Tracker.AddressType"/> to add.</param>
            <returns>The ID of the new AddressType.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>        
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddAddressTypeAsync(ININ.IceLib.Tracker.AddressType,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds an <see cref="T:ININ.IceLib.Tracker.AddressType"/> to the Tracker database.
            </summary>
            <param name="addressType">The <see cref="T:ININ.IceLib.Tracker.AddressType"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddTrackerAttributeType(ININ.IceLib.Tracker.TrackerAttributeType)">
            <summary>
            Adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to the Tracker database.
            </summary>
            <param name="trackerAttributeType">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to add.</param>
            <returns>The ID of the new TrackerAttributeType.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddTrackerAttributeTypeAsync(ININ.IceLib.Tracker.TrackerAttributeType,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to the Tracker database.
            </summary>
            <param name="trackerAttributeType">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddInteractionAddressSubtype(ININ.IceLib.Tracker.InteractionAddressSubtype)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to the Tracker database.
            </summary>
            <param name="interactionAddressSubtype">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to add.</param>
            <returns>The ID of the new InteractionAddressSubtype.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddInteractionAddressSubtypeAsync(ININ.IceLib.Tracker.InteractionAddressSubtype,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to the Tracker database.
            </summary>
            <param name="interactionAddressSubtype">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddInteractionAddressType(ININ.IceLib.Tracker.InteractionAddressType)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to the Tracker database.
            </summary>
            <param name="interactionAddressType">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to add.</param>
            <returns>The ID of the new InteractionAddressType.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddInteractionAddressTypeAsync(ININ.IceLib.Tracker.InteractionAddressType,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to the Tracker database.
            </summary>
            <param name="interactionAddressType">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddIndividualType(ININ.IceLib.Tracker.IndividualType)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to the Tracker database.
            </summary>
            <param name="individualType">The <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddIndividualTypeAsync(ININ.IceLib.Tracker.IndividualType,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to the Tracker database.
            </summary>
            <param name="individualType">The <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddOrganizationType(ININ.IceLib.Tracker.OrganizationType)">
            <summary>
            Adds an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to the Tracker database.
            </summary>
            <param name="organizationType">The <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to add.</param>
            <returns>The ID of the new OrganizationType.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddOrganizationTypeAsync(ININ.IceLib.Tracker.OrganizationType,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to the Tracker database.
            </summary>
            <param name="organizationType">The <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddTitle(ININ.IceLib.Tracker.Title)">
            <summary>
            Adds a <see cref="T:ININ.IceLib.Tracker.Title"/> to the Tracker database.
            </summary>
            <param name="title">The <see cref="T:ININ.IceLib.Tracker.Title"/> to add.</param>
            <returns>The ID of the new title.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.AddTitleAsync(ININ.IceLib.Tracker.Title,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds a <see cref="T:ININ.IceLib.Tracker.Title"/> to the Tracker database.
            </summary>
            <param name="title">The <see cref="T:ININ.IceLib.Tracker.Title"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteAddressType(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.AddressType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.AddressType"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteAddressTypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.AddressType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.AddressType"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteTrackerAttributeType(System.Int64)">
            <summary>
            Deletes a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteTrackerAttributeTypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteInteractionAddressSubtype(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteInteractionAddressSubtypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteInteractionAddressType(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> from the Tracker database.
            </summary>
            <param name="interactionAddressId">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteInteractionAddressTypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> from the Tracker database.
            </summary>
            <param name="interactionAddressId">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteIndividualType(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteIndividualTypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteOrganizationType(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteOrganizationTypeAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteTitle(System.Int64)">
            <summary>
            Deletes a <see cref="T:ININ.IceLib.Tracker.Title"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.Title"/> to delete.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.DeleteTitleAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes a <see cref="T:ININ.IceLib.Tracker.Title"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.Title"/> to delete.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetAddressTypeById(System.Int64)">
            <summary>
            Gets an <see cref="T:ININ.IceLib.Tracker.AddressType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.AddressType"/> to get.</param>
            <returns>The address type.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetAddressTypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.AddressType}},System.Object)">
            <summary>
            Asynchronously gets an <see cref="T:ININ.IceLib.Tracker.AddressType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.AddressType"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetAddressTypes">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.AddressType">AddressTypes</see>.
            </summary>
            <returns>The AddressTypes.</returns>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetAddressTypesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.AddressType}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.AddressType">AddressTypes</see>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTrackerAttributeTypeById(System.Int64)">
            <summary>
            Gets a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to get.</param>
            <returns>The TrackerAttributeType.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTrackerAttributeTypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.TrackerAttributeType}},System.Object)">
            <summary>
            Asynchronously gets a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTrackerAttributeTypes(ININ.IceLib.Tracker.AppliesToTypes)">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType">TrackerAttributeTypes</see>.
            </summary>
            <param name="appliesTo">Only return <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType">TrackerAttributeTypes</see> for these Tracker types.
            Use the <see cref="T:ININ.IceLib.Tracker.AppliesToTypes"/> enum to specify the Tracker types.</param>
            <returns>The TrackerAttributeTypes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTrackerAttributeTypesAsync(ININ.IceLib.Tracker.AppliesToTypes,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.TrackerAttributeType}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType">TrackerAttributeTypes</see>.
            </summary>
            <param name="appliesTo">Only return <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType">TrackerAttributeTypes</see> for these Tracker types.
            Use the <see cref="T:ININ.IceLib.Tracker.AppliesToTypes"/> enum to specify the Tracker types.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressSubtypeById(System.Int64)">
            <summary>
            Gets an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to get.</param>
            <returns>The InteractionAddressSubtype.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressSubtypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.InteractionAddressSubtype}},System.Object)">
            <summary>
            Asynchronously gets an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressSubtypes">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype">InteractionAddressSubtypes</see>.
            </summary>
            <returns>The InteractionAddressSubtypes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressSubtypesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.InteractionAddressSubtype}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype">InteractionAddressSubtypes</see>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressTypeById(System.Int64)">
            <summary>
            Gets an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to get.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/>.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressTypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.InteractionAddressType}},System.Object)">
            <summary>
            Asynchronously gets an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressTypes">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">InteractionAddressTypes</see>.
            </summary>
            <returns>The InteractionAddressTypes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetInteractionAddressTypesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.InteractionAddressType}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.InteractionAddressType">InteractionAddressTypes</see>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetIndividualTypeById(System.Int64)">
            <summary>
            Gets an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to get.</param>
            <returns>The IndividualType.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetIndividualTypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.IndividualType}},System.Object)">
            <summary>
            Asynchronously gets an <see cref="T:ININ.IceLib.Tracker.IndividualType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetIndividualTypes">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.IndividualType">IndividualTypes</see>.
            </summary>
            <returns>The IndividualTypes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetIndividualTypesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.IndividualType}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.IndividualType">IndividualTypes</see>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetOrganizationTypeById(System.Int64)">
            <summary>
            Gets an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to get.</param>
            <returns>The OrganizationType.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetOrganizationTypeByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.OrganizationType}},System.Object)">
            <summary>
            Asynchronously gets an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetOrganizationTypes">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.OrganizationType">OrganizationTypes</see>.
            </summary>
            <returns>The OrganizationTypes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetOrganizationTypesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.OrganizationType}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.OrganizationType">OrganizationTypes</see>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTitleById(System.Int64)">
            <summary>
            Gets a <see cref="T:ININ.IceLib.Tracker.Title"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.Title"/> to get.</param>
            <returns>The Title.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTitleByIdAsync(System.Int64,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.Title}},System.Object)">
            <summary>
            Asynchronously gets a <see cref="T:ININ.IceLib.Tracker.Title"/> by ID.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.Title"/> to get.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTitles">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.Title">Titles</see>.
            </summary>
            <returns>The Titles.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.GetTitlesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.Title}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.Title"/>.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ICUserModified(System.String)">
            <summary>
            Marks an IC user as modified.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ICUserModifiedAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks an IC user as modified.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ImportICUsers(System.Boolean,System.String)">
            <summary>
            Imports the IC users.
            </summary>
            <param name="updateExistingUsers">If set to <see langword="true"/> update existing users.</param>
            <param name="siteIds">The site IDs.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ImportICUsersAsync(System.Boolean,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously imports the IC users.
            </summary>
            <param name="updateExistingUsers">If set to <see langword="true"/> update existing users.</param>
            <param name="siteIds">The site IDs.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.IsUnknownOrSystemIndividual(System.String)">
            <summary>
            Determines whether the specific <see cref="T:ININ.IceLib.Tracker.Individual"/> is unknown or a system <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <returns>
            	<see langword="true"/> if the specified Individual is recognized; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.IsUnknownOrSystemIndividualAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously determines whether the specific <see cref="T:ININ.IceLib.Tracker.Individual"/> is unknown or a system <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateAddressType(ININ.IceLib.Tracker.AddressType)">
            <summary>
            Updates an <see cref="T:ININ.IceLib.Tracker.AddressType"/>.
            </summary>
            <param name="addressType">The <see cref="T:ININ.IceLib.Tracker.AddressType"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateAddressTypeAsync(ININ.IceLib.Tracker.AddressType,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates an <see cref="T:ININ.IceLib.Tracker.AddressType"/>.
            </summary>
            <param name="addressType">The <see cref="T:ININ.IceLib.Tracker.AddressType"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateTrackerAttributeType(ININ.IceLib.Tracker.TrackerAttributeType)">
            <summary>
            Updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/>.
            </summary>
            <param name="trackerAttributeType">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateTrackerAttributeTypeAsync(ININ.IceLib.Tracker.TrackerAttributeType,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/>.
            </summary>
            <param name="trackerAttributeType">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateInteractionAddressSubtype(ININ.IceLib.Tracker.InteractionAddressSubtype)">
            <summary>
            Updates an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/>.
            </summary>
            <param name="interactionAddressSubtype">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateInteractionAddressSubtypeAsync(ININ.IceLib.Tracker.InteractionAddressSubtype,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates an <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/>.
            </summary>
            <param name="interactionAddressSubtype">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressSubtype"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateInteractionAddressType(ININ.IceLib.Tracker.InteractionAddressType)">
            <summary>
            Updates an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/>.
            </summary>
            <param name="interactionAddressType">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateInteractionAddressTypeAsync(ININ.IceLib.Tracker.InteractionAddressType,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates an <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/>.
            </summary>
            <param name="interactionAddressType">The <see cref="T:ININ.IceLib.Tracker.InteractionAddressType"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateIndividualType(ININ.IceLib.Tracker.IndividualType)">
            <summary>
            Updates an <see cref="T:ININ.IceLib.Tracker.IndividualType"/>.
            </summary>
            <param name="individualType">The <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateIndividualTypeAsync(ININ.IceLib.Tracker.IndividualType,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates an <see cref="T:ININ.IceLib.Tracker.IndividualType"/>.
            </summary>
            <param name="individualType">The <see cref="T:ININ.IceLib.Tracker.IndividualType"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateOrganizationType(ININ.IceLib.Tracker.OrganizationType)">
            <summary>
            Updates an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/>.
            </summary>
            <param name="organizationType">The <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateOrganizationTypeAsync(ININ.IceLib.Tracker.OrganizationType,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates an <see cref="T:ININ.IceLib.Tracker.OrganizationType"/>.
            </summary>
            <param name="organizationType">The <see cref="T:ININ.IceLib.Tracker.OrganizationType"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateTitle(ININ.IceLib.Tracker.Title)">
            <summary>
            Updates a <see cref="T:ININ.IceLib.Tracker.Title"/>.
            </summary>
            <param name="title">The <see cref="T:ININ.IceLib.Tracker.Title"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateTitleAsync(ININ.IceLib.Tracker.Title,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates a <see cref="T:ININ.IceLib.Tracker.Title"/>.
            </summary>
            <param name="title">The <see cref="T:ININ.IceLib.Tracker.Title"/> to update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateUserSecurity(System.String,System.Int64,System.String)">
            <summary>
            Updates the security for an IC user.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="securityChecksum">The security checksum.</param>
            <param name="viewableUsers">The viewable users.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.UpdateUserSecurityAsync(System.String,System.Int64,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the security for an IC user.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="securityChecksum">The security checksum.</param>
            <param name="viewableUsers">The viewable users.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ConvertToInternalAppliesTo(System.Nullable{ININ.IceLib.Tracker.AppliesToTypes})">
            <summary>
            Converts an AppliesTypes enum to a long.
            </summary>
            <remarks>The type of the AppliesTo parameters as used by the Tracker trans is a long.
            In order to add type safety and reduce ambiguity for the users of the public Tracker IceLib API
            the AppliesToTypes flag enum was created.  This internal method is needed to mask the complexity
            of converting from the enum type to the long type.  Use this method whenever a tran calls for a long
            AppliesTo value.  Internally, the values are represented as:
            	<list type="bullet">
            	<item>None<description> - 0</description></item>
            	<item>Interaction<description> - 3</description></item>
            	<item>Individual<description> - 5</description></item>
            	<item>Location<description> - 7</description></item>
            	<item>Organization<description> - 11</description></item>
            	</list>
            <br/>
            They can be combined via multiplication similar to the way that bit mask elements can be combined with logical OR
            operators.  So if, for example, you wanted to call GetTrackerAttributeTypes() and have it return results for
            Interactions and Locations, you would pass in 3*7 or 21.
            <para>Keep in mind that a value of 0 actually means all (e.g. return all types).  The term "None" is a misnomer but is listed
            here for legacy reasons.</para>
            <param name="types">The <see cref="T:ININ.IceLib.Tracker.AppliesToTypes"/> that should be converted.</param>
            </remarks>
            <returns>
            A long that will represent to the Tracker subsystem which Tracker types should be considered for an operation.
            </returns>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAdmin.ConvertToAppliesTo(System.Int64)">
            <summary>
            Converts a long to an AppliesTypes.
            </summary>
            <remarks>The type of the AppliesTo parameters as used by the Tracker trans is a long.
            In order to add type safety and reduce ambiguity for the users of the public Tracker IceLib API
            the AppliesToTypes flag enum was created.  This internal method is needed to mask the complexity
            of converting from a long to the enum type.  Use this method whenever a long needs to be converted to
            an AppliesToType value.  Internally, the values are represented as:
            	<list type="bullet">
            	<item>None<description> - 0</description></item>
            	<item>Interaction<description> - 3</description></item>
            	<item>Individual<description> - 5</description></item>
            	<item>Location<description> - 7</description></item>
            	<item>Organization<description> - 11</description></item>
            	</list>
            <br/>
            They can be combined via multiplication similar to the way that bit mask elements can be combined with logical OR
            operators.  So if, for example, you wanted to call GetTrackerAttributeTypes() and have it return results for
            Interactions and Locations, you would pass in 3*7 or 21.
            <para>Keep in mind that a value of 0 actually means all (e.g. return all types).  The term "None" is a misnomer but is listed
            here for legacy reasons.</para>
            <param name="appliesTo">The long that should be converted.</param>
            </remarks>
            <returns>
            The <see cref="T:ININ.IceLib.Tracker.AppliesToTypes"/> value.
            </returns>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAdmin.TransactionClient">
             <summary>
             Gets the <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient"/>.
            </summary>
             <value>The TransactionClient.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerAttribute">
            <summary>Represents an attribute within Tracker.</summary>
            <remarks>A Tracker Attribute is not the same as an xIC Attribute.
            Attributes in Tracker consist of a <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> and a
            string <see cref="P:ININ.IceLib.Tracker.TrackerAttribute.Value"/>.  A Tracker Attribute can be associated with
            Individuals, Organization, Locations and Interactions.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAttribute.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttribute.TrackerEntityId">
            <summary>
            Gets or sets the ID of the Tracker entity (Individual, Organization, Location,
            Interactions) that is associated with this Tracker Attribute.  (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker entity ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttribute.TrackerAttributeTypeId">
            <summary>
            Gets or sets the Tracker attribute type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttribute.Value">
            <summary>
            Gets or sets the value. (Can be <see langword="null"/>.)
            </summary>
            <value>The value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttribute.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerAttributeType">
            <summary>Represents a Tracker attribute type within Tracker.</summary>
            <remarks>
            TrackerAttributeTypes are used to classify <see cref="T:ININ.IceLib.Tracker.TrackerAttribute">Attributes</see> within Tracker.
            A TrackerAttributeType can have a <see cref="P:ININ.IceLib.Tracker.TrackerAttributeType.Name"/> and an optional
            set of <see cref="P:ININ.IceLib.Tracker.TrackerAttributeType.LegalValues"/>.  Each Tracker <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>
            has a TrackerAttributeType.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAttributeType.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.Id">
            <summary>
            Gets or sets the ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.LegalValues">
            <summary>
            Gets or sets the legal values. (Can be <see langword="null"/>.)
            </summary>
            <remarks>Legal values are useful for storing a set of strings that
            the <see cref="P:ININ.IceLib.Tracker.TrackerAttribute.Value"/> of a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>
            can be restricted to.  For instance, if you had a TrackerAttributeType with a
            <see cref="P:ININ.IceLib.Tracker.TrackerAttributeType.Name"/> of <b>cars</b>, you may want to display
            a list of possible <see cref="P:ININ.IceLib.Tracker.TrackerAttribute.Value">Values</see> for this Tracker attribute.
            If the desired list of values is Chevy, Ford, Toyota, then the 
            <see cref="P:ININ.IceLib.Tracker.TrackerAttributeType.LegalValues"/> property would contain:
            "Chevy", "Ford", and "Toyota"
            </remarks>
            <value>The legal values, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.InternalLegalValues">
            <summary>
            Used to convert back and forth to tab delimited strings.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.ShowIfEmpty">
            <summary>
            Gets or sets a value indicating whether to show if empty. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if should show if empty; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.AppliesTo">
            <summary>
            Gets or sets the applies to setting. (Can be <see langword="null"/>.)
            </summary>
            <value>The applies to setting, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.AdminEditable">
            <summary>
            Gets or sets a value indicating whether the instance is admin editable. (Can be <see langword="null"/>.)
            </summary>
            <value><see langword="true"/> if admin editable; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeType.Version">
            <summary>
            Gets version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerAttributeView">
            <summary>Represents an attribute view within Tracker.</summary>
            <remarks>
            The TrackerAttributeView class is used by methods that return information
            about <see cref="T:ININ.IceLib.Tracker.TrackerAttribute">Tracker attributes</see>.  One such method
            is the <see cref="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)"/>
            method.
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerAttributeView.Reset">
             <summary>
             Sets all members to <see langword="null"/>.  Useful for validating return data.
            </summary>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeView.Name">
            <summary>
            Gets or sets the name. (Can be <see langword="null"/>.)
            </summary>
            <value>The name, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeView.TrackerAttributeTypeId">
            <summary>
            Gets or sets the Tracker attribute type ID. (Can be <see langword="null"/>.)
            </summary>
            <value>The Tracker attribute type ID, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeView.Value">
            <summary>
            Gets or sets the value. (Can be <see langword="null"/>.)
            </summary>
            <value>The value, or <see langword="null"/>.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerAttributeView.Version">
            <summary>
            Gets or sets the version. (Can be <see langword="null"/>.)
            </summary>
            <value>The version, or <see langword="null"/>.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerContactEntry">
            <summary>
            Provides extended Tracker information for a ContactEntry in a Tracker Directory.
            </summary>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.#ctor(ININ.IceLib.Directories.ContactEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.TrackerContactEntry"/> class.
            </summary>
            <param name="contactEntry">The contact entry.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.ParseXml(System.String)">
            <summary>
            Parses the specified XML.
            </summary>
            <param name="sourceXml">The XML to parse.</param>
            <exception cref="T:System.ArgumentNullException">Throws ArgumentNullException is sourceXml is <see langword="null"/> or empty.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.ParseAddress(System.String[0:,0:]@)">
            <summary>
            Parses the specified Address.
            </summary>
            <param name="attributes">A 2D array of strings.  Each [][] entry is a name-value pair that
            holds information about an InteractionAddress.
            </param>
            <remarks>
            The input param "attributes" is a 2D array of strings.  Each [][] entry is a name-value pair.
            These entries contain information about an IndividualAddress.  This methed converts
            this array into an IndividualAddress object and adds it to the static member 
            _IndividualAddresses.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.ParseInteractionAddress(System.String[0:,0:]@)">
            <summary>
            Parses the specified InteractionAddress.
            </summary>
            <param name="attributes">a 2D array of strings.  Each [][] entry is a name-value pair that
            holds information about an InteractionAddress.
            </param>
            <remarks>
            The input param "attributes" is a 2D array of strings.  Each [][] entry is a name-value pair.
            These entries contain information about an InteractionAddress.  This methed converts
            this array into an InteractionAddress object and adds it to the static member 
            _IndividualInteractionAddresses.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.ParseInteractionAttribute(System.String[0:,0:]@)">
            <summary>
            Parses the specified InteractionAttribute.
            </summary>
            <param name="attributes">a 2D array of strings.  Each [][] entry is a name-value pair that
            holds information about an InteractionAttributes.
            </param>
            <remarks>
            The input param "attributes" is a 2D array of strings.  Each [][] entry is a name-value pair.
            These entries contain information about an InteractionAttribute.  This methed converts
            this array into an InteractionAttribute object and adds it to the static member 
            _IndividualAttributes.
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerContactEntry.XMLValueUnescape(System.String)">
            <summary>
             Unescape XML value strings.  For example, a 
             string can't have a double-quote in it without being escaped.
            </summary>
            <param name="strXML">xml string to un-escape.</param>
            <returns>The un-escaped string.</returns>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerContactEntry.Addresses">
            <summary>
            Gets the addresses.
            </summary>
            <value>The addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerContactEntry.InteractionsAddresses">
            <summary>
            Gets the interactions addresses.
            </summary>
            <value>The interactions addresses.</value>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerContactEntry.TrackerAttributes">
            <summary>
            Gets the tracker attributes.
            </summary>
            <value>The tracker attributes.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerInteraction">
            <summary>
            Provides access to Tracker information for an interaction within the Interaction Center system.</summary>
            <remarks>
            <para>Calling properties on this object without a watch in place raises the <see cref="T:ININ.IceLib.NotCachedException"/>.<br/><br/></para>
            <note>The asynchronous methods are preferred since the stop completion task can be lengthy.</note>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerInteraction.#ctor(ININ.IceLib.Interactions.InteractionsManager,ININ.IceLib.Interactions.InteractionId)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.TrackerInteraction"/> class.
            </summary>
            <param name="interactionsManager">The interactions manager.</param>
            <param name="interactionId">The interaction ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerInteraction.SetMultiPartAccountCodeId(System.String)">
            <summary>
            Sets the multi-part account code ID.
            </summary>
            <param name="multiPartAccountCodeId">The multi-part account code ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">The Session does not have a valid connection.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerInteraction.SetMultiPartAccountCodeIdAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously Sets the multi-part account code ID.
            </summary>
            <param name="multiPartAccountCodeId">The multi-part account code ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerInteraction.RWPResultsXml_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            Handler for XML parser when an Unknown Node is encountered.
            </summary>
            <param name="sender">Object sending the event message.</param>
            <param name="e">XML Node data for the Unknown Node event.</param>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerInteraction.RWPResultsXml_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            Handler for XML parser when an Unknown Attribute is encountered.
            </summary>
            <param name="sender">Object sending the event message.</param>
            <param name="e">XML Node data for the Unknown Attribute event.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerInteraction.PrivateReverseWhitepages">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.PrivateReverseWhitepages">private reverse whitepages information</see>.
            </summary>
            <value>The private reverse whitepages information.</value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerInteraction.PublicReverseWhitepages">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.PublicReverseWhitepages">public reverse whitepages information</see>.
            </summary>
            <value>The public reverse whitepages information.</value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerInteraction.MultiPartAccountCode">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.MultiPartAccountCode">multi-part account code</see>.
            </summary>
            <value>The multi-part account code.</value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerInteraction.IsTrackingDisabled">
            <summary>
            Gets a value indicating whether this instance is <see cref="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.TrackingDisabled"/>.
            </summary>
            <value><see langword="true"/> if this instance is muted; otherwise, <see langword="false"/>.</value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerInteractionAttributeName">
            <summary>
            Specifies attribute names that can be used with <see cref="T:ININ.IceLib.Tracker.TrackerInteraction">TrackerInteractions</see>.
            </summary>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.PrivateReverseWhitepages">
            <summary>The private reverse whitepages information.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.PublicReverseWhitepages">
            <summary>The public reverse whitepages information.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.MultiPartAccountCode">
            <summary>The multi-part account code.</summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.TrackerInteractionAttributeName.TrackingDisabled">
            <summary>The tracking state of this Interaction.</summary>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerSearch">
            <summary>Contains methods necessary to perform typical Tracker search-related operations.</summary>
            <remarks>
            The <b>TrackerSearch</b> type is instantiated like the two other main Tracker types (<b>TrackerAdmin</b>
            and <b>TrackerUser</b>), by passing in a valid <see cref="T:ININ.IceLib.Connection.Session"/> object.  Use the <b>TrackerSearch</b>
            type when you want to perform searches on the Tracker database.
            <para>The current user must have a valid Tracker Access license or an
            <see cref="T:ININ.IceLib.IceLibLicenseException"/> will be thrown when any methods of this class are called.
            </para> 
            </remarks>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">A required license is not available.</exception>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.#ctor(ININ.IceLib.Connection.Session)">
             <summary>
             Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.TrackerSearch"/> class.
            </summary>
             <param name="session">The session.</param>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.RWPResultsXml_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            Handler for XML parser when an Unknown Node is encountered.
            </summary>
            <param name="sender">Object sending the event message.</param>
            <param name="e">XML Node data for the Unknown Node event.</param>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.RWPResultsXml_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            Handler for XML parser when an Unknown Attribute is encountered.
            </summary>
            <param name="sender">Object sending the event message.</param>
            <param name="e">XML Node data for the Unknown Attribute event.</param>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchForResolutionCandidates(System.String,ININ.IceLib.Tracker.InteractionType,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> that are resolution candidates.
            </summary>
            <param name="interactionAddress">The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of 
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <param name="interactionType">The <see cref="T:ININ.IceLib.Tracker.InteractionType"/> to search.</param>
            <param name="firstName">First name of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="lastName">Last name of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="organizationName"><see cref="P:ININ.IceLib.Tracker.Organization.Name"/> of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="locationName"><see cref="P:ININ.IceLib.Tracker.Location.Name"/> of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <returns>The collection of whitepages info.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchForResolutionCandidatesAsync(System.String,ININ.IceLib.Tracker.InteractionType,System.String,System.String,System.String,System.String,System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.SearchForResolutionCandidatesCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> that are resolution candidates.
            </summary>
            <param name="interactionAddress">The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <param name="interactionType">The <see cref="T:ININ.IceLib.Tracker.InteractionType"/> to search.</param>
            <param name="firstName">First name of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="lastName">Last name of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="organizationName">Name of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="locationName">Name of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchIndividuals(ININ.IceLib.Tracker.SearchIndividualsFilter)">
            <summary>
            Searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> using the specified filter criteria.
            </summary>
            <param name="filter">The search filter in the form of a <see cref="T:ININ.IceLib.Tracker.SearchIndividualsFilter"/> object.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.IndividualView">IndividualViews</see> containing one <see cref="T:ININ.IceLib.Tracker.IndividualView"/> for each
            <see cref="T:ININ.IceLib.Tracker.Individual"/> that matches the filter criteria.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchIndividualsAsync(ININ.IceLib.Tracker.SearchIndividualsFilter,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.IndividualView}},System.Object)">
            <summary>
            Asynchronously searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see> using the specified filter criteria.
            </summary>
            <param name="filter">The search filter in the form of a <see cref="T:ININ.IceLib.Tracker.SearchIndividualsFilter"/> object.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchInteractions(ININ.IceLib.Tracker.SearchInteractionsFilter)">
            <summary>
            Searches the Tracker database for interactions that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.InteractionView">InteractionViews</see> containing one <see cref="T:ININ.IceLib.Tracker.InteractionView"/> for each
            interaction that matches the filter criteria.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchInteractionsAsync(ININ.IceLib.Tracker.SearchInteractionsFilter,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.InteractionView}},System.Object)">
            <summary>
            Asynchronously searches the Tracker database for interactions that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchLocations(ININ.IceLib.Tracker.SearchLocationsFilter)">
            <summary>
            Searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Location">Locations</see> that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.LocationView">LocationView</see> containing one <see cref="T:ININ.IceLib.Tracker.LocationView"/> for each
            <see cref="T:ININ.IceLib.Tracker.Location"/> that matches the filter criteria.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchLocationsAsync(ININ.IceLib.Tracker.SearchLocationsFilter,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.LocationView}},System.Object)">
            <summary>
            Asynchronously searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Location">Locations</see> that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchOrganizations(ININ.IceLib.Tracker.SearchOrganizationsFilter)">
            <summary>
            Searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see> that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.OrganizationView">OrganizationView</see> containing one <see cref="T:ININ.IceLib.Tracker.OrganizationView"/> for each
            <see cref="T:ININ.IceLib.Tracker.Organization"/> that matches the filter criteria.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.SearchOrganizationsAsync(ININ.IceLib.Tracker.SearchOrganizationsFilter,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.OrganizationView}},System.Object)">
            <summary>
            Asynchronously searches the Tracker database for <see cref="T:ININ.IceLib.Tracker.Organization">Organizations</see> that match the filter criteria.
            </summary>
            <param name="filter">The filter.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.ReverseInteractionAddressLookup(System.String,ININ.IceLib.Tracker.InteractionType,System.String)">
            <summary>
            Performs a reverse interaction address lookup.
            </summary>
            <param name="value">One of the following: 
            The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of 
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            The <see cref="P:ININ.IceLib.Tracker.LocationInteractionAddress.Value"/> of 
            the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            Or the <see cref="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.Value"/> of 
            the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            This represents the text to search for.</param>
            <param name="interactionType">The <see cref="T:ININ.IceLib.Tracker.InteractionType"/> to search.</param>
            <param name="ICUserId">The IC user ID.</param>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation"/>
            objects containing the results of the search.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.ReverseInteractionAddressLookupAsync(System.String,ININ.IceLib.Tracker.InteractionType,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.ReverseInteractionAddressLookupInformation}},System.Object)">
            <summary>
            Asynchronously performs a reverse interaction address lookup.
            </summary>
            <param name="value">One of the following:
            The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            The <see cref="P:ININ.IceLib.Tracker.LocationInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            Or the <see cref="P:ININ.IceLib.Tracker.OrganizationInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            This represents the text to search for.</param>
            <param name="interactionType">The <see cref="T:ININ.IceLib.Tracker.InteractionType"/> to search.</param>
            <param name="ICUserId">The IC user ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.ResolveInteraction(ININ.IceLib.Interactions.InteractionId,ININ.IceLib.Tracker.ReverseWhitepagesInfo,System.Boolean)">
            <summary>
            Associates reverse whitepages information with an Interaction.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="reverseWhitepagesInfo">The reverse whitepages information.</param>
            <param name="isDefinitive">if set to <see langword="true"/> is definitive.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.ResolveInteractionAsync(ININ.IceLib.Interactions.InteractionId,ININ.IceLib.Tracker.ReverseWhitepagesInfo,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously associates reverse whitepages information with an Interaction.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="reverseWhitepagesInfo">The reverse whitepages information.</param>
            <param name="isDefinitive">If set to <see langword="true"/> is definitive.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerSearch.ToDirectionType(System.Int64)">
            <summary>
            Converts a long value to a direction type.
            </summary>
            <param name="direction">The direction value.</param>
            <returns>The direction type.</returns>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerSearch.TransactionClient">
             <summary>
             Gets the <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient"/>.
            </summary>
             <value>The TransactionClient.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.TrackerUser">
            <summary>Contains methods necessary to perform typical Tracker user related operations.</summary>
            <remarks>
            The <b>TrackerUser</b> type is instantiated like the two other main Tracker types (<b>TrackerAdmin</b>
            and <b>TrackerSearch</b>), by passing in a valid <see cref="T:ININ.IceLib.Connection.Session"/> object.  Use the <b>TrackerUser</b>
            type when you want to perform Tracker tasks such as getting the details of a Tracker <see cref="T:ININ.IceLib.Tracker.Individual"/>, creating a
            new <see cref="T:ININ.IceLib.Tracker.Organization"/> (not to be confused with the admin task of creating a new <see cref="T:ININ.IceLib.Tracker.OrganizationType"/>), deleting
            an annotation, etc.
            <para>The current user must have a valid Tracker Access license or an
            <see cref="T:ININ.IceLib.IceLibLicenseException"/> will be thrown when any methods of this class are called.
            </para>
            </remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.#ctor(ININ.IceLib.Connection.Session)">
             <summary>
             Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.TrackerUser"/> class.
            </summary>
             <param name="session">The session.</param>
             <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.CanViewInteraction(System.String,System.Boolean)">
            <summary>
            Determines whether the specified interaction can be viewed by the current <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="canViewOtherPrivate">If set to <see langword="true"/> can view other's private interactions.</param>
            <returns>
            	<see langword="true"/> if the specified interaction can be viewed; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.CanViewInteractionAsync(System.String,System.Boolean,System.EventHandler{ININ.IceLib.Tracker.CanViewInteractionCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously determines whether the specified interaction can be viewed by the current <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="canViewOtherPrivate">If set to <see langword="true"/> can view other's private interactions.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteAnnotation(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Annotation"/> from the Tracker database.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Annotation"/> ID.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteAnnotationAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Annotation"/> from the Tracker database.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Annotation"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualAddress(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> from the Tracker database.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> ID.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> from the Tracker database.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualTrackerAttribute(System.String,System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Individual"/> <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="individualId">The <see cref="T:ININ.IceLib.Tracker.Individual"/> ID.</param>
            <param name="trackerAttributeTypeId">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualTrackerAttributeAsync(System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Individual"/>
            	<see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="individualId">The <see cref="T:ININ.IceLib.Tracker.Individual"/> ID.</param>
            <param name="trackerAttributeTypeId">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualInteractionAddress(System.Int64)">
            <summary>
            Deletes an <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> ID.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualInteractionAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes an <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividual(System.String,System.Boolean)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Individual"/> from the Tracker database.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividualAsync(System.String,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Individual"/> from the Tracker database.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteInteractionTrackerAttribute(System.String,System.Int64)">
            <summary>
            Deletes the interaction <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="trackerAttributeTypeId">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteInteractionTrackerAttributeAsync(System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the interaction <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="trackerAttributeTypeId">The <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationAddress(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID  of the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationTrackerAttribute(System.String,System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Location"/> <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="trackerAttributeTypeId">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/> ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationTrackerAttributeAsync(System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Location"/>
            	<see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="trackerAttributeTypeId">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationInteractionAddress(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationInteractionAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocation(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Location"/> from the Tracker database.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="deleteIndividuals">If set to <see langword="true"/> delete <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteLocationAsync(System.String,System.Boolean,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Location"/> from the Tracker database.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="deleteIndividuals">If set to <see langword="true"/> delete <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationAddress(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationTrackerAttribute(System.String,System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> from the Tracker database.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="trackerAttributeTypeId">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationTrackerAttributeAsync(System.String,System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Organization"/>
            	<see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> from the Tracker database.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="trackerAttributeTypeId">The ID of the <see cref="T:ININ.IceLib.Tracker.TrackerAttributeType"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationInteractionAddress(System.Int64)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationInteractionAddressAsync(System.Int64,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> from the Tracker database.
            </summary>
            <param name="id">The ID of the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganization(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes the <see cref="T:ININ.IceLib.Tracker.Organization"/> from the Tracker database.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="deleteIndividuals">If set to <see langword="true"/> delete <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganizationAsync(System.String,System.Boolean,System.Boolean,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously deletes the <see cref="T:ININ.IceLib.Tracker.Organization"/> from the Tracker database.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="deleteIndividuals">If set to <see langword="true"/> delete <see cref="T:ININ.IceLib.Tracker.Individual">Individuals</see>.</param>
            <param name="deactivateIfDependencies">If set to <see langword="true"/> deactivate if dependencies.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetCurrentSegmentOrganizationIndividual(System.String,System.String)">
            <summary>
            Gets the current segment information for an interaction.
            </summary>
            <param name="callIdKey">The call ID key.</param>
            <param name="ICUserId">The IC user ID.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.SegmentOrganizationIndividualDetails"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetCurrentSegmentOrganizationIndividualAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.GetCurrentSegmentOrganizationIndividualCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the current segment information for an interaction.
            </summary>
            <param name="callIdKey">The call ID key.</param>
            <param name="ICUserId">The IC user ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualDetails(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.IndividualDetails"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.IndividualDetails"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualDetailsAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.GetIndividualDetailsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.IndividualDetails"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetICUserIndividualInformation(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.ICUserIndividualInformation"/> for an Individual.
            </summary>
            <param name="icUserId">The IC User ID of the Individual.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.ICUserIndividualInformation"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetICUserIndividualInformationAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.GetICUserIndividualInformationCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.ICUserIndividualInformation"/>.
            </summary>
            <param name="icUserId">The IC User ID of the Individual.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedIndividualAddress(System.String,System.String)">
            <summary>
            Gets the inherited <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedIndividualAddressAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.IndividualAddress}},System.Object)">
            <summary>
            Asynchronously gets the inherited <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedIndividualInteractionAddress(System.String,System.String)">
            <summary>
            Gets the inherited <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedIndividualInteractionAddressAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.IndividualInteractionAddress}},System.Object)">
            <summary>
            Asynchronously gets the inherited <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedLocationAddress(System.String)">
            <summary>
            Gets the inherited <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedLocationAddressAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.LocationAddress}},System.Object)">
            <summary>
            Asynchronously gets the inherited <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedLocationInteractionAddress(System.String)">
            <summary>
            Gets the inherited <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInheritedLocationInteractionAddressAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.LocationInteractionAddress}},System.Object)">
            <summary>
            Asynchronously gets the inherited <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetails(System.String,System.String)">
            <summary>
            Gets the interaction details.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.InteractionDetails"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetInteractionDetailsAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.GetInteractionDetailsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the interaction details.
            </summary>
            <param name="interactionId">The interaction ID.</param>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationDetails(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.LocationDetails"/> details.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Location"/> ID.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.LocationDetails"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationDetailsAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.GetLocationDetailsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.Location"/> details.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Location"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationDetails(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.OrganizationDetails"/>.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Organization"/>ID.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.OrganizationDetails"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationDetailsAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.GetOrganizationDetailsCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.OrganizationDetails"/>.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Organization"/>ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationById(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.Organization"/> by ID.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Organization"/> ID.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.Organization"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationByIdAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryResultCompletedEventArgs{ININ.IceLib.Tracker.Organization}},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.Organization"/> by ID.
            </summary>
            <param name="id">The <see cref="T:ININ.IceLib.Tracker.Organization"/> ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetPossibleDuplicateIndividual(System.String,System.String,System.String)">
            <summary>
            Gets the possible duplicate <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="lastName">Last name of <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="firstName">First name of <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="interactionAddressValue">The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <returns>The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetPossibleDuplicateIndividualAsync(System.String,System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.GetPossibleDuplicateIndividualCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously gets the possible duplicate <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="lastName">Last name of <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="firstName">First name of <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="interactionAddressValue">The <see cref="P:ININ.IceLib.Tracker.IndividualInteractionAddress.Value"/> of
            the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.ICUserModified(System.String)">
            <summary>
            Marks an IC user as modified.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.ICUserModifiedAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously marks an IC user as modified.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateIndividualTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">
            <summary>
            Adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this <see cref="T:ININ.IceLib.Tracker.Individual"/>, 
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> was added.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateIndividualTrackerAttributeAsync(ININ.IceLib.Tracker.TrackerAttribute,System.EventHandler{ININ.IceLib.Tracker.AddUpdateCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists, then it is updated, otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateInteractionTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">
            <summary>
            Adds or updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an interaction.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this interaction, 
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> was added.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateInteractionTrackerAttributeAsync(ININ.IceLib.Tracker.TrackerAttribute,System.EventHandler{ININ.IceLib.Tracker.AddUpdateCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously adds or updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an interaction.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this interaction,
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateLocationTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">
            <summary>
            Adds or updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for a <see cref="T:ININ.IceLib.Tracker.Location"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists <see cref="T:ININ.IceLib.Tracker.Location"/>, 
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> was added.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateLocationTrackerAttributeAsync(ININ.IceLib.Tracker.TrackerAttribute,System.EventHandler{ININ.IceLib.Tracker.AddUpdateCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously adds or updates a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for a <see cref="T:ININ.IceLib.Tracker.Location"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this <see cref="T:ININ.IceLib.Tracker.Location"/>,
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateOrganizationTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">
            <summary>
            Adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this <see cref="T:ININ.IceLib.Tracker.Organization"/>,
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> to add or update.</param>
            <returns><see langword="true"/> if the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> was added.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateOrganizationTrackerAttributeAsync(ININ.IceLib.Tracker.TrackerAttribute,System.EventHandler{ININ.IceLib.Tracker.AddUpdateCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously adds a <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> for an <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            If the <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> exists for this <see cref="T:ININ.IceLib.Tracker.Organization"/>,
            it is updated.  Otherwise it is added.
            </summary>
            <param name="trackerAttribute">The <see cref="T:ININ.IceLib.Tracker.TrackerAttribute"/> to add or update.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddAnnotation(ININ.IceLib.Tracker.Annotation)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.Annotation"/>.
            </summary>
            <param name="annotation">The <see cref="T:ININ.IceLib.Tracker.Annotation"/>.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddAnnotationAsync(ININ.IceLib.Tracker.Annotation,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.Annotation"/>.
            </summary>
            <param name="annotation">The <see cref="T:ININ.IceLib.Tracker.Annotation"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividualAddress(ININ.IceLib.Tracker.IndividualAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="individualAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividualAddressAsync(ININ.IceLib.Tracker.IndividualAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="individualAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividualInteractionAddress(ININ.IceLib.Tracker.IndividualInteractionAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="individualInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividualInteractionAddressAsync(ININ.IceLib.Tracker.IndividualInteractionAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="individualInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividual(ININ.IceLib.Tracker.Individual)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individual">The <see cref="T:ININ.IceLib.Tracker.Individual"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddIndividualAsync(ININ.IceLib.Tracker.Individual,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.String}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individual">The <see cref="T:ININ.IceLib.Tracker.Individual"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocationAddress(ININ.IceLib.Tracker.LocationAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="locationAddress">The <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocationAddressAsync(ININ.IceLib.Tracker.LocationAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="locationAddress">The <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocationInteractionAddress(ININ.IceLib.Tracker.LocationInteractionAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="locationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocationInteractionAddressAsync(ININ.IceLib.Tracker.LocationInteractionAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="locationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocation(ININ.IceLib.Tracker.Location)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.Location"/>.
            </summary>
            <param name="location">The <see cref="T:ININ.IceLib.Tracker.Location"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddLocationAsync(ININ.IceLib.Tracker.Location,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.String}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.Location"/>.
            </summary>
            <param name="location">The <see cref="T:ININ.IceLib.Tracker.Location"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganizationAddress(ININ.IceLib.Tracker.OrganizationAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.
            </summary>
            <param name="organizationAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganizationAddressAsync(ININ.IceLib.Tracker.OrganizationAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.
            </summary>
            <param name="organizationAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganizationInteractionAddress(ININ.IceLib.Tracker.OrganizationInteractionAddress)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            </summary>
            <param name="organizationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganizationInteractionAddressAsync(ININ.IceLib.Tracker.OrganizationInteractionAddress,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.Int64}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            </summary>
            <param name="organizationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganization(ININ.IceLib.Tracker.Organization)">
            <summary>
            Adds the <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="organization">The <see cref="T:ININ.IceLib.Tracker.Organization"/> to add.</param>
            <returns>The new ID.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.AddOrganizationAsync(ININ.IceLib.Tracker.Organization,System.EventHandler{ININ.IceLib.Tracker.NewIdCompletedEventArgs{System.String}},System.Object)">
            <summary>
            Asynchronously adds the <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="organization">The <see cref="T:ININ.IceLib.Tracker.Organization"/> to add.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.IsUnknownOrSystemIndividual(System.String)">
            <summary>
            Determines whether the specific <see cref="T:ININ.IceLib.Tracker.Individual"/> is unknown or a system <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <returns>
            	<see langword="true"/> if the specified Individual is recognized; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.IsUnknownOrSystemIndividualAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.IsUnknownOrSystemIndividualCompletedEventArgs},System.Object)">
            <summary>
            Asynchronously determines whether the specific <see cref="T:ININ.IceLib.Tracker.Individual"/> is unknown or a system <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individualId">The ID of the <see cref="T:ININ.IceLib.Tracker.Individual"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationNamesByName(System.Int64,System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see> by name.
            </summary>
            <param name="isPrivate">Whether it is private.</param>
            <param name="ownerId">The owner ID.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="locationName"><see cref="P:ININ.IceLib.Tracker.Location.Name"/> of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>If locationName is empty, all known <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see> are returned (while
            still considering isPrivate and ownerId).  Otherwise, locationName is treated like a wildcard.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationNamesByNameAsync(System.Int64,System.String,System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.LocationName}},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see> by name.
            </summary>
            <param name="isPrivate">Whether it is private.</param>
            <param name="ownerId">The owner ID.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="locationName"><see cref="P:ININ.IceLib.Tracker.Location.Name"/> of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <para>If locationName is empty, all known <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see> are returned (while
            still considering isPrivate and ownerId).  Otherwise, locationName is treated like a wildcard.</para> 
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationNamesByOrganizationId(System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see> by <see cref="T:ININ.IceLib.Tracker.Organization"/> ID.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.LocationName">LocationNames</see>.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetLocationNamesByOrganizationIdAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.LocationName}},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.Location"/> names by <see cref="T:ININ.IceLib.Tracker.Organization"/> ID.
            </summary>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationNamesByName(System.Int64,System.String,System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.Organization"/> names.
            </summary>
            <param name="isPrivate">Whether it is private.</param>
            <param name="ownerId">The owner ID.</param>
            <param name="organizationName">Name of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The <see cref="T:ININ.IceLib.Tracker.Organization"/> names.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>If organizationName is empty, all known <see cref="T:ININ.IceLib.Tracker.OrganizationName">OrganizationNames</see> are returned (while
            still considering isPrivate and ownerId).  Otherwise, organizationName is treated like a wildcard.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetOrganizationNamesByNameAsync(System.Int64,System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.OrganizationName}},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.Organization"/> names.
            </summary>
            <param name="isPrivate">Whether it is private.</param>
            <param name="ownerId">The owner ID.</param>
            <param name="organizationName">Name of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>If organizationName is empty, all known <see cref="T:ININ.IceLib.Tracker.OrganizationName">OrganizationNames</see> are returned (while
            still considering isPrivate and ownerId).  Otherwise, organizationName is treated like a wildcard.
            <ininAsyncMethodNote/>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetUsersCanViewInteractionOn(System.String,System.String)">
            <summary>
            Gets the <see cref="T:ININ.IceLib.Tracker.ICUserId">ICUserIds</see> that can view interactions for the 
            given <see cref="T:ININ.IceLib.Tracker.Location"/> and <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <returns>The IC User IDs.</returns>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetUsersCanViewInteractionOnAsync(System.String,System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.ICUserId}},System.Object)">
            <summary>
            Asynchronously gets the <see cref="T:ININ.IceLib.Tracker.ICUserId">ICUserIds</see> that can view interactions for the
            given <see cref="T:ININ.IceLib.Tracker.Location"/> and <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="locationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Location"/>.</param>
            <param name="organizationId">The ID of the <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualMultipartAccountCodes(System.String)">
            <summary>
            Gets all <see cref="T:ININ.IceLib.Tracker.MultipartAccountCode">Multipart account codes for an Individual.</see>.
            </summary>
            <param name="individualId">The ID of the Individual.</param>
            <returns>The MultipartAccountCodes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualMultipartAccountCodesAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.MultipartAccountCode}},System.Object)">
            <summary>
            Asynchronously gets all <see cref="T:ININ.IceLib.Tracker.MultipartAccountCode">Multipart account codes for an Individual.</see>.
            </summary>
            <param name="individualId">The ID of the Individual.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualMultipartAccountCodeMRUList(System.String)">
            <summary>
            Gets the most recently used <see cref="T:ININ.IceLib.Tracker.MultipartAccountCode">Multipart account codes for an Individual.</see>.
            </summary>
            <param name="individualId">The ID of the Individual.</param>
            <returns>The MultipartAccountCodes.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetIndividualMultipartAccountCodeMRUListAsync(System.String,System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.MultipartAccountCode}},System.Object)">
            <summary>
            Asynchronously gets the most recently used <see cref="T:ININ.IceLib.Tracker.MultipartAccountCode">Multipart account codes for an Individual.</see>.
            </summary>
            <param name="individualId">The ID of the Individual.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetAllMultipartAccountCodes">
            <summary>
            Gets all MultipartAccountCodes.
            </summary>
            <returns>A collection of <see cref="T:ININ.IceLib.Tracker.MultipartAccountCodeExtended"/> objects.</returns>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.GetAllMultipartAccountCodesAsync(System.EventHandler{ININ.IceLib.Tracker.QueryCollectionResultCompletedEventArgs{ININ.IceLib.Tracker.MultipartAccountCodeExtended}},System.Object)">
            <summary>
            Asynchronously gets all MultipartAccountCodes.
            </summary>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam /></param>
            <remarks><ininAsyncMethodNote /></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.SetIndividualImages(System.String)">
            <summary>
            Sets the image file for all IC users.
            </summary>
            <param name="image">The full UNC path of the image file.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>This method will set the same image file for <b>all</b> IC users.
            The supported image formats are .bmp, .jpg, .gif, .tif, .tiff, .png.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.SetIndividualImagesAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets the image file for all IC users.
            </summary>
            <param name="image">The full UNC path of the image file.</param>
            <param name="completedCallback">The callback to invoke when the asynchronous operation completes.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks>
            <ininAsyncMethodNote/>
            <para>This method will set the same image file for <b>all</b> IC users.
            The supported image formats are .bmp, .jpg, .gif, .tif, .tiff, .png.
            </para>
            </remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.SetIndividualUrls(System.String)">
            <summary>
            Sets the individual URLs.
            </summary>
            <param name="url">The URL.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.SetIndividualUrlsAsync(System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously sets individual URLs.
            </summary>
            <param name="url">The URL.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateAnnotation(ININ.IceLib.Tracker.Annotation)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.Annotation"/>.
            </summary>
            <param name="annotation">The <see cref="T:ININ.IceLib.Tracker.Annotation"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateAnnotationAsync(ININ.IceLib.Tracker.Annotation,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.Annotation"/>.
            </summary>
            <param name="annotation">The <see cref="T:ININ.IceLib.Tracker.Annotation"/>.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateApplicationIncidentId(System.String,System.String)">
            <summary>
            Updates the application incident ID.
            </summary>
            <param name="id">The ID.</param>
            <param name="applicationIncidentId">The application incident ID.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateApplicationIncidentIdAsync(System.String,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the application incident ID.
            </summary>
            <param name="id">The ID.</param>
            <param name="applicationIncidentId">The application incident ID.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividualAddress(ININ.IceLib.Tracker.IndividualAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="individualAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividualAddressAsync(ININ.IceLib.Tracker.IndividualAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/>.
            </summary>
            <param name="individualAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualAddress"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividualInteractionAddress(ININ.IceLib.Tracker.IndividualInteractionAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="individualInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividualInteractionAddressAsync(ININ.IceLib.Tracker.IndividualInteractionAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/>.
            </summary>
            <param name="individualInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.IndividualInteractionAddress"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividual(ININ.IceLib.Tracker.Individual)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individual">The <see cref="T:ININ.IceLib.Tracker.Individual"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividualAsync(ININ.IceLib.Tracker.Individual,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.Individual"/>.
            </summary>
            <param name="individual">The <see cref="T:ININ.IceLib.Tracker.Individual"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocationAddress(ININ.IceLib.Tracker.LocationAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="locationAddress">The <see cref="T:ININ.IceLib.Tracker.LocationAddress"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocationAddressAsync(ININ.IceLib.Tracker.LocationAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.LocationAddress"/>.
            </summary>
            <param name="locationAddress">The <see cref="T:ININ.IceLib.Tracker.LocationAddress"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocationInteractionAddress(ININ.IceLib.Tracker.LocationInteractionAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="locationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocationInteractionAddressAsync(ININ.IceLib.Tracker.LocationInteractionAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/>.
            </summary>
            <param name="locationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.LocationInteractionAddress"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocation(ININ.IceLib.Tracker.Location)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.Location"/>.
            </summary>
            <param name="location">The <see cref="T:ININ.IceLib.Tracker.Location"/> to update.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateLocationAsync(ININ.IceLib.Tracker.Location,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.Location"/>.
            </summary>
            <param name="location">The <see cref="T:ININ.IceLib.Tracker.Location"/> to update.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganizationAddress(ININ.IceLib.Tracker.OrganizationAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.
            </summary>
            <param name="organizationAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganizationAddressAsync(ININ.IceLib.Tracker.OrganizationAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.
            </summary>
            <param name="organizationAddress"><see cref="T:ININ.IceLib.Tracker.OrganizationAddress"/>.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganizationInteractionAddress(ININ.IceLib.Tracker.OrganizationInteractionAddress)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            </summary>
            <param name="organizationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganizationInteractionAddressAsync(ININ.IceLib.Tracker.OrganizationInteractionAddress,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.
            </summary>
            <param name="organizationInteractionAddress">The <see cref="T:ININ.IceLib.Tracker.OrganizationInteractionAddress"/>.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganization(ININ.IceLib.Tracker.Organization)">
            <summary>
            Updates the <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="organization">The <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganizationAsync(ININ.IceLib.Tracker.Organization,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the <see cref="T:ININ.IceLib.Tracker.Organization"/>.
            </summary>
            <param name="organization">The <see cref="T:ININ.IceLib.Tracker.Organization"/>.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateUserSecurity(System.String,System.Int64,System.String)">
            <summary>
            Updates the user security.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="securityChecksum">The security checksum.</param>
            <param name="viewableUsers">The viewable users.</param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The Session has been disposed.</exception>
            <exception cref="T:ININ.IceLib.IceLibLicenseException">The client does not have the license required to perform this operation.</exception>
            <exception cref="T:ININ.IceLib.IceLibException">An error occurred while executing the transaction.  See
            the <see cref="P:ININ.IceLib.Data.TransactionBuilder.TransactionClient.LastError">LastError</see> property
            of this object's <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient">TransactionClient</see>
            for more information.</exception>
        </member>
        <member name="M:ININ.IceLib.Tracker.TrackerUser.UpdateUserSecurityAsync(System.String,System.Int64,System.String,System.ComponentModel.AsyncCompletedEventHandler,System.Object)">
            <summary>
            Asynchronously updates the user security.
            </summary>
            <param name="ICUserId">The IC user ID.</param>
            <param name="securityChecksum">The security checksum.</param>
            <param name="viewableUsers">The viewable users.</param>
            <param name="completedCallback">The completed callback.</param>
            <param name="userState"><ininAsyncStateParam/></param>
            <exception cref="T:System.ArgumentNullException">A parameter is <see langword="null"/>.</exception>
            <remarks><ininAsyncMethodNote/></remarks>
        </member>
        <member name="P:ININ.IceLib.Tracker.TrackerUser.TransactionClient">
             <summary>
             Gets the <see cref="T:ININ.IceLib.Data.TransactionBuilder.TransactionClient"/>.
            </summary>
             <value>The TransactionClient.</value>
        </member>
        <member name="T:ININ.IceLib.Tracker.UserTrackerRightsSettings">
            <summary>
            Represents the basic user rights settings for an IC user. User rights are set in
            <i>Interaction Administrator</i> at the Default User, User or Workgroup level.
            </summary>
            <remarks><note>The strings for the 
            <see cref="M:ININ.IceLib.People.UserSettings.StartWatching(System.String[])"/>and 
            <see cref="M:ININ.IceLib.People.UserSettings.ChangeWatchedAttributes(System.String[],System.String[],System.Boolean)"/> methods for this
            derived class are defined in 
            <see cref="T:ININ.IceLib.Tracker.UserTrackerRightsAttributes"/> however custom strings may also be
            used for custom handlers.</note></remarks>
            <doccompleted/>
        </member>
        <member name="M:ININ.IceLib.Tracker.UserTrackerRightsSettings.#ctor(ININ.IceLib.People.PeopleManager)">
            <summary>
            Initializes a new instance of the <see cref="T:ININ.IceLib.Tracker.UserTrackerRightsSettings"/> class for
            the current session user.
            </summary>
            <param name="peopleManager">A <see cref="T:ININ.IceLib.People.PeopleManager"/> instance.</param>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanAddIndividuals">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddIndividuals"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddIndividual(ININ.IceLib.Tracker.Individual)">add individuals</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanUpdateIndividuals">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateIndividuals"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividual(ININ.IceLib.Tracker.Individual)">update individuals</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanDeleteIndividuals">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanDeleteIndividuals"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividual(System.String,System.Boolean)">delete individuals</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanViewNonParticipantInteractions">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanViewNonParticipantInteractions"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="T:ININ.IceLib.Tracker.TrackerSearch">view Interactions</see> when they are not a participant; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanUpdateInteractions">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateInteractions"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateInteractionTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">update interactions</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanAddOrganizations">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddOrganizations"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddOrganization(ININ.IceLib.Tracker.Organization)">add organizations</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanUpdateOrganizations">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateOrganizations"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganization(ININ.IceLib.Tracker.Organization)">update organizations</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanDeleteOrganizations">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanDeleteOrganizations"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can <see cref="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganization(System.String,System.Boolean,System.Boolean)">delete organizations</see>; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanAddPrivateIndividuals">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddPrivateIndividuals"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can add private individuals; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanPerformTrackerAdministration">
            <summary>
            Gets the <see cref="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanPerformTrackerAdministration"/> value.
            </summary>
            <value>
            	<see langword="true"/> if this instance can perform Tracker administration; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:ININ.IceLib.NotCachedException">The associated attribute is not being watched.</exception>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.CanUseRelatedInteractionsPage">
            <summary>
            Gets a value indicating whether this instance can use the related interactions page.
            </summary>
            <value>
            	<see langword="true"/> if this instance can use the related interactions page; otherwise, <see langword="false"/>.
            </value>
            <icversion>3.0 SU 6</icversion>
        </member>
        <member name="P:ININ.IceLib.Tracker.UserTrackerRightsSettings.ViewUserInteractionHistory">
            <summary>
            Gets a value indicating which users' interaction history the user has permission to view.
            </summary>
            <value>
            	A read only collection of string IC User Ids whose interaction history the user has permission to view.
            </value>
            <icversion>3.0 SU 6</icversion>
        </member>
        <member name="T:ININ.IceLib.Tracker.UserTrackerRightsAttributes">
            <summary>
            Attribute strings for the <see cref="T:ININ.IceLib.Tracker.UserTrackerRightsSettings"></see> watched class.
            </summary>
            <remarks>The attribute names specified in this class are used in conjunction
            with the synchronous and asynchronous StartWatching and ChangeWatchedAttributes
            methods in the <see cref="T:ININ.IceLib.Tracker.UserTrackerRightsSettings"/> class.</remarks>
            <seealso cref="T:ININ.IceLib.Tracker.UserTrackerRightsSettings"/>
            <doccompleted/>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddIndividuals">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddIndividual(ININ.IceLib.Tracker.Individual)">add individuals</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateIndividuals">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.UpdateIndividual(ININ.IceLib.Tracker.Individual)">update individuals</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanDeleteIndividuals">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.DeleteIndividual(System.String,System.Boolean)">delete individuals</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanViewNonParticipantInteractions">
            <summary>
            Allows the user to <see cref="T:ININ.IceLib.Tracker.TrackerSearch">view Interactions</see> when they are not a participant.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateInteractions">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddUpdateInteractionTrackerAttribute(ININ.IceLib.Tracker.TrackerAttribute)">update interactions</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddOrganizations">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.AddOrganization(ININ.IceLib.Tracker.Organization)">add organizations</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanUpdateOrganizations">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.UpdateOrganization(ININ.IceLib.Tracker.Organization)">update organizations</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanDeleteOrganizations">
            <summary>
            Allows the user to <see cref="M:ININ.IceLib.Tracker.TrackerUser.DeleteOrganization(System.String,System.Boolean,System.Boolean)">delete organizations</see>.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanAddPrivateIndividuals">
            <summary>
            Allows the user to add private individuals.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.CanPerformTrackerAdministration">
            <summary>
            Allows the user to perform Tracker administration.
            </summary>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.AllowRelatedInteractionsPage">
            <summary>
            Allows the user to use the related interactions page.
            </summary>
            <icversion>3.0 SU 6</icversion>
        </member>
        <member name="F:ININ.IceLib.Tracker.UserTrackerRightsAttributes.ViewUserInteractionHistory">
            <summary>
            Indicates which users' interaction history the user has permission to view.
            </summary>
            <icversion>3.0 SU 6</icversion>
        </member>
    </members>
</doc>
